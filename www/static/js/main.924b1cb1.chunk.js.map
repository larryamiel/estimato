{"version":3,"sources":["images/shards-dashboards-logo.svg","flux/constants.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","layouts/Default.js","components/common/PageTitle.js","components/add-new-estimation/AddNewEstimationForm.js","views/Estimations.js","views/AddNewEstimation.js","components/earthworks-estimation/ColumnFootingDetails.js","components/earthworks-estimation/WallFootingDetails.js","components/earthworks-estimation/GravelBedding.js","components/earthworks-estimation/SepticTankDetails.js","components/earthworks-estimation/OnFill.js","components/earthworks-estimation/SlabDetail.js","components/earthworks-estimation/Manpower.js","components/earthworks-estimation/Summary.js","views/Estimations/Earthworks.js","components/formworks-estimation/ColumnDetails.js","components/formworks-estimation/BeamDetails.js","components/formworks-estimation/SlabDetails.js","components/formworks-estimation/Manpower.js","components/formworks-estimation/PlywoodAndLumber.js","components/formworks-estimation/MaterialCosts.js","components/formworks-estimation/Summary.js","components/concrete-estimation/ColumnDetails.js","components/concrete-estimation/ColumnFootingDetails.js","components/concrete-estimation/WallFootingDetails.js","components/concrete-estimation/BeamDetails.js","components/concrete-estimation/SlabDetails.js","components/concrete-estimation/SepticTankDetails.js","components/concrete-estimation/ConcreteStairDetails.js","components/concrete-estimation/CementMix.js","components/concrete-estimation/Manpower.js","components/concrete-estimation/MaterialCosts.js","components/concrete-estimation/Summary.js","components/masonry-estimation/Walls.js","components/masonry-estimation/Manpower.js","components/masonry-estimation/MaterialCosts.js","views/Estimations/Masonry.js","routes.js","views/Estimations/Formworks.js","views/Estimations/Concrete.js","withTracker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","to","htmlBefore","htmlAfter","store","Store","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","registerToActions","bind","assertThisInitialized","toggleSidebar","register","actionType","_ref","payload","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","props","handleClick","dispatch","react_default","a","createElement","className","href","onClick","React","Component","MainNavbar","layout","stickyTop","classes","classNames","shards_react_es","type","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","id","maxWidth","src","require","alt","SidebarSearch","display","minHeight","seamless","placeholder","aria-label","SidebarNavItem","item","tag","RouteNavLink","dangerouslySetInnerHTML","__html","SidebarNavItems","state","getSidebarItems","onChange","addChangeListener","removeChangeListener","setState","objectSpread","items","map","idx","MainSidebar_SidebarNavItem","key","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","DefaultLayout","children","noNavbar","noFooter","fluid","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","AddNewEstimationForm","flush","form","htmlFor","Estimations","noGutters","common_PageTitle","add_new_estimation_AddNewEstimationForm","AddNewEstimation","ColumnFootingDetails","_useState","useState","_useState2","slicedToArray","columnType","setColumnType","_useState3","_useState4","footingType","setFootingType","_useState5","x","y","z","_useState6","columnRectangular","setColumnRectangular","_useState7","d","_useState8","columnCircular","setColumnCircular","_useState9","_useState10","footingRectangular","setFootingReactangular","_useState11","_useState12","footingCircular","setFootingCircular","_useState13","_useState14","columnCount","setColumnCount","useEffect","setEarthworkValues","values","columnFootingValues","index","small","incrementColumnFootingFormCount","e","target","value","xxsm","object","WallFootingDetails","depthCHB","setDepthCHB","depthWallFooting","setDepthWallFooting","widthFooting","setWidthFooting","wallPerimeter","setWallPerimeter","wallFootingValues","incrementWallFootingFormCount","GravelBedding","gravelBeddingDepth","setGravelBeddingDepth","gravelBeddingValues","SepticTankDetails","septicTank","setSepticTank","septicTankValues","incrementSepticTankFormCount","height","area","onFill","setOnFill","onFillValues","incrementOnFillFormCount","SlabDetail","slabDetailArea","setSlabDetailArea","slabDetailValues","Manpower","numberLaborer","setNumberLaborer","numberForeman","setNumberForeman","laborerWage","setLaborerWage","foremanWage","setForemanWage","manPowerValues","Summary","console","log","summary","volume_for_excavation","toFixed","volume_for_backfill","volume_for_gravel_bedding","manpower","duration","excavation","backfill","gravel_bedding","labor_cost","Earthworks","summaryView","setSummaryView","columnFootingFormCount","setColumnFootingFormCount","wallFootingFormCount","setWallFootingFormCount","septicTankFormCount","setSpeticTankFormCount","onFillFormCount","setOnFillFormCount","earthworksValues","column_footing","rectangular","circular","wall_footing","plumbing","on_fill","total","slab","solutionValues","setSolutionValues","count","earthworks_estimation_Summary","icon","toConsumableArray","Array","i","earthworks_estimation_ColumnFootingDetails","earthworks_estimation_WallFootingDetails","earthworks_estimation_GravelBedding","earthworks_estimation_SepticTankDetails","OnFill","earthworks_estimation_SlabDetail","earthworks_estimation_Manpower","septic_tank","slab_detail","forEach","result","Math","ceil","ColumnDetails","undefined","columnHeight","setColumnHeight","setFormWorkValues","columnDetailsValues","incrementColumnFormCount","BeamDetails","beamDimensions","setBeamDimensions","length","amount","beamValues","setBeamValues","beamCount","setBeamCount","beamDetailsValues","beamsDimensions","incrementBeamFormCount","dimensions","SlabDetails","horizontal","vertical","slabValues","setSlabValues","slabCount","setSlabCount","slabDetailsValues","incrementSlabFormCount","numberSkilled","setNumberSkilled","skilledWage","setSkilledWage","manpowerValues","PlywoodAndLumber","size_of_plywood","wood_frame_size","wood_frame_thickness","lumber_size","diagonal","metal_sheets","spacing_for_vertical_ribs","length_of_steel_bar","palValues","setPalValues","plywoodAndLumberValues","MaterialCosts","plywood","wood_frame","lumber","costValues","setCostValues","materialCostsValues","column","total_number_of_plywood","beam","column_scaffolding","beam_scaffolding","slab_scaffolding","formworks","material_summary","data","cost","wood_frames","setConcreteValues","wallFootingDepth","setWallFootingDepth","wallFootingWidth","setWallFootingWidth","slabThickness","setSlabThickness","width","depth","thickness","topSlabDetails","setTopSlabDetails","bottomSlabDetails","setBottomSlabDetails","ConcreteStairDetails","rise_length","run_length","height_of_stair","width_of_stair","length_of_stair","waistlength_thickness","landing","thickness_of_landing","landing_width","landing_length","concreteStairValues","setConcreteStairValues","landingCount","setLandingCount","classMixture","cementBag","proportions","cementMixValues","setCementMixValues","cement_bags","sand","gravel","required","cement","concrete_stairs","concreting","price","Walls","wallHeight","size_of_CHB","cm","inches","plasterThickness","doubleSided","reinforcing_bars","vertical_spacing","horizontal_spacing","rebar_length","tie_wire_length","rebar_diameter","door_window_gross_area","doors","windows","setValues","setMasonryValues","wallsValues","masonryValues","Masonry","routes","path","exact","component","Redirect","columnFormCount","setColumnFormCount","beamFormCount","setBeamFormCount","slabFormCount","setSlabFormCount","frame_size","formworksArea","total_number_of_sheet","vertical_support","circumferential_ties","wood_frame_multiplier","multiplier","column_scaffolding_multipliers","2\"x2\"","2\"x3\"","2\"x4\"","total_length","area_needed","beam_scaffolding_multipliers","slab_scaffolding_multipliers","pieces","boardfoot","quantity_of_lumber_scaffolding","flooring_slab","boardfoot_of_wood_for_column","1/4\" (6mm)","1/2\" (12mm)","quantity_of_metal_form_for_circular_column","0.90 x 2.40","number_of_sheets","length_of_vertical_ribs","15 cm","20 cm","length_of_circumferential_ties","1.20 x 2.40","formworkValues","formworks_estimation_Summary","formworks_estimation_ColumnDetails","formworks_estimation_BeamDetails","formworks_estimation_SlabDetails","formworks_estimation_PlywoodAndLumber","formworks_estimation_Manpower","formworks_estimation_MaterialCosts","plywoodAndLumber","materialCosts","ee","ii","res","columnFootingCount","setColumnFootingCount","wallFootingCount","setWallFootingCount","concreteStairFormCount","setConcreteStairFormCount","_useState15","_useState16","concreteValues","_useState17","multipliers","total_volume","volume_of_landing","volume_of_first_block","volume_of_second_block","length_of_waist","volume_of_waist","number_of_steps","volume_of_1_step","volume_of_n_steps","total_pcc_volume","volumetric_method","class_mixture","AA","cement_bag","40kg","50kg","A","B","C","_useState18","incrementColumnFootingCount","incrementWallFootingCount","incrementConcreteStairFormCount","concrete_estimation_Summary","concrete_estimation_ColumnDetails","concrete_estimation_ColumnFootingDetails","concrete_estimation_WallFootingDetails","concrete_estimation_BeamDetails","concrete_estimation_SlabDetails","concrete_estimation_SepticTankDetails","concrete_estimation_ConcreteStairDetails","CementMix","concrete_estimation_Manpower","concrete_estimation_MaterialCosts","concrete_stair","cement_mix","material","sqrt","pow","wallFormCount","setWallFormCount","incrementWallFormCount","masonry_estimation_Walls","masonry_estimation_Manpower","masonry_estimation_MaterialCosts","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","options","arguments","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","_Component","HOC","apply","inherits","createClass","location","pathname","search","concat","prevProps","currentPage","nextPage","App","BrowserRouter","basename","route","Route","Boolean","window","hostname","match","renderReactDom","ReactDOM","render","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qSCAzBC,EACL,SADKA,EAEG,iBCAHC,EAAA,UAAIC,oBCIfC,EAAS,CACXC,aAAa,EACbC,SCPO,CACL,CACEC,MAAO,cACPC,GAAI,eACJC,WAAY,qCACZC,UAAW,IAEb,CACEH,MAAO,iBACPC,GAAI,mBACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,4BACPC,GAAI,0BACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,2BACPC,GAAI,yBACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,0BACPC,GAAI,wBACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,yBACPC,GAAI,uBACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,4BACPC,GAAI,0BACJC,WAAY,oCACZC,UAAW,MDUFC,EAAA,gBAxCb,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,kBAAoBP,EAAKO,kBAAkBC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKU,cAAgBV,EAAKU,cAAcF,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAErBV,EAAWqB,SAASX,EAAKO,kBAAkBC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,MANRA,oFAS6B,IAAvBY,EAAuBC,EAAvBD,WAAuBC,EAAXC,QAC9B,OAAQF,GACN,KAAKG,EACHZ,KAAKO,yDAOTnB,EAAOC,aAAeD,EAAOC,YAC7BW,KAAKa,KAAKD,0CAIV,OAAOxB,EAAOC,sDAId,OAAOD,EAAOE,mDAGEwB,GAChBd,KAAKe,GAAGH,EAAkBE,gDAGPA,GACnBd,KAAKgB,eAAeJ,EAAkBE,UArCtBG,iBEkBLC,cAxBb,SAAAA,EAAYC,GAAO,IAAAtB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IACjBrB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAf,KAAAH,KAAMmB,KAEDC,YAAcvB,EAAKuB,YAAYf,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAHFA,6EAOjBV,EAAWkC,SAAS,CAClBZ,WAAYG,qCAKd,OACEU,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAIC,QAAS3B,KAAKoB,YAAaK,UAAU,uFAC/CH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,mBAlBiBG,IAAMC,WCG3BC,EAAa,SAAApB,GAA2BA,EAAxBqB,OAAwB,IAAhBC,EAAgBtB,EAAhBsB,UACtBC,EAAUC,IACd,cACA,WACAF,GAAa,cAGf,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAWQ,GACdX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWV,UAAU,OACnBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,QAAQX,UAAU,0CAC7BH,EAAAC,EAAAC,cAACa,EAAD,UAkBVP,EAAWQ,aAAe,CACxBN,WAAW,GAGEF,gBClCTS,cACJ,SAAAA,EAAYpB,GAAO,IAAAtB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAuC,IACjB1C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAyC,GAAApC,KAAAH,KAAMmB,KAEDqB,oBAAsB3C,EAAK2C,oBAAoBnC,KAAzBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAHVA,qFAOjBV,EAAWkC,SAAS,CAClBZ,WAAYG,qCAIP,IACC6B,EAAiBzC,KAAKmB,MAAtBsB,aACR,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEV,UAAU,gEACVW,KAAK,SAELd,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEV,UAAU,aACVC,KAAK,IACLgB,MAAO,CAAEC,WAAY,SAErBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OACEoB,GAAG,YACHnB,UAAU,gCACViB,MAAO,CAAEG,SAAU,QACnBC,IAAKC,EAAQ,KACbC,IAAI,cAEJP,GACAnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAAhB,cAONH,EAAAC,EAAAC,cAAA,KACEC,UAAU,iDACVE,QAAS3B,KAAKwC,qBAEdlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,oBA9CoBG,IAAMC,WA6DtCU,EAAkBD,aAAe,CAC/BG,cAAc,GAGDF,QC9DAU,EAAA,kBACb3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMV,UAAU,wEAAwEiB,MAAO,CAAEQ,QAAS,OAAQC,UAAW,SAC3H7B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYiB,UAAQ,EAAC3B,UAAU,QAC7BH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBC,KAAK,WACpBd,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WAEFH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEV,UAAU,gBACV4B,YAAY,0BACZC,aAAW,wBCaNC,EA3BQ,SAAA7C,GAAA,IAAG8C,EAAH9C,EAAG8C,KAAH,OACrBlC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASsB,IAAKC,IAAclE,GAAIgE,EAAKhE,IAClCgE,EAAK/D,YACJ6B,EAAAC,EAAAC,cAAA,OACEC,UAAU,mCACVkC,wBAAyB,CAAEC,OAAQJ,EAAK/D,cAG3C+D,EAAKjE,OAAS+B,EAAAC,EAAAC,cAAA,YAAOgC,EAAKjE,OAC1BiE,EAAK9D,WACJ4B,EAAAC,EAAAC,cAAA,OACEC,UAAU,mCACVkC,wBAAyB,CAAEC,OAAQJ,EAAK9D,gBC4BnCmE,cAvCb,SAAAA,EAAY1C,GAAO,IAAAtB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6D,IACjBhE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+D,GAAA1D,KAAAH,KAAMmB,KAED2C,MAAQ,CACXxE,SAAUM,EAAMmE,mBAGlBlE,EAAKmE,SAAWnE,EAAKmE,SAAS3D,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAPCA,oFAWjBD,EAAMqE,kBAAkBjE,KAAKgE,yDAI7BpE,EAAMsE,qBAAqBlE,KAAKgE,6CAIhChE,KAAKmE,SAALrE,OAAAsE,EAAA,EAAAtE,CAAA,GACKE,KAAK8D,MADV,CAEExE,SAAUM,EAAMmE,sDAIX,IACWM,EAAUrE,KAAK8D,MAAzBxE,SACR,OACEgC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,+BACZ4C,EAAMC,IAAI,SAACd,EAAMe,GAAP,OACTjD,EAAAC,EAAAC,cAACgD,EAAD,CAAgBC,IAAKF,EAAKf,KAAMA,eAhCd5B,IAAMC,WCK9B6C,cACJ,SAAAA,EAAYvD,GAAO,IAAAtB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA0E,IACjB7E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4E,GAAAvE,KAAAH,KAAMmB,KAED2C,MAAQ,CACXzE,aAAa,EACbsF,gBAAiB/E,EAAMmE,mBAGzBlE,EAAKmE,SAAWnE,EAAKmE,SAAS3D,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KARCA,oFAYjBD,EAAMqE,kBAAkBjE,KAAKgE,yDAI7BpE,EAAMsE,qBAAqBlE,KAAKgE,6CAIhChE,KAAKmE,SAALrE,OAAAsE,EAAA,EAAAtE,CAAA,GACKE,KAAK8D,MADV,CAEEzE,YAAaO,EAAMgF,eACnBD,gBAAiB/E,EAAMmE,sDAKzB,IAAM9B,EAAUC,IACd,eACA,OACA,SACAlC,KAAK8D,MAAMzE,aAAe,QAG5B,OACEiC,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEsB,IAAI,QACJhC,UAAWQ,EACX4C,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,IAEZxD,EAAAC,EAAAC,cAACwD,EAAD,CAAmBvC,aAAczC,KAAKmB,MAAMsB,eAC5CnB,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAACyD,EAAD,cA7CkBrD,IAAMC,WA0DhC6C,EAAYpC,aAAe,CACzBG,cAAc,GAGDiC,QClETQ,EAAgB,SAAAxE,GAAA,IAAGyE,EAAHzE,EAAGyE,SAAUC,EAAb1E,EAAa0E,SAAb1E,EAAuB2E,SAAvB,OACpB/D,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,GACdhE,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAC+D,EAAD,MACAjE,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEV,UAAU,mBACVoD,GAAI,CAAEC,KAAM,GAAIU,OAAQ,GACxBT,GAAI,CAAED,KAAM,EAAGU,OAAQ,GACvBC,GAAG,KACHhC,IAAI,SAEF2B,GAAY9D,EAAAC,EAAAC,cAACkE,EAAD,MACbP,MAiBTD,EAAc5C,aAAe,CAC3B8C,UAAU,EACVC,UAAU,GAGGH,gBCTAS,EA3BG,SAAAjF,GAA8C,IAA3CnB,EAA2CmB,EAA3CnB,MAAOqG,EAAoClF,EAApCkF,SAAUnE,EAA0Bf,EAA1Be,UAAcoE,EAAY/F,OAAAgG,EAAA,EAAAhG,CAAAY,EAAA,kCACxDuB,EAAUC,IACdT,EACA,cACA,eACA,WAGF,OACEH,EAAAC,EAAAC,cAACW,EAAA,EAADrC,OAAAiG,OAAA,CAAKC,GAAG,KAAKP,GAAG,IAAIhE,UAAWQ,GAAc4D,GAC3CvE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAgCmE,GAChDtE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAclC,KCuBnB0G,iBAzBc,kBAC3B3E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACd5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACP7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACrBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACES,GAAG,sBACHR,KAAK,OACLiB,YAAY,2BAKlB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,UAAb,gCCPGiE,MAlBf,SAAqBlF,GACjB,OACIG,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIlG,MAAM,cAAcqG,SAAS,iBAAiBnE,UAAU,kBAI9EH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACgF,EAAD,UCKLC,EAhBU,kBACvBnF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEzBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACvBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIlG,MAAM,qBAAqBqG,SAAS,cAAcnE,UAAU,kBAGhFH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KAEEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK0C,GAAG,KAAKE,GAAG,MACdzD,EAAAC,EAAAC,cAACgF,EAAD,wBCgKOE,MAnKf,SAA8BvF,GAAO,IAAAwF,EACGC,mBAAS,eADZC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GAC1BI,EAD0BF,EAAA,GACdG,EADcH,EAAA,GAAAI,EAEKL,mBAAS,eAFdM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAE1BE,EAF0BD,EAAA,GAEbE,EAFaF,EAAA,GAAAG,EAIiBT,mBAAS,CAACU,EAAG,GAAIC,EAAG,GAAIC,EAAG,KAJ5CC,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAI1BK,EAJ0BD,EAAA,GAIPE,EAJOF,EAAA,GAAAG,EAKWhB,mBAAS,CAACiB,EAAG,GAAIL,EAAG,KAL/BM,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAK1BG,EAL0BD,EAAA,GAKVE,EALUF,EAAA,GAAAG,EAOoBrB,mBAAS,CAACU,EAAG,GAAIC,EAAG,GAAIC,EAAG,KAP/CU,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAO1BE,EAP0BD,EAAA,GAONE,EAPMF,EAAA,GAAAG,EAQazB,mBAAS,CAACiB,EAAG,GAAIL,EAAG,KARjCc,EAAAxI,OAAAgH,EAAA,EAAAhH,CAAAuI,EAAA,GAQ1BE,EAR0BD,EAAA,GAQTE,EARSF,EAAA,GAAAG,EAUK7B,qBAVL8B,EAAA5I,OAAAgH,EAAA,EAAAhH,CAAA2I,EAAA,GAU1BE,EAV0BD,EAAA,GAUbE,EAVaF,EAAA,GA4BjC,OAhBAG,oBAAU,WACN1H,EAAM2H,mBAAmB,SAAAC,GAWrB,OAVAA,EAAOC,oBAAoB7H,EAAM8H,OAAS,CACtClC,WAAYA,EACZI,YAAaA,EACbO,kBAAmBA,EACnBK,eAAgBA,EAChBI,mBAAoBA,EACpBI,gBAAiBA,EACjBI,YAAaA,GAGVI,KAEZ,CAAChC,EAAYI,EAAaO,EAAmBK,EAAgBI,EAAoBI,EAAiBI,IAGjGrH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,0BAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOR,EAAMgI,oCAAoC7H,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAE1HH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOC,QAAQ1G,GAAG,yBACzDtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKK,gBAAfvC,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIzB,EAAqB,SAAA6B,GAAsC,OAA3BA,EAAOlC,EAAI8B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,8BAA8BS,YAAY,uBAExJ/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIzB,EAAqB,SAAA6B,GAAsC,OAA3BA,EAAOjC,EAAI6B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,8BAA8BS,YAAY,uBAExJ/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIzB,EAAqB,SAAA6B,GAAsC,OAA3BA,EAAOhC,EAAI4B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,8BAA8BS,YAAY,wBAK/I,aAAf0D,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,gBACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,2BAA2BS,YAAY,uBAEjD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,4BAAf,aACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,wBAK3D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,0BAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIhC,EAAegC,EAAEC,OAAOC,QAAQ1G,GAAG,0BAC1DtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKM,gBAAhBnC,GACE7F,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gCAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIhB,EAAuB,SAAAoB,GAAsC,OAA3BA,EAAOlC,EAAI8B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,+BAA+BS,YAAY,uBAE3J/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gCAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIhB,EAAuB,SAAAoB,GAAsC,OAA3BA,EAAOjC,EAAI6B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,+BAA+BS,YAAY,uBAE3J/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gCAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIhB,EAAuB,SAAAoB,GAAsC,OAA3BA,EAAOhC,EAAI4B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,+BAA+BS,YAAY,wBAKjJ,aAAhB8D,GACE7F,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,6BAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBb,EAAmB,SAAAgB,GAEf,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,4BAA4BS,YAAY,uBAElD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,6BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBb,EAAmB,SAAAgB,GAEf,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,4BAA4BS,YAAY,wBAK1D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,sBAAsBS,YAAY,qCC5FtIoG,MA5Df,SAA4BtI,GAAO,IAAAwF,EACCC,mBAAS,IADVC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACxB+C,EADwB7C,EAAA,GACd8C,EADc9C,EAAA,GAAAI,EAEiBL,mBAAS,IAF1BM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAExB2C,EAFwB1C,EAAA,GAEN2C,EAFM3C,EAAA,GAAAG,EAGST,mBAAS,IAHlBa,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGxByC,EAHwBrC,EAAA,GAGVsC,EAHUtC,EAAA,GAAAG,EAIWhB,mBAAS,IAJpBkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAIxBoC,EAJwBlC,EAAA,GAITmC,EAJSnC,EAAA,GAmB/B,OAbAe,oBAAU,WACN1H,EAAM2H,mBAAmB,SAAAC,GAQrB,OAPAA,EAAOmB,kBAAkB/I,EAAM8H,OAAS,CACpCS,SAAUA,EACVE,iBAAkBA,EAClBE,aAAcA,EACdE,cAAeA,GAGZjB,KAEZ,CAACW,EAAUE,EAAkBE,EAAcE,IAG1C1I,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,wBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOR,EAAMgJ,kCAAkC7I,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAExHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,6BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GAAC,OAAIO,EAAYP,EAAEC,OAAOC,QAAQjG,YAAY,2BAE3G/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,6BAAf,6BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,4BAA4BoB,SAAU,SAAAoF,GAAC,OAAIS,EAAoBT,EAAEC,OAAOC,QAAQjG,YAAY,4BAGhI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,uBAAuBoB,SAAU,SAAAoF,GAAC,OAAIW,EAAgBX,EAAEC,OAAOC,QAAQjG,YAAY,2BAEnH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,wBAAwBoB,SAAU,SAAAoF,GAAC,OAAIa,EAAiBb,EAAEC,OAAOC,QAAQjG,YAAY,uCCR1I+G,MAxCf,SAAuBjJ,GAAO,IAAAwF,EAC0BC,qBAD1BC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACnB0D,EADmBxD,EAAA,GACCyD,EADDzD,EAAA,GAa1B,OAVAgC,oBAAU,WACN1H,EAAM2H,mBAAmB,SAAAC,GAKrB,OAJAA,EAAOwB,oBAAsB,CACzBF,mBAAoBA,GAGjBtB,KAEZ,CAACsB,IAGA/I,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,2BAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,0BAA0BoB,SAAU,SAAAoF,GAAC,OAAIkB,EAAsBlB,EAAEC,OAAOC,QAAQjG,YAAY,4CCoBjJmH,MAhDf,SAA2BrJ,GAAO,IAAAwF,EACMC,mBAAS,CAACU,EAAG,GAAIC,EAAG,GAAIC,EAAG,KADjCX,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACvB8D,EADuB5D,EAAA,GACX6D,EADW7D,EAAA,GAa9B,OAVAgC,oBAAU,WACN1H,EAAM2H,mBAAmB,SAAAC,GAKrB,OAJAA,EAAO4B,iBAAiBxJ,EAAM8H,OAAS,CACnCwB,WAAYA,GAGT1B,KAEZ,CAAC0B,IAGAnJ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,uBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOR,EAAMyJ,iCAAiCtJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAEvHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACT7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACZH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIsB,EAAc,SAAAlB,GAAsC,OAA3BA,EAAOlC,EAAI8B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,mBAAmBS,YAAY,uBAEtI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIsB,EAAc,SAAAlB,GAAsC,OAA3BA,EAAOjC,EAAI6B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,mBAAmBS,YAAY,uBAEtI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIsB,EAAc,SAAAlB,GAAsC,OAA3BA,EAAOhC,EAAI4B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,mBAAmBS,YAAY,+BCQ/JmH,MA5Cf,SAA2BrJ,GAAO,IAAAwF,EACFC,mBAAS,CAACiE,OAAQ,GAAIC,KAAM,KAD1BjE,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACvBoE,EADuBlE,EAAA,GACfmE,EADenE,EAAA,GAa9B,OAVAgC,oBAAU,WACN1H,EAAM2H,mBAAmB,SAAAC,GAKrB,OAJAA,EAAOkC,aAAa9J,EAAM8H,OAAS,CAC/B8B,OAAQA,GAGLhC,KAEZ,CAACgC,IAGAzJ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,WAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOR,EAAM+J,6BAA6B5J,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAEnHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAI4B,EAAU,SAAAxB,GAA2C,OAAhCA,EAAOqB,OAASzB,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,oBAAoBS,YAAY,4BAExI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,mBAAf,6BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAI4B,EAAU,SAAAxB,GAAyC,OAA9BA,EAAOsB,KAAO1B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,kBAAkBS,YAAY,yCCQzJ8H,MAxCf,SAAoBhK,GAAO,IAAAwF,EACqBC,mBAAS,IAD9BC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GAChByE,EADgBvE,EAAA,GACAwE,EADAxE,EAAA,GAavB,OAVAgC,oBAAU,WACN1H,EAAM2H,mBAAmB,SAAAC,GAKrB,OAJAA,EAAOuC,iBAAkB,CACrBF,eAAgBA,GAGbrC,KAEZ,CAACqC,IAGA9J,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,gBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qCACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIiC,EAAkBjC,EAAEC,OAAOC,QAAQjG,YAAY,4CCgCzIkI,MA5Df,SAAkBpK,GAAO,IAAAwF,EACqBC,qBADrBC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACd6E,EADc3E,EAAA,GACC4E,EADD5E,EAAA,GAAAI,EAEqBL,qBAFrBM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEdyE,EAFcxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAG,EAGiBT,qBAHjBa,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGduE,EAHcnE,EAAA,GAGDoE,EAHCpE,EAAA,GAAAG,EAIiBhB,qBAJjBkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAIdkE,EAJchE,EAAA,GAIDiE,EAJCjE,EAAA,GAmBrB,OAbAe,oBAAU,WACN1H,EAAM2H,mBAAmB,SAAAC,GAQrB,OAPAA,EAAOiD,eAAgB,CACnBR,cAAeA,EACfE,cAAeA,EACfE,YAAaA,EACbE,YAAaA,GAGV/C,KAEZ,CAACyC,EAAeE,EAAeE,EAAaE,IAG3CxK,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIqC,EAAiBrC,EAAEC,OAAOC,QAAQjG,YAAY,8BAE9G/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIuC,EAAiBvC,EAAEC,OAAOC,QAAQjG,YAAY,8BAGlH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIyC,EAAezC,EAAEC,OAAOC,QAAQjG,YAAY,yBAEjH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAI2C,EAAe3C,EAAEC,OAAOC,QAAQjG,YAAY,iCCRtI4I,MAzCf,SAAiB9K,GAKb,OAJA0H,oBAAU,WACNqD,QAAQC,IAAIhL,EAAM4H,UAIlBzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,uCAA+BL,EAAM4H,OAAOqD,QAAQC,sBAAsBC,QAAQ,GAAlF,UAA+FhL,EAAAC,EAAAC,cAAA,WAC/FF,EAAAC,EAAAC,cAAA,qCAA6BL,EAAM4H,OAAOqD,QAAQG,oBAAoBD,QAAQ,GAA9E,UAA2FhL,EAAAC,EAAAC,cAAA,WAC3FF,EAAAC,EAAAC,cAAA,2CAAmCL,EAAM4H,OAAOqD,QAAQI,0BAA0BF,QAAQ,GAA1F,UAAuGhL,EAAAC,EAAAC,cAAA,WACvGF,EAAAC,EAAAC,cAAA,kCAA+BF,EAAAC,EAAAC,cAAA,WAC/BF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,4BAAoBL,EAAM4H,OAAO0D,SAASC,SAASC,WAAWL,QAAQ,GAAtE,SAAqFhL,EAAAC,EAAAC,cAAA,WACrFF,EAAAC,EAAAC,cAAA,0BAAkBL,EAAM4H,OAAO0D,SAASC,SAASE,SAASN,QAAQ,GAAlE,SAAiFhL,EAAAC,EAAAC,cAAA,WACjFF,EAAAC,EAAAC,cAAA,gCAAwBL,EAAM4H,OAAO0D,SAASC,SAASG,eAAeP,QAAQ,GAA9E,SAA6FhL,EAAAC,EAAAC,cAAA,YAEjGF,EAAAC,EAAAC,cAAA,6BAA0BF,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,4BAAoBL,EAAM4H,OAAO0D,SAASK,WAAWH,WAAWL,QAAQ,GAAxE,QAAsFhL,EAAAC,EAAAC,cAAA,WACtFF,EAAAC,EAAAC,cAAA,0BAAkBL,EAAM4H,OAAO0D,SAASK,WAAWF,SAASN,QAAQ,GAApE,QAAkFhL,EAAAC,EAAAC,cAAA,WAClFF,EAAAC,EAAAC,cAAA,gCAAwBL,EAAM4H,OAAO0D,SAASK,WAAWD,eAAeP,QAAQ,GAAhF,QAA8FhL,EAAAC,EAAAC,cAAA,mBC8NnHuL,OAzPf,SAAoB5L,GAAO,IAAAwF,EACeC,oBAAS,GADxBC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GAChBqG,EADgBnG,EAAA,GACHoG,EADGpG,EAAA,GAAAI,EAGqCL,mBAAS,GAH9CM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAGhBiG,EAHgBhG,EAAA,GAGQiG,EAHRjG,EAAA,GAAAG,EAIiCT,mBAAS,GAJ1Ca,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAIhB+F,EAJgB3F,EAAA,GAIM4F,EAJN5F,EAAA,GAAAG,EAK+BhB,mBAAS,GALxCkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAKhB0F,EALgBxF,EAAA,GAKKyF,EALLzF,EAAA,GAAAG,EAMuBrB,mBAAS,GANhCsB,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAMhBuF,EANgBtF,EAAA,GAMCuF,EANDvF,EAAA,GAAAG,EAQwBzB,mBAAS,CACpDoC,oBAAqB,GACrBkB,kBAAmB,GACnBK,oBAAqB,GACrBI,iBAAkB,GAClBM,aAAc,GACdK,iBAAkB,GAClBU,eAAgB,KAfG1D,EAAAxI,OAAAgH,EAAA,EAAAhH,CAAAuI,EAAA,GAQhBqF,EARgBpF,EAAA,GAQEQ,EARFR,EAAA,GAAAG,EAkBqB7B,mBAAS,CACjD+G,eAAgB,CACZhB,WAAY,CACRiB,YAAa,EACbC,SAAU,GAEdjB,SAAU,CACNgB,YAAa,EACbC,SAAU,GAEdhB,eAAgB,CACZe,YAAa,EACbC,SAAU,IAGlBC,aAAc,CACVnB,WAAY,EACZE,eAAgB,EAChBD,SAAU,GAEdmB,SAAU,CACNpB,WAAY,GAEhBqB,QAAS,CACLC,MAAO,GAEXC,KAAM,CACFrB,eAAgB,GAEpBJ,SAAU,CACNC,SAAU,CACNC,WAAY,EACZC,SAAU,EACVC,eAAgB,GAEpBC,WAAY,CACRH,WAAY,EACZC,SAAU,EACVC,eAAgB,IAGxBT,QAAS,CACLC,sBAAuB,EACvBE,oBAAqB,EACrBC,0BAA2B,KA9DZ9D,EAAA5I,OAAAgH,EAAA,EAAAhH,CAAA2I,EAAA,GAkBhB0F,EAlBgBzF,EAAA,GAkBA0F,EAlBA1F,EAAA,GAkEjBS,EAAkC,WACpCgE,EAA0B,SAAAkB,GAAK,OAAIA,EAAQ,KAGzClE,EAAgC,WAClCkD,EAAwB,SAAAgB,GAAK,OAAIA,EAAQ,KAGvCzD,EAA+B,WACjC2C,EAAuB,SAAAc,GAAK,OAAIA,EAAQ,KAGtCnD,EAA2B,WAC7BuC,EAAmB,SAAAY,GAAK,OAAIA,EAAQ,KA+HxC,OACI/M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIlG,MAAM,aAAaqG,SAAS,aAAanE,UAAU,kBAKrEuL,EACA1L,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAC8M,EAAD,CAASvF,OAAQoF,KAErB7M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,QAAQ5M,QAAS,SAAAyH,GACxC6D,GAAe,KADnB,UAMR3L,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACKrC,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMvB,IAAyB5I,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAACmN,EAAD,CAAsBlK,IAAKiK,EAAGzF,MAAOyF,EAAGvF,gCAAiCA,EAAiCL,mBAAoBA,MAC/KhJ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMrB,IAAuB9I,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAACoN,EAAD,CAAoBnK,IAAKiK,EAAGzF,MAAOyF,EAAGvE,8BAA+BA,EAA+BrB,mBAAoBA,MACxKxH,EAAAC,EAAAC,cAACqN,EAAD,CAAe/F,mBAAoBA,IAClChJ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMnB,IAAsBhJ,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAACsN,EAAD,CAAmBrK,IAAKiK,EAAGzF,MAAOyF,EAAG9D,6BAA8BA,EAA8B9B,mBAAoBA,MACnKhJ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMjB,IAAkBlJ,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAACuN,EAAD,CAAQtK,IAAKiK,EAAGzF,MAAOyF,EAAGxD,yBAA0BA,EAA0BpC,mBAAoBA,MAC7IxH,EAAAC,EAAAC,cAACwN,EAAD,CAAYlG,mBAAoBA,IAChCxH,EAAAC,EAAAC,cAACyN,EAAD,CAAUnG,mBAAoBA,KAElCxH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,QAAQ5M,QAAS,SAAAyH,GA3J5DgF,EAAkB,SAAArF,GAEd,IAAM4E,EAAiBD,EAAiB1E,oBAClC8E,EAAeJ,EAAiBxD,kBAChC2C,EAAiBa,EAAiBnD,oBAClC2E,EAAcxB,EAAiB/C,iBAC/BqD,EAAUN,EAAiBzC,aAC3BkE,EAAczB,EAAiBpC,iBAC/BmB,EAAWiB,EAAiB1B,eA+GlC,OA5GAjD,EAAO4E,eAAehB,WAAWiB,YAAc,EAC/CD,EAAeyB,QAAQ,SAAChG,EAAGH,GACvB,IAAIoG,GAAU1B,EAAe1E,GAAOd,mBAAmBb,GAAKqG,EAAe1E,GAAOd,mBAAmBZ,IAAMoG,EAAe1E,GAAOvB,kBAAkBF,IAAKmG,EAAe1E,GAAOd,mBAAmBX,IAAKqF,EAAexC,qBAAuBsD,EAAe1E,GAAON,YAElQI,EAAO4E,eAAehB,WAAWiB,aAAeyB,IAIpDtG,EAAO4E,eAAehB,WAAWkB,SAAW,EAC5CF,EAAeyB,QAAQ,SAAChG,EAAGH,GACvB,IAAIoG,GAAU1B,EAAe1E,GAAOV,gBAAgBV,IAAM8F,EAAe1E,GAAOlB,eAAeP,IAAKmG,EAAe1E,GAAOV,gBAAgBf,IAAKqF,EAAexC,qBAAuBsD,EAAe1E,GAAON,YAE3MI,EAAO4E,eAAehB,WAAWkB,UAAYwB,IAIjDtG,EAAO4E,eAAef,SAASgB,YAAc,EAC7CD,EAAeyB,QAAQ,SAAChG,EAAGH,GACvB,IAAIoG,IAAY1B,EAAe1E,GAAOd,mBAAmBb,GAAKqG,EAAe1E,GAAOd,mBAAmBZ,GAAOoG,EAAe1E,GAAOvB,kBAAkBJ,GAAKqG,EAAe1E,GAAOvB,kBAAkBH,IAAOoG,EAAe1E,GAAOd,mBAAmBX,GAAKmG,EAAe1E,GAAON,YAE9QI,EAAO4E,eAAef,SAASgB,aAAeyB,IAIlDtG,EAAO4E,eAAef,SAASiB,SAAW,EAC1CF,EAAeyB,QAAQ,SAAChG,EAAGH,GACvB,IAAIoG,GAAU1B,EAAe1E,GAAOV,gBAAgBf,IAAMmG,EAAe1E,GAAOV,gBAAgBV,GAAK8F,EAAe1E,GAAOlB,eAAeF,IAAM8F,EAAe1E,GAAON,YAEtKI,EAAO4E,eAAef,SAASiB,UAAYwB,IAI/CtG,EAAO4E,eAAed,eAAee,YAAc,EACnDD,EAAeyB,QAAQ,SAAChG,EAAGH,GACvB,IAAIoG,GAAU1B,EAAe1E,GAAOd,mBAAmBb,GAAKqG,EAAe1E,GAAOd,mBAAmBZ,GAAKoG,EAAe1E,GAAON,aAAekE,EAAexC,mBAE9JtB,EAAO4E,eAAed,eAAee,aAAeyB,IAIxDtG,EAAO4E,eAAed,eAAegB,SAAW,EAChDF,EAAeyB,QAAQ,SAAChG,EAAGH,GACvB,IAAIoG,GAAU1B,EAAe1E,GAAOV,gBAAgBV,GAAK8F,EAAe1E,GAAON,aAAekE,EAAexC,mBAE7GtB,EAAO4E,eAAed,eAAegB,UAAYwB,IAIrDtG,EAAO+E,aAAanB,WAAa,EACjCmB,EAAasB,QAAQ,SAAChG,EAAGH,GACrB,IAAIoG,GAAUvB,EAAa7E,GAAOa,eAAiBgE,EAAa7E,GAAOS,WAAYoE,EAAa7E,GAAOW,mBAAoBiD,EAAexC,qBAAuByD,EAAa7E,GAAOe,cAErLjB,EAAO+E,aAAanB,YAAc0C,IAItCtG,EAAO+E,aAAajB,eAAiB,EACrCiB,EAAasB,QAAQ,SAAChG,EAAGH,GACrB,IAAIoG,GAAUvB,EAAa7E,GAAOa,cAAgB+C,EAAexC,oBAAsByD,EAAa7E,GAAOe,cAE3GjB,EAAO+E,aAAajB,gBAAkBwC,IAI1CtG,EAAO+E,aAAalB,SAAW,EAC/BkB,EAAasB,QAAQ,SAAChG,EAAGH,GACrB,IAAIoG,IAAWvB,EAAa7E,GAAOa,cAAgBgE,EAAa7E,GAAOW,mBAAqBkE,EAAa7E,GAAOS,UAAYoE,EAAa7E,GAAOe,cAEhJjB,EAAO+E,aAAalB,UAAYyC,IAIpCtG,EAAOgF,SAASpB,WAAa,EAC7BuC,EAAYE,QAAQ,SAAChG,EAAGH,GACpB,IAAIoG,GAAUH,EAAYjG,GAAOwB,WAAWnD,GAAK4H,EAAYjG,GAAOwB,WAAWlD,GAAK2H,EAAYjG,GAAOwB,WAAWjD,EAElHuB,EAAOgF,SAASpB,YAAc0C,IAIlCtG,EAAOiF,QAAQC,MAAQ,EACvBD,EAAQoB,QAAQ,SAAChG,EAAGH,GAChB,IAAIoG,GAAUrB,EAAQ/E,GAAO8B,OAAOF,QAAUmD,EAAQ/E,GAAO8B,OAAOD,KAEpE/B,EAAOiF,QAAQC,OAASoB,IAI5BtG,EAAOmF,KAAKrB,gBAAkBsC,EAAY/D,gBAAkByB,EAAexC,mBAG3EtB,EAAOqD,QAAQC,sBAAwBtD,EAAO4E,eAAehB,WAAWiB,YAAc7E,EAAO+E,aAAanB,WAAa5D,EAAOgF,SAASpB,WACvI5D,EAAOqD,QAAQG,oBAAsBxD,EAAO4E,eAAef,SAASgB,YAAc7E,EAAO+E,aAAalB,SAAW7D,EAAOiF,QAAQC,MAChIlF,EAAOqD,QAAQI,0BAA4BzD,EAAO4E,eAAed,eAAee,YAAc7E,EAAO+E,aAAajB,eAAiB9D,EAAOmF,KAAKrB,eAG/I9D,EAAO0D,SAASC,SAASC,WAAa2C,KAAKC,KAAKxG,EAAOqD,QAAQC,uBAAyB,EAAE,OAAS,IAAII,EAASjB,gBAAiBiB,EAASf,iBAC1I3C,EAAO0D,SAASC,SAASE,SAAW0C,KAAKC,KAAKxG,EAAOqD,QAAQG,qBAAuB,EAAE,OAAS,IAAIE,EAASjB,gBAAiBiB,EAASf,iBACtI3C,EAAO0D,SAASC,SAASG,eAAiByC,KAAKC,KAAKxG,EAAOqD,QAAQI,2BAA6B,EAAE,OAAS,IAAIC,EAASjB,gBAAiBiB,EAASf,iBAGlJ3C,EAAO0D,SAASK,WAAWH,YAAeF,EAASjB,eAAiBiB,EAASb,YAAc7C,EAAO0D,SAASC,SAASC,aAAgBF,EAASf,eAAiBe,EAASX,YAAc/C,EAAO0D,SAASC,SAASC,WAC9M5D,EAAO0D,SAASK,WAAWF,UAAaH,EAASjB,eAAiBiB,EAASb,YAAc7C,EAAO0D,SAASC,SAASE,WAAcH,EAASf,eAAiBe,EAASX,YAAc/C,EAAO0D,SAASC,SAASE,SAC1M7D,EAAO0D,SAASK,WAAWD,gBAAmBJ,EAASjB,eAAiBiB,EAASb,YAAc7C,EAAO0D,SAASC,SAASG,iBAAoBJ,EAASf,eAAiBe,EAASX,YAAc/C,EAAO0D,SAASC,SAASG,eAEtNX,QAAQC,IAAIuB,EAAkB3E,GAE9BkE,GAAe,GACRlE,MAoCK,iBC9GTyG,OAjIf,SAAuBrO,GAAO,IAAAwF,EACUC,mBAAS,eADnBC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACnBI,EADmBF,EAAA,GACPG,EADOH,EAAA,GAAAI,EAGwBL,mBAAS,CAACU,OAAGmI,EAAWlI,OAAGkI,EAAWjI,OAAGiI,IAHjEvI,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAGnBS,EAHmBR,EAAA,GAGAS,EAHAT,EAAA,GAAAG,EAIkBT,mBAAS,CAACiB,OAAG4H,EAAWjI,OAAGiI,IAJ7ChI,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAInBU,EAJmBN,EAAA,GAIHO,EAJGP,EAAA,GAAAG,EAMYhB,qBANZkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAMnBe,EANmBb,EAAA,GAMNc,EANMd,EAAA,GAAAG,EAOcrB,qBAPdsB,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAOnByH,EAPmBxH,EAAA,GAOLyH,EAPKzH,EAAA,GAuB1B,OAdAW,oBAAU,WACN1H,EAAMyO,kBAAkB,SAAAtG,GASpB,OARAA,EAAMuG,oBAAoB1O,EAAM8H,OAAS,CACrClC,WAAYA,EACZW,kBAAmBA,EACnBK,eAAgBA,EAChBY,YAAaA,EACb+G,aAAcA,GAGXpG,KAEZ,CAACvC,EAAYW,EAAmBK,EAAgBY,EAAa+G,IAG5DpO,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,kBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOR,EAAM2O,6BAA6BxO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAEnHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOC,QAAQ1G,GAAG,wBACzDtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKK,gBAAfvC,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOlC,EAAI+B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,uBAEnD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOjC,EAAI8B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,uBAEnD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,wBAK1C,aAAf0D,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,gBACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,0BAA0BS,YAAY,uBAEhD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,2BAAf,aACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,4BAA4BS,YAAY,wBAK1D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,sBAAsBS,YAAY,6BAEjH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIuG,EAAgBvG,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,uBAAuBS,YAAY,oCCTxI0M,OA5Gf,SAAqB5O,GAAO,IAAAwF,EACoBC,mBAAS,CAACU,EAAG,GAAIC,EAAG,KADxCV,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACjBqJ,EADiBnJ,EAAA,GACDoJ,EADCpJ,EAAA,GAAAI,EAEYL,mBAAS,CAAC,CAACsJ,OAAQ,GAAIC,OAAQ,MAF3CjJ,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEjBmJ,EAFiBlJ,EAAA,GAELmJ,EAFKnJ,EAAA,GAAAG,EAGUT,mBAAS,GAHnBa,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGjBiJ,EAHiB7I,EAAA,GAGN8I,EAHM9I,EAAA,GAiBxB,OAZAoB,oBAAU,WACN1H,EAAMyO,kBAAkB,SAAAtG,GAOpB,OANAA,EAAMkH,kBAAkBrP,EAAM8H,OAAS,CACnCwH,gBAAiBT,EACjBI,WAAYA,EACZE,UAAWA,GAGRhH,KAEZ,CAAC0G,EAAgBI,EAAYE,IAG5BhP,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,gBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOR,EAAMuP,2BAA2BpP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAGjHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,OAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,YACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,eAAeoB,SAAU,SAAAoF,GAAC,OAAI6G,EAAkB,SAAAU,GAExE,OADAA,EAAWrJ,EAAI8B,EAAEC,OAAOC,MACjBqH,KACPtN,YAAY,4BAGpB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,eAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,cAAcoB,SAAU,SAAAoF,GAAC,OAAI6G,EAAkB,SAAAU,GAEvE,OADAA,EAAWpJ,EAAI6B,EAAEC,OAAOC,MACjBqH,KACPtN,YAAY,iCAS5C/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACHjF,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM6B,IAAYhM,IAAI,SAAC8E,EAAGsF,GAAJ,OACvBpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAKiK,EAAG9L,GAAI8L,GAClBpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,oBAAoBoB,SAAU,SAAAoF,GACtD,IAAMC,EAASD,EAAEC,OAEjBgH,EAAc,SAAA/G,GAMV,OAJKA,EAAMoF,KAAIpF,EAAMoF,GAAK,CAACwB,OAAQ,GAAIC,OAAQ,KAE/C7G,EAAMoF,GAAGwB,OAAS7G,EAAOC,MAElBA,KAEZjG,YAAY,4BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,eACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,oBAAoBoB,SAAU,SAAAoF,GACtD,IAAMC,EAASD,EAAEC,OAEjBgH,EAAc,SAAA/G,GAKV,OAHKA,EAAMoF,KAAIpF,EAAMoF,GAAK,CAACwB,OAAQ,GAAIC,OAAQ,KAE/C7G,EAAMoF,GAAGyB,OAAS9G,EAAOC,MAClBA,KAEZjG,YAAY,qBAI3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,MAAM5M,QAAS,SAAAyH,GACtC8C,QAAQC,IAAIiE,GAEZG,EAAa,SAAAnH,GAAC,OAAIA,EAAI,MAH1B,qBChBjBwH,OA9Ef,SAAqBzP,GAAO,IAAAwF,EACYC,mBAAS,CAAC,CAACiK,WAAY,GAAIC,SAAU,MADjDjK,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACjBoK,EADiBlK,EAAA,GACLmK,EADKnK,EAAA,GAAAI,EAEUL,mBAAS,GAFnBM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEjBgK,EAFiB/J,EAAA,GAENgK,EAFMhK,EAAA,GAexB,OAXA2B,oBAAU,WACN1H,EAAMyO,kBAAkB,SAAAtG,GAMpB,OALAA,EAAM6H,kBAAkBhQ,EAAM8H,OAAS,CACnC8H,WAAYA,EACZE,UAAWA,GAGR3H,KAEZ,CAACyH,EAAYE,IAGZ3P,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,gBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOR,EAAMiQ,2BAA2B9P,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAGjHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACHjF,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMwC,IAAY3M,IAAI,SAAC8E,EAAGsF,GAAJ,OACvBpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAKiK,EAAG9L,GAAI8L,GAClBpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,wBAAwBoB,SAAU,SAAAoF,GAC1D,IAAMC,EAASD,EAAEC,OAEjB2H,EAAc,SAAA1H,GAMV,OAJKA,EAAMoF,KAAIpF,EAAMoF,GAAK,CAACmC,WAAY,GAAIC,SAAU,KAErDxH,EAAMoF,GAAGmC,WAAaxH,EAAOC,MAEtBA,KAEZjG,YAAY,gCAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GACxD,IAAMC,EAASD,EAAEC,OAEjB2H,EAAc,SAAA1H,GAKV,OAHKA,EAAMoF,KAAIpF,EAAMoF,GAAK,CAACmC,WAAY,GAAIC,SAAU,KAErDxH,EAAMoF,GAAGoC,SAAWzH,EAAOC,MACpBA,KAEZjG,YAAY,uBAI3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,MAAM5M,QAAS,SAAAyH,GACtC8C,QAAQC,IAAI4E,GAEZG,EAAa,SAAA9H,GAAC,OAAIA,EAAI,MAH1B,qBCOjBmC,OAxEf,SAAkBpK,GAAO,IAAAwF,EACqBC,mBAAS,IAD9BC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACd6E,EADc3E,EAAA,GACC4E,EADD5E,EAAA,GAAAI,EAEqBL,mBAAS,IAF9BM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEdyE,EAFcxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAG,EAGqBT,mBAAS,IAH9Ba,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGdgK,EAHc5J,EAAA,GAGC6J,EAHD7J,EAAA,GAAAG,EAIiBhB,mBAAS,IAJ1BkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAIdgE,EAJc9D,EAAA,GAID+D,EAJC/D,EAAA,GAAAG,EAKiBrB,mBAAS,IAL1BsB,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAKd6D,EALc5D,EAAA,GAKD6D,EALC7D,EAAA,GAAAG,EAMiBzB,mBAAS,IAN1B0B,EAAAxI,OAAAgH,EAAA,EAAAhH,CAAAuI,EAAA,GAMdkJ,EANcjJ,EAAA,GAMDkJ,EANClJ,EAAA,GAuBrB,OAfAO,oBAAU,WACN1H,EAAMyO,kBAAkB,SAAAtG,GAUpB,OATAA,EAAMmI,eAAiB,CACnBjG,cAAeA,EACfE,cAAeA,EACf2F,cAAeA,EACfzF,YAAaA,EACbE,YAAaA,EACbyF,YAAaA,GAGVjI,KAEZ,CAACkC,EAAeE,EAAe2F,EAAezF,EAAaE,EAAayF,IAGvEjQ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIqC,EAAiBrC,EAAEC,OAAOC,QAAQA,MAAOkC,EAAenI,YAAY,8BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIuC,EAAiBvC,EAAEC,OAAOC,QAAQA,MAAOoC,EAAerI,YAAY,6BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIkI,EAAiBlI,EAAEC,OAAOC,QAAQA,MAAO+H,EAAehO,YAAY,8BAGxI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIyC,EAAezC,EAAEC,OAAOC,QAAQA,MAAOsC,EAAavI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAI2C,EAAe3C,EAAEC,OAAOC,QAAQA,MAAOwC,EAAazI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIoI,EAAepI,EAAEC,OAAOC,QAAQA,MAAOiI,EAAalO,YAAY,iCCkJ1JqO,OA7Mf,SAA0BvQ,GAAO,IAAAwF,EACKC,mBAC9B,CACI+K,gBAAiB,CACbrK,EAAG,GACHC,EAAG,IAEPqK,gBAAiB,GACjBC,qBAAsB,GACtBC,YAAa,CACThB,SAAU,GACVD,WAAY,GACZkB,SAAU,IAEdC,aAAc,GACdC,0BAA2B,GAC3BC,oBAAqB,KAhBArL,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACtBwL,EADsBtL,EAAA,GACXuL,EADWvL,EAAA,GA8B7B,OAVAgC,oBAAU,WACN1H,EAAMyO,kBAAkB,SAAAtG,GAKpB,OAJAA,EAAM+I,uBAAyB,CAC3BF,UAAWA,GAGR7I,KAEZ,CAAC6I,IAGA7Q,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,uBAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,4BAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,2BAA2BoB,SAAU,SAAAoF,GAC7D,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAO4I,gBAAgBrK,EAAI+B,EAAOC,MAE3BP,KAEZ1F,YAAY,uBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,4BAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,2BAA2BoB,SAAU,SAAAoF,GAC7D,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAO4I,gBAAgBpK,EAAI8B,EAAOC,MAE3BP,KAEZ1F,YAAY,wBAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,0BAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,yBAAyBoB,SAAU,SAAAoF,GAC9C,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAO6I,gBAAkBvI,EAAOC,MAEzBP,KAEZ1F,YAAY,mBACX/B,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,WAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,8BAA8BoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAO8I,qBAAuBxI,EAAOC,MAE9BP,KAEZ1F,YAAY,wBACX/B,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,cAAd,cACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,kBAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,8BAA8BoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAO+I,YAAYhB,SAAWzH,EAAOC,MAE9BP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,WAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iCAAf,0BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,gCAAgCoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAO+I,YAAYjB,WAAaxH,EAAOC,MAEhCP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,WAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,8BAA8BoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAO+I,YAAYC,SAAW1I,EAAOC,MAE9BP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,YAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,oCACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,sBAAsBoB,SAAU,SAAAoF,GAC3C,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAOiJ,aAAe3I,EAAOC,MAEtBP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,iBAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gCAAf,kCACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,+BAA+BoB,SAAU,SAAAoF,GACpD,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAOkJ,0BAA4B5I,EAAOC,MAEnCP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,YAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,2BAAf,2BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWS,GAAG,0BAA0BoB,SAAU,SAAAoF,GAC9C,IAAMC,EAASD,EAAEC,OACjB+I,EAAa,SAAArJ,GAGT,OAFAA,EAAOmJ,oBAAsB7I,EAAOC,MAE7BP,KAEZ1F,YAAY,8BC1GxCiP,OAxFf,SAAuBnR,GAAO,IAAAwF,EACUC,mBAChC,CACI2L,QAAS,GACTC,WAAY,GACZC,OAAQ,CAAC,GAAI,MALK5L,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACnB+L,EADmB7L,EAAA,GACP8L,EADO9L,EAAA,GAmB1B,OAVAgC,oBAAU,WACN1H,EAAMyO,kBAAkB,SAAAtG,GAKpB,OAJAA,EAAMsJ,oBAAsB,CACxBF,WAAYA,GAGTpJ,KAEZ,CAACoJ,IAGApR,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAOwJ,QAAUlJ,EAAOC,MAEjBP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAOyJ,WAAanJ,EAAOC,MAEpBP,KAEZ1F,YAAY,yBAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAO0J,OAAO,GAAKpJ,EAAOC,MAEnBP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAO0J,OAAO,GAAKpJ,EAAOC,MAEnBP,KAEZ1F,YAAY,gCCIxC4I,OAjFf,SAAiB9K,GAKb,OAJA0H,oBAAU,WACNqD,QAAQC,IAAIhL,EAAM4H,UAIlBzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,yBAA8BF,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAAA,yCAAiCL,EAAM4H,OAAO8J,OAAOjF,YAAYkF,wBAAwBxG,QAAQ,GAAjG,QAA+GhL,EAAAC,EAAAC,cAAA,WAC/GF,EAAAC,EAAAC,cAAA,0CAAkCL,EAAM4H,OAAO8J,OAAOjF,YAAY4E,WAAWlG,QAAQ,GAArF,UAAqGhL,EAAAC,EAAAC,cAAA,YAGzGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,yCAAiCL,EAAM4H,OAAOgK,KAAKD,wBAAwBxG,QAAQ,GAAnF,QAAiGhL,EAAAC,EAAAC,cAAA,WACjGF,EAAAC,EAAAC,cAAA,0CAAkCL,EAAM4H,OAAOgK,KAAKP,WAAWlG,QAAQ,GAAvE,UAAuFhL,EAAAC,EAAAC,cAAA,YAG3FF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,yCAAiCL,EAAM4H,OAAOmF,KAAK4E,wBAAwBxG,QAAQ,GAAnF,QAAiGhL,EAAAC,EAAAC,cAAA,WACjGF,EAAAC,EAAAC,cAAA,0CAAkCL,EAAM4H,OAAOmF,KAAKsE,WAAWlG,QAAQ,GAAvE,UAAuFhL,EAAAC,EAAAC,cAAA,YAG3FF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,yBAA8BF,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAAA,0BAAkBL,EAAM4H,OAAOiK,mBAAmBlC,SAASxE,QAAQ,GAAnE,UAAmFhL,EAAAC,EAAAC,cAAA,WACnFF,EAAAC,EAAAC,cAAA,4BAAoBL,EAAM4H,OAAOiK,mBAAmBnC,WAAWvE,QAAQ,GAAvE,UAAuFhL,EAAAC,EAAAC,cAAA,WACvFF,EAAAC,EAAAC,cAAA,0BAAkBL,EAAM4H,OAAOiK,mBAAmBjB,SAASzF,QAAQ,GAAnE,UAAmFhL,EAAAC,EAAAC,cAAA,YAGvFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,0BAAkBL,EAAM4H,OAAOkK,iBAAiBnC,SAASxE,QAAQ,GAAjE,UAAiFhL,EAAAC,EAAAC,cAAA,WACjFF,EAAAC,EAAAC,cAAA,4BAAoBL,EAAM4H,OAAOkK,iBAAiBpC,WAAWvE,QAAQ,GAArE,UAAqFhL,EAAAC,EAAAC,cAAA,YAGzFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,0BAAkBL,EAAM4H,OAAOmK,iBAAiBpC,SAASxE,QAAQ,GAAjE,UAAiFhL,EAAAC,EAAAC,cAAA,YAGrFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,2BAAmBL,EAAM4H,OAAO0D,SAASC,SAASyG,UAAU7G,QAAQ,GAApE,SAAmFhL,EAAAC,EAAAC,cAAA,YAGvFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,2BAAmBL,EAAM4H,OAAO0D,SAASK,WAAWqG,UAAU7G,QAAQ,GAAtE,QAAoFhL,EAAAC,EAAAC,cAAA,YAGxFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOqK,iBAAiBb,QAAQc,KAAK,GAAK,IAAMlS,EAAM4H,OAAOqK,iBAAiBb,QAAQc,KAAK,GAAjH,OAAyHlS,EAAM4H,OAAOqK,iBAAiBb,QAAQe,KAAKhH,QAAQ,GAA5K,QAA0LhL,EAAAC,EAAAC,cAAA,WAC1LF,EAAAC,EAAAC,cAAA,2BAAmBL,EAAM4H,OAAOqK,iBAAiBG,YAAYF,KAAK,GAAK,IAAMlS,EAAM4H,OAAOqK,iBAAiBG,YAAYF,KAAK,GAA5H,OAAoIlS,EAAM4H,OAAOqK,iBAAiBG,YAAYD,KAAKhH,QAAQ,GAA3L,QAAyMhL,EAAAC,EAAAC,cAAA,WACzMF,EAAAC,EAAAC,cAAA,uBAAeL,EAAM4H,OAAOqK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,IAAMlS,EAAM4H,OAAOqK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAhI,OAAwIlS,EAAM4H,OAAOqK,iBAAiBX,OAAO3B,SAASwC,KAAKhH,QAAQ,GAAnM,QAAiNhL,EAAAC,EAAAC,cAAA,WACjNF,EAAAC,EAAAC,cAAA,uBAAeL,EAAM4H,OAAOqK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,IAAMlS,EAAM4H,OAAOqK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAApI,OAA4IlS,EAAM4H,OAAOqK,iBAAiBX,OAAO5B,WAAWyC,KAAKhH,QAAQ,GAAzM,QAAuNhL,EAAAC,EAAAC,cAAA,mBC6D5OgO,OAjIf,SAAuBrO,GAAO,IAAAwF,EACUC,mBAAS,eADnBC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACnBI,EADmBF,EAAA,GACPG,EADOH,EAAA,GAAAI,EAGwBL,mBAAS,CAACU,OAAGmI,EAAWlI,OAAGkI,EAAWjI,OAAGiI,IAHjEvI,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAGnBS,EAHmBR,EAAA,GAGAS,EAHAT,EAAA,GAAAG,EAIkBT,mBAAS,CAACiB,OAAG4H,EAAWjI,OAAGiI,IAJ7ChI,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAInBU,EAJmBN,EAAA,GAIHO,EAJGP,EAAA,GAAAG,EAMYhB,qBANZkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAMnBe,EANmBb,EAAA,GAMNc,EANMd,EAAA,GAAAG,EAOcrB,qBAPdsB,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAOnByH,EAPmBxH,EAAA,GAOLyH,EAPKzH,EAAA,GAuB1B,OAdAW,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GASpB,OARAA,EAAMuG,oBAAoB1O,EAAM8H,OAAS,CACrClC,WAAYA,EACZW,kBAAmBA,EACnBK,eAAgBA,EAChBY,YAAaA,EACb+G,aAAcA,GAGXpG,KAEZ,CAACvC,EAAYW,EAAmBK,EAAgBY,EAAa+G,IAG5DpO,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOC,QAAQ1G,GAAG,wBACzDtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKK,gBAAfvC,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOlC,EAAI+B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,uBAEnD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOjC,EAAI8B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,uBAEnD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,wBAK1C,aAAf0D,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,gBACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,0BAA0BS,YAAY,uBAEhD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,2BAAf,aACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,4BAA4BS,YAAY,wBAK1D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,sBAAsBS,YAAY,6BAEjH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIuG,EAAgBvG,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,uBAAuBS,YAAY,oCCMxIqD,OA3Hf,SAA8BvF,GAAO,IAAAwF,EACGC,mBAAS,eADZC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GAC1BI,EAD0BF,EAAA,GACdG,EADcH,EAAA,GAAAI,EAGiBL,mBAAS,CAACU,OAAGmI,EAAWlI,OAAGkI,EAAWjI,OAAGiI,IAH1DvI,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAG1BS,EAH0BR,EAAA,GAGPS,EAHOT,EAAA,GAAAG,EAIWT,mBAAS,CAACiB,OAAG4H,EAAWjI,OAAGiI,IAJtChI,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAI1BU,EAJ0BN,EAAA,GAIVO,EAJUP,EAAA,GAAAG,EAMKhB,qBANLkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAM1Be,EAN0Bb,EAAA,GAMbc,EANad,EAAA,GAqBjC,OAbAe,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAQpB,OAPAA,EAAMN,oBAAoB7H,EAAM8H,OAAS,CACrClC,WAAYA,EACZW,kBAAmBA,EACnBK,eAAgBA,EAChBY,YAAaA,GAGVW,KAEZ,CAACvC,EAAYW,EAAmBK,EAAgBY,IAG/CrH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,2BAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOC,QAAQ1G,GAAG,yBACzDtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKK,gBAAfvC,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOlC,EAAI+B,EAAOC,MACXE,KAEZ5G,GAAG,8BAA8BS,YAAY,uBAEpD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOjC,EAAI8B,EAAOC,MACXE,KAEZ5G,GAAG,8BAA8BS,YAAY,uBAEpD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,8BAA8BS,YAAY,wBAK3C,aAAf0D,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,gBACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,2BAA2BS,YAAY,uBAEjD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,4BAAf,aACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,wBAK3D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,4BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,sBAAsBS,YAAY,qCC5DtIoG,OApDf,SAA4BtI,GAAO,IAAAwF,EACiBC,mBAAS,IAD1BC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACxB8M,EADwB5M,EAAA,GACN6M,EADM7M,EAAA,GAAAI,EAEiBL,mBAAS,IAF1BM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAExB0M,EAFwBzM,EAAA,GAEN0M,EAFM1M,EAAA,GAAAG,EAGWT,mBAAS,IAHpBa,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGxB2C,EAHwBvC,EAAA,GAGTwC,EAHSxC,EAAA,GAiB/B,OAZAoB,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAOpB,OANAA,EAAMY,kBAAkB/I,EAAM8H,OAAS,CACnCwK,iBAAkBA,EAClBE,iBAAkBA,EAClB3J,cAAeA,GAGZV,KAEZ,CAACmK,EAAkBE,EAAkB3J,IAGpC1I,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,yBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,yBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIsK,EAAoBtK,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,cAAcS,YAAY,mBAE9G/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,2BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIwK,EAAoBxK,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,cAAcS,YAAY,iBAE9G/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIa,EAAiBb,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,kBAAkBS,YAAY,6BCqEpI0M,OA5Gf,SAAqB5O,GAAO,IAAAwF,EACoBC,mBAAS,CAACU,EAAG,GAAIC,EAAG,KADxCV,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACjBqJ,EADiBnJ,EAAA,GACDoJ,EADCpJ,EAAA,GAAAI,EAEYL,mBAAS,CAAC,CAACsJ,OAAQ,GAAIC,OAAQ,MAF3CjJ,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEjBmJ,EAFiBlJ,EAAA,GAELmJ,EAFKnJ,EAAA,GAAAG,EAGUT,mBAAS,GAHnBa,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGjBiJ,EAHiB7I,EAAA,GAGN8I,EAHM9I,EAAA,GAiBxB,OAZAoB,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAOpB,OANAA,EAAMkH,kBAAkBrP,EAAM8H,OAAS,CACnCwH,gBAAiBT,EACjBI,WAAYA,EACZE,UAAWA,GAGRhH,KAEZ,CAAC0G,EAAgBI,EAAYE,IAG5BhP,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,iBAKJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,OAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,YACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,eAAeoB,SAAU,SAAAoF,GAAC,OAAI6G,EAAkB,SAAAU,GAExE,OADAA,EAAWrJ,EAAI8B,EAAEC,OAAOC,MACjBqH,KACPtN,YAAY,4BAGpB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,eAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,cAAcoB,SAAU,SAAAoF,GAAC,OAAI6G,EAAkB,SAAAU,GAEvE,OADAA,EAAWpJ,EAAI6B,EAAEC,OAAOC,MACjBqH,KACPtN,YAAY,iCAS5C/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACHjF,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM6B,IAAYhM,IAAI,SAAC8E,EAAGsF,GAAJ,OACvBpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAKiK,EAAG9L,GAAI8L,GAClBpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,oBAAoBoB,SAAU,SAAAoF,GACtD,IAAMC,EAASD,EAAEC,OAEjBgH,EAAc,SAAA/G,GAMV,OAJKA,EAAMoF,KAAIpF,EAAMoF,GAAK,CAACwB,OAAQ,GAAIC,OAAQ,KAE/C7G,EAAMoF,GAAGwB,OAAS7G,EAAOC,MAElBA,KAEZjG,YAAY,4BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,eACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,oBAAoBoB,SAAU,SAAAoF,GACtD,IAAMC,EAASD,EAAEC,OAEjBgH,EAAc,SAAA/G,GAKV,OAHKA,EAAMoF,KAAIpF,EAAMoF,GAAK,CAACwB,OAAQ,GAAIC,OAAQ,KAE/C7G,EAAMoF,GAAGyB,OAAS9G,EAAOC,MAClBA,KAEZjG,YAAY,qBAI3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,MAAM5M,QAAS,SAAAyH,GACtC8C,QAAQC,IAAIiE,GAEZG,EAAa,SAAAnH,GAAC,OAAIA,EAAI,MAH1B,qBCOjBwH,OArGf,SAAqBzP,GAAO,IAAAwF,EACYC,mBAAS,CAAC,CAACiK,WAAY,GAAIC,SAAU,MADjDjK,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACjBoK,EADiBlK,EAAA,GACLmK,EADKnK,EAAA,GAAAI,EAEkBL,mBAAS,IAF3BM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEjB4M,EAFiB3M,EAAA,GAEF4M,EAFE5M,EAAA,GAAAG,EAGUT,mBAAS,GAHnBa,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGjB4J,EAHiBxJ,EAAA,GAGNyJ,EAHMzJ,EAAA,GAkBxB,OAbAoB,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAQpB,OANAA,EAAM6H,kBAAkBhQ,EAAM8H,OAAS,CACnC8H,WAAYA,EACZ8C,cAAeA,EACf5C,UAAWA,GAGR3H,KAEZ,CAACyH,EAAY8C,EAAe5C,IAG3B3P,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,iBAKJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,oBAEJF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACHjF,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMwC,IAAY3M,IAAI,SAAC8E,EAAGsF,GAAJ,OACvBpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAKiK,EAAG9L,GAAI8L,GAClBpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,wBAAwBoB,SAAU,SAAAoF,GAC1D,IAAMC,EAASD,EAAEC,OAEjB2H,EAAc,SAAA1H,GAMV,OAJKA,EAAMoF,KAAIpF,EAAMoF,GAAK,CAACmC,WAAY,GAAIC,SAAU,KAErDxH,EAAMoF,GAAGmC,WAAaxH,EAAOC,MAEtBA,KAEZjG,YAAY,gCAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GACxD,IAAMC,EAASD,EAAEC,OAEjB2H,EAAc,SAAA1H,GAKV,OAHKA,EAAMoF,KAAIpF,EAAMoF,GAAK,CAACmC,WAAY,GAAIC,SAAU,KAErDxH,EAAMoF,GAAGoC,SAAWzH,EAAOC,MACpBA,KAEZjG,YAAY,uBAK3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,QACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,MAAM5M,QAAS,SAAAyH,GACtC8C,QAAQC,IAAI4E,GAEZG,EAAa,SAAA9H,GAAC,OAAIA,EAAI,MAH1B,gBAQR9H,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GACxD,IAAIC,EAASD,EAAEC,OAEfyK,EAAiB,SAAAD,GAGb,OAFgBxK,EAAOC,SAI5BjG,YAAY,iCCuCxCmH,OAjIf,SAA2BrJ,GAAO,IAAAwF,EACcC,mBAAS,CAACsJ,OAAQ,GAAI6D,MAAO,GAAIC,MAAO,GAAIC,UAAW,KADrEpN,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACvBuN,EADuBrN,EAAA,GACPsN,EADOtN,EAAA,GAAAI,EAEoBL,mBAAS,CAACsJ,OAAQ,GAAI6D,MAAO,GAAIE,UAAW,KAFhE/M,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEvBmN,EAFuBlN,EAAA,GAEJmN,EAFInN,EAAA,GAe9B,OAXA2B,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAMpB,OALAA,EAAMqB,iBAAmB,CACrBuJ,eAAgBA,EAChBE,kBAAmBA,GAGhB9K,KAEZ,CAAC4K,EAAgBE,IAGhB9S,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,wBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,gCAIRF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB8K,EAAkB,SAAA3K,GAEd,OADAA,EAAO0G,OAAS7G,EAAOC,MAChBE,KAEZ5G,GAAG,mBAAmBS,YAAY,qBAEzC/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB8K,EAAkB,SAAA3K,GAEd,OADAA,EAAOuK,MAAQ1K,EAAOC,MACfE,KAEZ5G,GAAG,mBAAmBS,YAAY,qBAEzC/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB8K,EAAkB,SAAA3K,GAEd,OADAA,EAAOwK,MAAQ3K,EAAOC,MACfE,KAEZ5G,GAAG,mBAAmBS,YAAY,sBAI7C/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,KAAK9H,UAAU,cACrBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB8K,EAAkB,SAAA3K,GAEd,OADAA,EAAOyK,UAAY5K,EAAOC,MACnBE,KAEZ5G,GAAG,mBAAmBS,YAAY,sBAI7C/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,mCAIRF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjBgL,EAAqB,SAAA7K,GAEjB,OADAA,EAAO0G,OAAS7G,EAAOC,MAChBE,KAEZ5G,GAAG,mBAAmBS,YAAY,qBAEzC/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjBgL,EAAqB,SAAA7K,GAEjB,OADAA,EAAOuK,MAAQ1K,EAAOC,MACfE,KAEZ5G,GAAG,mBAAmBS,YAAY,sBAI7C/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,KAAK9H,UAAU,cACrBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjBgL,EAAqB,SAAA7K,GAEjB,OADAA,EAAOyK,UAAY5K,EAAOC,MACnBE,KAEZ5G,GAAG,mBAAmBS,YAAY,6BCgE9DiR,OApLf,SAA8BnT,GAAO,IAAAwF,EACqBC,mBAClD,CACI2N,YAAa,GACbC,WAAY,GACZC,gBAAiB,GACjBC,eAAgB,GAChBC,gBAAiB,GACjBC,sBAAuB,GACvBC,QAAS,CACL,CACIC,qBAAsB,GACtBC,cAAe,GACfC,eAAgB,OAbCnO,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GAC1BsO,EAD0BpO,EAAA,GACLqO,EADKrO,EAAA,GAAAI,EAkBOL,mBAAS,GAlBhBM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAkB1BkO,EAlB0BjO,EAAA,GAkBZkO,EAlBYlO,EAAA,GA8BjC,OAVA2B,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAKpB,OAJAA,EAAM2L,oBAAoB9T,EAAM8H,OAAS,CACrCgM,oBAAqBA,GAGlB3L,KAEZ,CAAC2L,IAGA3T,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,2BAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAGnB,OAFAA,EAAOwL,YAAclL,EAAOC,MAErBP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAGnB,OAFAA,EAAOyL,WAAanL,EAAOC,MAEpBP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAGnB,OAFAA,EAAO0L,gBAAkBpL,EAAOC,MAEzBP,KAEZ1F,YAAY,4BAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAGnB,OAFAA,EAAO2L,eAAiBrL,EAAOC,MAExBP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAGnB,OAFAA,EAAO4L,gBAAkBtL,EAAOC,MAEzBP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,6BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAGnB,OAFAA,EAAO6L,sBAAwBvL,EAAOC,MAE/BP,KAEZ1F,YAAY,4BAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,uBAIP1B,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM0G,IAAe7Q,IAAI,SAAC8E,EAAGsF,GAAJ,OAC1BpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAKiK,GACXpN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,4BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAMnB,OAJKA,EAAO8L,QAAQnG,KAAI3F,EAAO8L,QAAQnG,GAAK,CAACoG,qBAAsB,GAAIC,cAAe,GAAIC,eAAgB,KAE1GjM,EAAO8L,QAAQnG,GAAGoG,qBAAuBzL,EAAOC,MAEzCP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAMnB,OAJKA,EAAO8L,QAAQnG,KAAI3F,EAAO8L,QAAQnG,GAAK,CAACoG,qBAAsB,GAAIC,cAAe,GAAIC,eAAgB,KAE1GjM,EAAO8L,QAAQnG,GAAGqG,cAAgB1L,EAAOC,MAElCP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB6L,EAAuB,SAAAnM,GAMnB,OAJKA,EAAO8L,QAAQnG,KAAI3F,EAAO8L,QAAQnG,GAAK,CAACoG,qBAAsB,GAAIC,cAAe,GAAIC,eAAgB,KAE1GjM,EAAO8L,QAAQnG,GAAGsG,eAAiB3L,EAAOC,MAEnCP,KAEZ1F,YAAY,8BAK3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,MAAM5M,QAAS,SAAAyH,GACtC8C,QAAQC,IAAIgJ,GAEZC,EAAgB,SAAAhM,GAAC,OAAIA,EAAI,MAH7B,qBC/FjBK,OAxEf,SAA4BtI,GAAO,IAAAwF,EACeC,mBAAS,CACnDyO,aAAc,KACdC,UAAW,OACXC,YAAa,KAJc1O,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACxB6O,EADwB3O,EAAA,GACP4O,EADO5O,EAAA,GAe/B,OARAgC,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAGpB,OAFAA,EAAMkM,gBAAkBA,EAEjBlM,KAEZ,CAACkM,IAGAlU,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,eAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GACd,IAAMC,EAASD,EAAEC,OAEjBoM,EAAmB,SAAAjM,GAEf,OADAA,EAAO6L,aAAehM,EAAOC,MACtBE,KAEhBpH,KAAK,SAASQ,GAAG,eAChBtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,OAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GACd,IAAMC,EAASD,EAAEC,OAEjBoM,EAAmB,SAAAjM,GAEf,OADAA,EAAO8L,UAAYjM,EAAOC,MACnBE,KAEhBpH,KAAK,SAASQ,GAAG,eAChBtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,QAAd,QACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,QAAd,UAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,eACA9E,EAAAC,EAAAC,cAAA,SAAIgU,EAAgBD,sBCY7ChK,OAxEf,SAAkBpK,GAAO,IAAAwF,EACqBC,mBAAS,IAD9BC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACd6E,EADc3E,EAAA,GACC4E,EADD5E,EAAA,GAAAI,EAEqBL,mBAAS,IAF9BM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEdyE,EAFcxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAG,EAGqBT,mBAAS,IAH9Ba,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGdgK,EAHc5J,EAAA,GAGC6J,EAHD7J,EAAA,GAAAG,EAIiBhB,mBAAS,IAJ1BkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAIdgE,EAJc9D,EAAA,GAID+D,EAJC/D,EAAA,GAAAG,EAKiBrB,mBAAS,IAL1BsB,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAKd6D,EALc5D,EAAA,GAKD6D,EALC7D,EAAA,GAAAG,EAMiBzB,mBAAS,IAN1B0B,EAAAxI,OAAAgH,EAAA,EAAAhH,CAAAuI,EAAA,GAMdkJ,EANcjJ,EAAA,GAMDkJ,EANClJ,EAAA,GAuBrB,OAfAO,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAUpB,OATAA,EAAMmI,eAAiB,CACnBjG,cAAeA,EACfE,cAAeA,EACf2F,cAAeA,EACfzF,YAAaA,EACbE,YAAaA,EACbyF,YAAaA,GAGVjI,KAEZ,CAACkC,EAAeE,EAAe2F,EAAezF,EAAaE,EAAayF,IAGvEjQ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIqC,EAAiBrC,EAAEC,OAAOC,QAAQA,MAAOkC,EAAenI,YAAY,8BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIuC,EAAiBvC,EAAEC,OAAOC,QAAQA,MAAOoC,EAAerI,YAAY,6BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIkI,EAAiBlI,EAAEC,OAAOC,QAAQA,MAAO+H,EAAehO,YAAY,8BAGxI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIyC,EAAezC,EAAEC,OAAOC,QAAQA,MAAOsC,EAAavI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAI2C,EAAe3C,EAAEC,OAAOC,QAAQA,MAAOwC,EAAazI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIoI,EAAepI,EAAEC,OAAOC,QAAQA,MAAOiI,EAAalO,YAAY,iCCc1JiP,OA1Ef,SAAuBnR,GAAO,IAAAwF,EACUC,mBAChC,CACI8O,YAAa,GACbC,KAAM,GACNC,OAAQ,KALU/O,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACnB+L,EADmB7L,EAAA,GACP8L,EADO9L,EAAA,GAmB1B,OAVAgC,oBAAU,WACN1H,EAAMqS,kBAAkB,SAAAlK,GAKpB,OAJAA,EAAMsJ,oBAAsB,CACxBF,WAAYA,GAGTpJ,KAEZ,CAACoJ,IAGApR,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAO2M,YAAcrM,EAAOC,MAErBP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAO4M,KAAOtM,EAAOC,MAEdP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAO6M,OAASvM,EAAOC,MAEhBP,KAEZ1F,YAAY,gCC4BxC4I,OA3Ff,SAAiB9K,GAKb,OAJA0H,oBAAU,WACNqD,QAAQC,IAAIhL,EAAM4H,UAIlBzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,0BAA+BF,EAAAC,EAAAC,cAAA,WACrCF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAO8J,OAAOgD,SAASC,OAAOxJ,QAAQ,GAA5D,SAA2EhL,EAAAC,EAAAC,cAAA,WAC3EF,EAAAC,EAAAC,cAAA,sBAAcL,EAAM4H,OAAO8J,OAAOgD,SAASF,KAAKrJ,QAAQ,GAAxD,UAAqEhL,EAAAC,EAAAC,cAAA,WACrEF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAO8J,OAAOgD,SAASD,OAAOtJ,QAAQ,GAA5D,UAAyEhL,EAAAC,EAAAC,cAAA,YAG7EF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,iCAAsCF,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAO4E,eAAekI,SAASC,OAAOxJ,QAAQ,GAApE,SAAmFhL,EAAAC,EAAAC,cAAA,WACnFF,EAAAC,EAAAC,cAAA,sBAAcL,EAAM4H,OAAO4E,eAAekI,SAASF,KAAKrJ,QAAQ,GAAhE,UAA6EhL,EAAAC,EAAAC,cAAA,WAC7EF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAO4E,eAAekI,SAASD,OAAOtJ,QAAQ,GAApE,UAAiFhL,EAAAC,EAAAC,cAAA,YAGrFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,+BAAoCF,EAAAC,EAAAC,cAAA,WAC1CF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAO+E,aAAa+H,SAASC,OAAOxJ,QAAQ,GAAlE,SAAiFhL,EAAAC,EAAAC,cAAA,WACjFF,EAAAC,EAAAC,cAAA,sBAAcL,EAAM4H,OAAO+E,aAAa+H,SAASF,KAAKrJ,QAAQ,GAA9D,UAA2EhL,EAAAC,EAAAC,cAAA,WAC3EF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAO+E,aAAa+H,SAASD,OAAOtJ,QAAQ,GAAlE,UAA+EhL,EAAAC,EAAAC,cAAA,YAGnFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,wBAA6BF,EAAAC,EAAAC,cAAA,WACnCF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOgK,KAAK8C,SAASC,OAAOxJ,QAAQ,GAA1D,SAAyEhL,EAAAC,EAAAC,cAAA,WACzEF,EAAAC,EAAAC,cAAA,sBAAcL,EAAM4H,OAAOgK,KAAK8C,SAASF,KAAKrJ,QAAQ,GAAtD,UAAmEhL,EAAAC,EAAAC,cAAA,WACnEF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOgK,KAAK8C,SAASD,OAAOtJ,QAAQ,GAA1D,UAAuEhL,EAAAC,EAAAC,cAAA,YAG3EF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOmF,KAAK2H,SAASC,OAAOxJ,QAAQ,GAA1D,SAAyEhL,EAAAC,EAAAC,cAAA,WACzEF,EAAAC,EAAAC,cAAA,sBAAcL,EAAM4H,OAAOmF,KAAK2H,SAASF,KAAKrJ,QAAQ,GAAtD,UAAmEhL,EAAAC,EAAAC,cAAA,WACnEF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOmF,KAAK2H,SAASD,OAAOtJ,QAAQ,GAA1D,UAAuEhL,EAAAC,EAAAC,cAAA,YAG3EF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,8BAAmCF,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOmG,YAAY2G,SAASC,OAAOxJ,QAAQ,GAAjE,SAAgFhL,EAAAC,EAAAC,cAAA,WAChFF,EAAAC,EAAAC,cAAA,sBAAcL,EAAM4H,OAAOmG,YAAY2G,SAASF,KAAKrJ,QAAQ,GAA7D,UAA0EhL,EAAAC,EAAAC,cAAA,WAC1EF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOmG,YAAY2G,SAASD,OAAOtJ,QAAQ,GAAjE,UAA8EhL,EAAAC,EAAAC,cAAA,YAGlFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,kCAAuCF,EAAAC,EAAAC,cAAA,WAC7CF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOgN,gBAAgBF,SAASC,OAAOxJ,QAAQ,GAArE,SAAoFhL,EAAAC,EAAAC,cAAA,WACpFF,EAAAC,EAAAC,cAAA,sBAAcL,EAAM4H,OAAOgN,gBAAgBF,SAASF,KAAKrJ,QAAQ,GAAjE,UAA8EhL,EAAAC,EAAAC,cAAA,WAC9EF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOgN,gBAAgBF,SAASD,OAAOtJ,QAAQ,GAArE,UAAkFhL,EAAAC,EAAAC,cAAA,YAGtFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,4BAAoBL,EAAM4H,OAAO0D,SAASuJ,WAAWtJ,SAASJ,QAAQ,GAAtE,SAAqFhL,EAAAC,EAAAC,cAAA,YAGzFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,4BAAoBL,EAAM4H,OAAO0D,SAASuJ,WAAWlJ,WAAWR,QAAQ,GAAxE,QAAsFhL,EAAAC,EAAAC,cAAA,YAG1FF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,6BAAqBL,EAAM4H,OAAOqK,iBAAiBsC,YAAYO,MAAM3J,QAAQ,GAA7E,QAA2FhL,EAAAC,EAAAC,cAAA,WAC3FF,EAAAC,EAAAC,cAAA,sBAAcL,EAAM4H,OAAOqK,iBAAiBuC,KAAKM,MAAM3J,QAAQ,GAA/D,QAA6EhL,EAAAC,EAAAC,cAAA,WAC7EF,EAAAC,EAAAC,cAAA,wBAAgBL,EAAM4H,OAAOqK,iBAAiBwC,OAAOK,MAAM3J,QAAQ,GAAnE,QAAiFhL,EAAAC,EAAAC,cAAA,mBCsOtG0U,OApTf,SAAe/U,GAAO,IAAAwF,EACUC,mBAAS,CACjCuP,WAAY,GACZnM,cAAe,GACfoM,YAAa,CACTC,GAAI,eACJC,OAAQ,cAEZjB,aAAc,IACdkB,iBAAkB,IAClBC,YAAa,MACbC,iBAAkB,CACdC,iBAAkB,GAClBC,mBAAoB,GACpBC,aAAc,GACdC,gBAAiB,GACjBC,eAAgB,IAEpBC,uBAAwB,CACpBC,MAAO,CACH,CACIlM,KAAM,GACNuD,MAAO,KAGf4I,QAAS,CACL,CACInM,KAAM,GACNuD,MAAO,QA5BLxH,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACXoC,EADWlC,EAAA,GACHqQ,EADGrQ,EAAA,GAAAI,EAkCgBL,mBAAS,GAlCzBM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAAAI,GAAAH,EAAA,GAAAA,EAAA,GAmCoBN,mBAAS,IAnC7Ba,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GA+ClB,OA/CkBI,EAAA,GAAAA,EAAA,GAqClBoB,oBAAU,WACN1H,EAAMgW,iBAAiB,SAAA7N,GAGnB,OAFAA,EAAM8N,YAAYjW,EAAM8H,OAASF,EAE1BO,IAGX4C,QAAQC,IAAIhL,EAAMkW,cAAcD,cACjC,CAACrO,IAGAzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,UAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,kBACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAOoN,WAAa9M,EAAOC,MACpBxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOP,EAAOoN,WAAY/T,KAAK,SAASQ,GAAG,GAAGS,YAAY,MAEjE/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAOiB,cAAgBX,EAAOC,MACvBxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOe,cAAgBjB,EAAOiB,cAAe5H,KAAK,SAASQ,GAAG,GAAGS,YAAY,OAIpL/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAON,OANAA,EAAOqN,YAAYC,GAAKhN,EAAOC,MAEV,iBAAjBD,EAAOC,MAA0BP,EAAOqN,YAAYE,OAAS,aACvC,iBAAjBjN,EAAOC,MAA0BP,EAAOqN,YAAYE,OAAS,aAC5C,iBAAjBjN,EAAOC,QAA0BP,EAAOqN,YAAYE,OAAS,cAE/DxW,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOmN,YAAYC,GAAKtN,EAAOqN,YAAYC,GAAIzT,GAAG,IAC7ItB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,gBACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,gBACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,kBAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,wBACA9E,EAAAC,EAAAC,cAAA,SAAIL,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOmN,YAAYE,OAASvN,EAAOqN,YAAYE,UAIhJhV,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAOsM,aAAehM,EAAOC,MACtBxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOoM,aAAetM,EAAOsM,aAAczS,GAAG,IACzItB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,OAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,0BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAOwN,iBAAmBlN,EAAOC,MAC1BxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOsN,iBAAmBxN,EAAOwN,iBAAkB3T,GAAG,IACjJtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,SAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,KAAK9H,UAAU,cACrBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAOyN,YAAcnN,EAAOC,MACrBxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOuN,YAAczN,EAAOyN,YAAa5T,GAAG,IACvItB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,OAAd,OACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,WAOpBhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,oBACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,yBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAO0N,iBAAiBC,iBAAmBrN,EAAOC,MAC3CxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOwN,iBAAiBC,iBAAmB3N,EAAO0N,iBAAiBC,iBAAkB9T,GAAG,IACnLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,8BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAO0N,iBAAiBE,mBAAqBtN,EAAOC,MAC7CxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOwN,iBAAiBE,mBAAqB5N,EAAO0N,iBAAiBE,mBAAoB/T,GAAG,IACvLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,QAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAO0N,iBAAiBG,aAAevN,EAAOC,MACvCxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOwN,iBAAiBG,aAAe7N,EAAO0N,iBAAiBG,aAAchU,GAAG,IAC3KtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,OAAd,OACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAO0N,iBAAiBI,gBAAkBxN,EAAOC,MAC1CxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOwN,iBAAiBI,gBAAkB9N,EAAO0N,iBAAiBI,gBAAiBjU,GAAG,IACjLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAO0N,iBAAiBK,eAAiBzN,EAAOC,MACzCxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOwN,iBAAiBK,eAAiB/N,EAAO0N,iBAAiBK,eAAgBlU,GAAG,IAC/KtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,WAOpBhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,0BACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,yBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAO0N,iBAAiBC,iBAAmBrN,EAAOC,MAC3CxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOwN,iBAAiBC,iBAAmB3N,EAAO0N,iBAAiBC,iBAAkB9T,GAAG,IACnLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,8BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB6N,EAAU,SAAAnO,GAEN,OADAA,EAAO0N,iBAAiBE,mBAAqBtN,EAAOC,MAC7CxJ,OAAAsE,EAAA,EAAAtE,CAAA,GAAIiJ,MAEhBO,MAAOnI,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAS9H,EAAMkW,cAAcD,YAAYjW,EAAM8H,OAAOwN,iBAAiBE,mBAAqB5N,EAAO0N,iBAAiBE,mBAAoB/T,GAAG,IACvLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,eChO7BiC,OAxEf,SAAkBpK,GAAO,IAAAwF,EACqBC,mBAAS,IAD9BC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACd6E,EADc3E,EAAA,GACC4E,EADD5E,EAAA,GAAAI,EAEqBL,mBAAS,IAF9BM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAEdyE,EAFcxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAG,EAGqBT,mBAAS,IAH9Ba,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAGdgK,EAHc5J,EAAA,GAGC6J,EAHD7J,EAAA,GAAAG,EAIiBhB,mBAAS,IAJ1BkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAIdgE,EAJc9D,EAAA,GAID+D,EAJC/D,EAAA,GAAAG,EAKiBrB,mBAAS,IAL1BsB,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAKd6D,EALc5D,EAAA,GAKD6D,EALC7D,EAAA,GAAAG,EAMiBzB,mBAAS,IAN1B0B,EAAAxI,OAAAgH,EAAA,EAAAhH,CAAAuI,EAAA,GAMdkJ,EANcjJ,EAAA,GAMDkJ,EANClJ,EAAA,GAuBrB,OAfAO,oBAAU,WACN1H,EAAMgW,iBAAiB,SAAA7N,GAUnB,OATAA,EAAMmI,eAAiB,CACnBjG,cAAeA,EACfE,cAAeA,EACf2F,cAAeA,EACfzF,YAAaA,EACbE,YAAaA,EACbyF,YAAaA,GAGVjI,KAEZ,CAACkC,EAAeE,EAAe2F,EAAezF,EAAaE,EAAayF,IAGvEjQ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIqC,EAAiBrC,EAAEC,OAAOC,QAAQA,MAAOkC,EAAenI,YAAY,8BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIuC,EAAiBvC,EAAEC,OAAOC,QAAQA,MAAOoC,EAAerI,YAAY,6BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIkI,EAAiBlI,EAAEC,OAAOC,QAAQA,MAAO+H,EAAehO,YAAY,8BAGxI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIyC,EAAezC,EAAEC,OAAOC,QAAQA,MAAOsC,EAAavI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAI2C,EAAe3C,EAAEC,OAAOC,QAAQA,MAAOwC,EAAazI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIoI,EAAepI,EAAEC,OAAOC,QAAQA,MAAOiI,EAAalO,YAAY,iCCc1JiP,OA1Ef,SAAuBnR,GAAO,IAAAwF,EACUC,mBAChC,CACI8O,YAAa,GACbC,KAAM,GACNC,OAAQ,KALU/O,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACnB+L,EADmB7L,EAAA,GACP8L,EADO9L,EAAA,GAmB1B,OAVAgC,oBAAU,WACN1H,EAAMgW,iBAAiB,SAAA7N,GAKnB,OAJAA,EAAMsJ,oBAAsB,CACxBF,WAAYA,GAGTpJ,KAEZ,CAACoJ,IAGApR,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAO2M,YAAcrM,EAAOC,MAErBP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAO4M,KAAOtM,EAAOC,MAEdP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBsJ,EAAc,SAAA5J,GAGV,OAFAA,EAAO6M,OAASvM,EAAOC,MAEhBP,KAEZ1F,YAAY,gCC5BxCiU,IChCAC,GAAA,CACb,CACEC,KAAM,IACNC,OAAO,EACP1V,OAAQmD,EACRwS,UAAW,kBAAMpW,EAAAC,EAAAC,cAACmW,EAAA,EAAD,CAAUnY,GAAG,mBAEhC,CACEgY,KAAM,eACNzV,OAAQmD,EACRwS,UAAWrR,GAEb,CACEmR,KAAM,mBACNzV,OAAQmD,EACRwS,UAAWjR,GAEb,CACE+Q,KAAM,0BACNzV,OAAQmD,EACRwS,UAAW3K,IAEb,CACEyK,KAAM,yBACNzV,OAAQmD,EACRwS,UC1BJ,SAAmBvW,GAAO,IAAAwF,EACgBC,oBAAS,GADzBC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACfqG,EADenG,EAAA,GACFoG,EADEpG,EAAA,GAAAI,EAGwBL,mBAAS,GAHjCM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAGf2Q,EAHe1Q,EAAA,GAGE2Q,EAHF3Q,EAAA,GAAAG,EAIoBT,mBAAS,GAJ7Ba,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAIfyQ,EAJerQ,EAAA,GAIAsQ,EAJAtQ,EAAA,GAAAG,EAKoBhB,mBAAS,GAL7BkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAKfoQ,EALelQ,EAAA,GAKAmQ,EALAnQ,EAAA,GAAAG,EAOsBrB,mBAAS,CACjDsR,WAAY,IACZrF,OAAQ,CACJjF,YAAa,CACTuK,cAAe,GACfrF,wBAAyB,GACzBN,WAAY,IAEhB3E,SAAU,CACNsK,cAAe,GACfC,sBAAuB,GACvBC,iBAAkB,GAClBC,qBAAsB,KAG9BC,sBAAuB,CACnB1F,OAAQ,CACJ/N,KAAM,GACNmP,UAAW,GACXuE,WAAY,IAEhBzF,KAAM,CACFjO,KAAM,GACNmP,UAAW,GACXuE,WAAY,KAGpBxF,mBAAoB,CAChB9C,OAAQ,EACRY,SAAU,EACVD,WAAY,EACZkB,SAAU,GAEd0G,+BAAgC,CAC5BC,QAAS,CACL5H,SAAU,IACVD,WAAY,GACZkB,SAAU,MAEd4G,QAAS,CACL7H,SAAU,EACVD,WAAY,MACZkB,SAAU,MAEd6G,QAAS,CACL9H,SAAU,KACVD,WAAY,MACZkB,SAAU,QAGlBgB,KAAM,CACF8F,aAAc,EACdC,YAAa,EACbhG,wBAAyB,EACzBN,WAAY,GAEhBS,iBAAkB,CACd/C,OAAQ,EACRY,SAAU,EACVD,WAAY,GAEhBkI,6BAA8B,CAC1BL,QAAS,CACL5H,SAAU,EACVD,WAAY,KAEhB8H,QAAS,CACL7H,SAAU,EACVD,WAAY,GAEhB+H,QAAS,CACL9H,SAAU,EACVD,WAAY,OAGpB3C,KAAM,CACFiK,cAAe,EACfrF,wBAAyB,EACzBN,WAAY,GAEhBU,iBAAkB,CACdpI,KAAM,EACNgG,SAAU,GAEdkI,6BAA8B,CAC1BN,QAAS,CACL5H,SAAU,KAEd6H,QAAS,CACL7H,SAAU,KAEd8H,QAAS,CACL9H,SAAU,OAGlBrE,SAAU,CACNC,SAAU,CACNyG,UAAW,GAEfrG,WAAY,CACRqG,UAAW,IAGnBC,iBAAkB,CACdb,QAAS,CACLc,KAAM,CAAC,EAAG,OACV4F,OAAQ,EACR3F,KAAM,GAEVC,YAAa,CACTF,KAAM,CAAC,EAAG,GACV6F,UAAW,EACX5F,KAAM,GAEVb,OAAQ,CACJ3B,SAAU,CACNuC,KAAM,CAAC,EAAG,OACV6F,UAAW,EACX5F,KAAM,GAEVzC,WAAY,CACRwC,KAAM,CAAC,EAAG,OACV6F,UAAW,EACX5F,KAAM,KAIlB6F,+BAAgC,CAC5BT,QAAS,CACL7F,OAAQ,CACJ/B,SAAU,IACVD,WAAY,GACZkB,SAAU,MAEdgB,KAAM,CACFjC,SAAU,EACVD,WAAY,KAEhBuI,cAAe,CACXtI,SAAU,MAGlB6H,QAAS,CACL9F,OAAQ,CACJ/B,SAAU,EACVD,WAAY,MACZkB,SAAU,MAEdgB,KAAM,CACFjC,SAAU,EACVD,WAAY,GAEhBuI,cAAe,CACXtI,SAAU,MAGlB8H,QAAS,CACL/F,OAAQ,CACJ/B,SAAU,KACVD,WAAY,MACZkB,SAAU,OAEdgB,KAAM,CACFjC,SAAU,EACVD,WAAY,MAEhBuI,cAAe,CACXtI,SAAU,QAItBuI,6BAA8B,CAC1BX,QAAS,CACL7F,OAAQ,CACJyG,aAAc,MACdC,cAAe,OAEnBxG,KAAM,CACFuG,aAAc,MACdC,cAAe,QAGvBZ,QAAS,CACL9F,OAAQ,CACJyG,aAAc,KACdC,cAAe,OAEnBxG,KAAM,CACFuG,aAAc,KACdC,cAAe,MAI3BC,2CAA4C,CACxCC,cAAe,CACXC,iBAAkB,KAClBC,wBAAyB,CACrBC,QAAS,GACTC,QAAS,IAEbC,+BAAgC,MAEpCC,cAAe,CACXL,iBAAkB,KAClBC,wBAAyB,CACrBC,QAAS,GACTC,QAAS,IAEbC,+BAAgC,SAvNtB5R,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAOfkG,EAPejG,EAAA,GAOCkG,EAPDlG,EAAA,GAAAG,EA4NsBzB,mBAAS,CACjDiJ,oBAAqB,GACrBW,kBAAmB,GACnBW,kBAAmB,GACnBkB,uBAAwB,GACxBZ,eAAgB,GAChBmB,oBAAqB,KAlOHtK,EAAAxI,OAAAgH,EAAA,EAAAhH,CAAAuI,EAAA,GA4Nf2R,EA5Ne1R,EAAA,GA4NCsH,EA5NDtH,EAAA,GAqOhBwH,EAA2B,WAC7B+H,EAAmB,SAAAxJ,GAAK,OAAIA,EAAQ,KAGlCqC,EAAyB,WAC3BqH,EAAiB,SAAA1J,GAAK,OAAIA,EAAQ,KAGhC+C,EAAyB,WAC3B6G,EAAiB,SAAA5J,GAAK,OAAIA,EAAQ,KA6KtC,OACI/M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIlG,MAAM,YAAYqG,SAAS,aAAanE,UAAU,kBAKpEuL,EACA1L,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACyY,GAAD,CAASlR,OAAQoF,KAErB7M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,QAAQ5M,QAAS,SAAAyH,GACxC6D,GAAe,KADnB,UAMR3L,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACKrC,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMmJ,IAAkBtT,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAAC0Y,GAAD,CAAezV,IAAKiK,EAAGzF,MAAOyF,EAAGsL,eAAgBA,EAAgBpK,kBAAmBA,EAAmBE,yBAA0BA,MAC3KhQ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMqJ,IAAgBxT,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAAC2Y,GAAD,CAAa1V,IAAKiK,EAAGzF,MAAOyF,EAAGsL,eAAgBA,EAAgBpK,kBAAmBA,EAAmBc,uBAAwBA,MACrK5Q,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMuJ,IAAgB1T,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAAC4Y,GAAD,CAAa3V,IAAKiK,EAAGzF,MAAOyF,EAAGsL,eAAgBA,EAAgBpK,kBAAmBA,EAAmBwB,uBAAwBA,MACtK9P,EAAAC,EAAAC,cAAC6Y,GAAD,CAAkBL,eAAgBA,EAAgBpK,kBAAmBA,IACrEtO,EAAAC,EAAAC,cAAC8Y,GAAD,CAAUN,eAAgBA,EAAgBpK,kBAAmBA,IAC7DtO,EAAAC,EAAAC,cAAC+Y,GAAD,CAAeP,eAAgBA,EAAgBpK,kBAAmBA,KAEtEtO,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,QAAQ5M,QAAS,SAAAyH,GAxM5DgF,EAAkB,SAAArF,GAEd,IAAM8J,EAASmH,EAAenK,oBACxBkD,EAAOiH,EAAexJ,kBACtBtC,EAAO8L,EAAe7I,kBACtBqJ,EAAmBR,EAAe3H,uBAClC5F,EAAWuN,EAAevI,eAC1BgJ,EAAgBT,EAAepH,oBA8JrC,OA3JA7J,EAAOwP,sBAAsB1F,OAAO/N,KAAOiE,EAAOwP,sBAAsBxF,KAAKjO,KAAO0V,EAAiBrI,UAAUP,gBAC/G7I,EAAOwP,sBAAsB1F,OAAOoB,UAAYlL,EAAOwP,sBAAsBxF,KAAKkB,UAAYuG,EAAiBrI,UAAUN,qBACzH9I,EAAOwP,sBAAsB1F,OAAO2F,WAAazP,EAAOsQ,6BAA6BmB,EAAiBrI,UAAUP,iBAAiBiB,OAAO2H,EAAiBrI,UAAUN,sBACnK9I,EAAOwP,sBAAsBxF,KAAKyF,WAAazP,EAAOsQ,6BAA6BmB,EAAiBrI,UAAUP,iBAAiBmB,KAAKyH,EAAiBrI,UAAUN,sBAG/J9I,EAAO8J,OAAOjF,YAAYuK,cAAgB,EAC1CtF,EAAOzD,QAAQ,SAAChG,EAAGH,GACf,IAAIoG,GAAY,GAAKwD,EAAO5J,GAAOvB,kBAAkBJ,EAAM,GAAKuL,EAAO5J,GAAOvB,kBAAkBH,EAAM,GAAKwB,EAAOmP,aAAgBrF,EAAO5J,GAAON,cAAgBkK,EAAO5J,GAAOvB,kBAAkBF,IAAKqL,EAAO5J,GAAOyG,cAEnN3G,EAAO8J,OAAOjF,YAAYuK,gBAAkB9I,EAAO/C,QAAQ,KAI/DvD,EAAO8J,OAAOjF,YAAYkF,wBAA0BxD,KAAKC,KAAKxG,EAAO8J,OAAOjF,YAAYuK,eAAiBqC,EAAiBrI,UAAUR,gBAAgBrK,EAAIkT,EAAiBrI,UAAUR,gBAAgBpK,IACnMwB,EAAO8J,OAAOjF,YAAY4E,WAAalD,KAAKC,KAAKxG,EAAO8J,OAAOjF,YAAYkF,wBAA0B/J,EAAOwP,sBAAsB1F,OAAO2F,YAGzIzP,EAAO8J,OAAOhF,SAASsK,cAAgB,EACvCtF,EAAOzD,QAAQ,SAAChG,EAAGH,GACf,IAAIoG,EAA2C,QAAjCwD,EAAO5J,GAAOlB,eAAeF,GAAcgL,EAAO5J,GAAON,aAAekK,EAAO5J,GAAOyG,aAEpG3G,EAAO8J,OAAOhF,SAASsK,gBAAkB9I,EAAO/C,QAAQ,KAI5DvD,EAAO8J,OAAOhF,SAASuK,sBAAwB9I,KAAKC,KAAKxG,EAAO8J,OAAOhF,SAASsK,cAAgBpP,EAAOyQ,2CAA2CgB,EAAiBrI,UAAUH,cAAc0H,kBAE3L3Q,EAAO8J,OAAOhF,SAASwK,iBAAmB/I,KAAKC,KAAMxG,EAAO8J,OAAOhF,SAASsK,cAAgBpP,EAAOyQ,2CAA2CgB,EAAiBrI,UAAUH,cAAc2H,wBAAwBa,EAAiBrI,UAAUF,2BAA4BuI,EAAiBrI,UAAUD,qBAEjSnJ,EAAO8J,OAAOhF,SAASyK,qBAAuBhJ,KAAKC,KAAMxG,EAAO8J,OAAOhF,SAASsK,cAAgBpP,EAAOyQ,2CAA2CM,+BAAgCU,EAAiBrI,UAAUD,qBAG7MnJ,EAAOiK,mBAAmB9C,OAAS,EACnC2C,EAAOzD,QAAQ,SAAChG,EAAGH,GACf,IAAIoG,GAAUwD,EAAO5J,GAAON,aAAekK,EAAO5J,GAAOyG,aAEzD3G,EAAOiK,mBAAmB9C,QAAUb,IAIxCtG,EAAOiK,mBAAmBlC,SAAWxB,KAAKC,KAAKxG,EAAOiK,mBAAmB9C,OAASnH,EAAO0P,+BAA+B+B,EAAiBrI,UAAUL,YAAYhB,UAAUA,UAEzK/H,EAAOiK,mBAAmBnC,WAAavB,KAAKC,KAAKxG,EAAOiK,mBAAmB9C,OAASnH,EAAO0P,+BAA+B+B,EAAiBrI,UAAUL,YAAYjB,YAAYA,YAE7K9H,EAAOiK,mBAAmBjB,SAAWzC,KAAKC,KAAKxG,EAAOiK,mBAAmB9C,OAASnH,EAAO0P,+BAA+B+B,EAAiBrI,UAAUL,YAAYC,UAAUA,UAGzKhJ,EAAOgK,KAAK8F,aAAe,EAC3B9P,EAAOkK,iBAAiB/C,OAAS,EACjC6C,EAAK3D,QAAQ,SAAChG,EAAGH,GACb8J,EAAK9J,GAAOmH,WAAWhB,QAAQ,SAACsL,EAAIC,GAChC,IAAItL,GAAU0D,EAAK9J,GAAOmH,WAAWuK,GAAIzK,QAAU6C,EAAK9J,GAAOmH,WAAWuK,GAAIxK,OAE9EpH,EAAOgK,KAAK8F,cAAgBxJ,EAC5BtG,EAAOkK,iBAAiB/C,QAAUb,MAK1CtG,EAAOgK,KAAK+F,YAAc,EAC1B/F,EAAK3D,QAAQ,SAAChG,EAAGH,GACb,IAAIgF,EAAQ,EAEZ8E,EAAK9J,GAAOmH,WAAWhB,QAAQ,SAACsL,EAAIC,GAChC,IAAItL,GAAU0D,EAAK9J,GAAOmH,WAAWuK,GAAIzK,QAAU6C,EAAK9J,GAAOmH,WAAWuK,GAAIxK,OAC9ElC,GAASoB,IAGbnD,QAAQC,IAAI4G,EAAK9J,IAEjB,IAAI2R,EAAM3M,GAAU,GAAK8E,EAAK9J,GAAOwH,gBAAgBlJ,IAAOwL,EAAK9J,GAAOwH,gBAAgBnJ,EAAM,EAAIyB,EAAOmP,YACzGnP,EAAOgK,KAAK+F,aAAe8B,IAG/B7R,EAAOgK,KAAKD,wBAA0BxD,KAAKC,KAAKxG,EAAOgK,KAAK+F,aAAe0B,EAAiBrI,UAAUR,gBAAgBrK,EAAIkT,EAAiBrI,UAAUR,gBAAgBpK,IACrKwB,EAAOgK,KAAKP,WAAalD,KAAKC,KAAKxG,EAAOgK,KAAKD,wBAA0B/J,EAAOwP,sBAAsBxF,KAAKyF,YAG3GzP,EAAOkK,iBAAiBnC,SAAWxB,KAAKC,KAAKxG,EAAOkK,iBAAiB/C,OAASnH,EAAOgQ,6BAA6ByB,EAAiBrI,UAAUL,YAAYhB,UAAUA,UACnK/H,EAAOkK,iBAAiBpC,WAAavB,KAAKC,KAAKxG,EAAOkK,iBAAiB/C,OAASnH,EAAOgQ,6BAA6ByB,EAAiBrI,UAAUL,YAAYjB,YAAYA,YAGvK9H,EAAOmF,KAAKiK,cAAgB,EAC5BpP,EAAOmK,iBAAiBpI,KAAO,EAC/BoD,EAAKkB,QAAQ,SAAChG,EAAGH,GACb,IAAIgF,EAAQ,EAEZ/B,QAAQC,IAAI,cAAe+B,EAAKjF,GAAO8H,YAEvC7C,EAAKjF,GAAO8H,WAAW3B,QAAQ,SAACsL,EAAIC,GAChC,IAAItL,GAAUnB,EAAKjF,GAAO8H,WAAW4J,GAAI9J,YAAc3C,EAAKjF,GAAO8H,WAAW4J,GAAI7J,SAClF7C,GAASoB,IAGbnD,QAAQC,IAAI4G,EAAK9J,IAEjB,IAAI2R,EAAM3M,EACVlF,EAAOmF,KAAKiK,eAAiByC,EAC7B7R,EAAOmK,iBAAiBpI,MAAQ8P,IAIpC7R,EAAOmF,KAAK4E,wBAA0BxD,KAAKC,KAAKxG,EAAOmF,KAAKiK,eAAiBqC,EAAiBrI,UAAUR,gBAAgBrK,EAAIkT,EAAiBrI,UAAUR,gBAAgBpK,IACvKwB,EAAOmF,KAAKsE,WAAalD,KAAKC,KAA2C,MAAtCxG,EAAOmF,KAAK4E,yBAG/C/J,EAAOmK,iBAAiBpC,SAAWxB,KAAKC,KAAKxG,EAAOmK,iBAAiBpI,KAAO/B,EAAOiQ,6BAA6BwB,EAAiBrI,UAAUL,YAAYhB,UAAUA,UAGjK/H,EAAO0D,SAASC,SAASyG,UAAY7D,KAAKC,KAAK,IAACxG,EAAO8J,OAAOjF,YAAYuK,cAAgBpP,EAAOgK,KAAK+F,YAAc/P,EAAOmF,KAAKiK,gBAA4B,IAAI1L,EAASjB,gBAAiBiB,EAAS4E,iBACnMtI,EAAO0D,SAASK,WAAWqG,WAAc1G,EAASjB,eAAiBiB,EAASb,YAAc7C,EAAO0D,SAASC,SAASyG,YAAe1G,EAASf,eAAiBe,EAASX,YAAc/C,EAAO0D,SAASC,SAASyG,YAAe1G,EAAS4E,eAAiB5E,EAAS8E,YAAcxI,EAAO0D,SAASC,SAASyG,UAGhP,QAAjDqH,EAAiBrI,UAAUR,gBAAgBrK,EAAayB,EAAOqK,iBAAiBb,QAAQc,KAAK,GAAK,aACjGtK,EAAOqK,iBAAiBb,QAAQc,KAAK,GAAK,aAE/CtK,EAAOqK,iBAAiBb,QAAQ0G,OAASlQ,EAAO8J,OAAOjF,YAAYkF,wBAA0B/J,EAAOgK,KAAKD,wBAA0B/J,EAAOmF,KAAK4E,wBAE5F,UAA/C0H,EAAiBrI,UAAUP,gBAA6B7I,EAAOqK,iBAAiBG,YAAYF,KAAK,GAAK,YAClD,UAA/CmH,EAAiBrI,UAAUP,gBAA6B7I,EAAOqK,iBAAiBG,YAAYF,KAAK,GAAK,YAC1GtK,EAAOqK,iBAAiBG,YAAYF,KAAK,GAAK,IAEnDtK,EAAOqK,iBAAiBG,YAAY2F,UAAYnQ,EAAO8J,OAAOjF,YAAY4E,WAAazJ,EAAOgK,KAAKP,WAAazJ,EAAOmF,KAAKsE,WAEpE,eAApDgI,EAAiBrI,UAAUN,qBAAuC9I,EAAOqK,iBAAiBG,YAAYF,KAAK,GAAK,OACvD,gBAApDmH,EAAiBrI,UAAUN,qBAAwC9I,EAAOqK,iBAAiBG,YAAYF,KAAK,GAAK,OACrHtK,EAAOqK,iBAAiBG,YAAYF,KAAK,GAAK,IAGnDtK,EAAOqK,iBAAiBb,QAAQe,MAAQmH,EAAc/H,WAAWH,QAAUxJ,EAAOqK,iBAAiBb,QAAQ0G,OAC3GlQ,EAAOqK,iBAAiBG,YAAYD,MAAQmH,EAAc/H,WAAWF,WAAazJ,EAAOqK,iBAAiBG,YAAY2F,UAG9D,UAApDsB,EAAiBrI,UAAUL,YAAYhB,SAAsB/H,EAAOqK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,aACtD,UAApDmH,EAAiBrI,UAAUL,YAAYhB,SAAsB/H,EAAOqK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,YAC3D,UAApDmH,EAAiBrI,UAAUL,YAAYhB,SAAsB/H,EAAOqK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,YACnHtK,EAAOqK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,IAEvDtK,EAAOqK,iBAAiBX,OAAO3B,SAASoI,UAAYnQ,EAAOiK,mBAAmBlC,SAAW/H,EAAOiK,mBAAmBjB,SAAWhJ,EAAOkK,iBAAiBnC,SAAW/H,EAAOmK,iBAAiBpC,SAE/H,UAAtD0J,EAAiBrI,UAAUL,YAAYjB,WAAwB9H,EAAOqK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,aACxD,UAAtDmH,EAAiBrI,UAAUL,YAAYjB,WAAwB9H,EAAOqK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,YAC7D,UAAtDmH,EAAiBrI,UAAUL,YAAYjB,WAAwB9H,EAAOqK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,YACvHtK,EAAOqK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,IAEzDtK,EAAOqK,iBAAiBX,OAAO5B,WAAWqI,UAAYnQ,EAAOiK,mBAAmBnC,WAAa9H,EAAOkK,iBAAiBpC,WAGrH9H,EAAOqK,iBAAiBX,OAAO3B,SAASwC,KAAOvK,EAAOqK,iBAAiBX,OAAO3B,SAASoI,WAAauB,EAAc/H,WAAWD,OAAO,GACpI1J,EAAOqK,iBAAiBX,OAAO5B,WAAWyC,KAAOvK,EAAOqK,iBAAiBX,OAAO5B,WAAWqI,WAAauB,EAAc/H,WAAWD,OAAO,GAExIvG,QAAQC,IAAI6N,EAAgBjR,GAE5BkE,GAAe,GACRlE,MAmCK,kBD9ZtB,CACEyO,KAAM,wBACNzV,OAAQmD,EACRwS,UE3BJ,SAAkBvW,GAAO,IAAAwF,EACiBC,oBAAS,GAD1BC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACdqG,EADcnG,EAAA,GACDoG,EADCpG,EAAA,GAAAI,EAGyBL,mBAAS,GAHlCM,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAGd2Q,EAHc1Q,EAAA,GAGG2Q,EAHH3Q,EAAA,GAAAG,EAI+BT,mBAAS,GAJxCa,EAAA3H,OAAAgH,EAAA,EAAAhH,CAAAuH,EAAA,GAIdwT,EAJcpT,EAAA,GAIMqT,EAJNrT,EAAA,GAAAG,EAK2BhB,mBAAS,GALpCkB,EAAAhI,OAAAgH,EAAA,EAAAhH,CAAA8H,EAAA,GAKdmT,EALcjT,EAAA,GAKIkT,EALJlT,EAAA,GAAAG,EAMqBrB,mBAAS,GAN9BsB,EAAApI,OAAAgH,EAAA,EAAAhH,CAAAmI,EAAA,GAMd6P,EANc5P,EAAA,GAMC6P,EAND7P,EAAA,GAAAG,EAOqBzB,mBAAS,GAP9B0B,EAAAxI,OAAAgH,EAAA,EAAAhH,CAAAuI,EAAA,GAOd2P,EAPc1P,EAAA,GAOC2P,EAPD3P,EAAA,GAAAG,EAQuC7B,mBAAS,GARhD8B,EAAA5I,OAAAgH,EAAA,EAAAhH,CAAA2I,EAAA,GAQdwS,EARcvS,EAAA,GAQUwS,EARVxS,EAAA,GAAAyS,EAUuBvU,mBAAS,CACjDiJ,oBAAqB,GACrB7G,oBAAqB,GACrBkB,kBAAmB,GACnBsG,kBAAmB,GACnBW,kBAAmB,GACnBxG,iBAAkB,GAClBsK,oBAAqB,GACrBO,gBAAiB,GACjB/D,eAAgB,GAChBmB,oBAAqB,KApBJwI,EAAAtb,OAAAgH,EAAA,EAAAhH,CAAAqb,EAAA,GAUdE,EAVcD,EAAA,GAUE5H,EAVF4H,EAAA,GAAAE,EAuBuB1U,mBAAS,CACjD2U,YAAa,CACTzF,OAAQ,EACRH,KAAM,GACNC,OAAQ,GAEZ/C,OAAQ,CACJ2I,aAAc,EACd3F,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhBjI,eAAgB,CACZ6N,aAAc,EACd3F,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhB9H,aAAc,CACV0N,aAAc,EACd3F,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhB7C,KAAM,CACFyI,aAAc,EACd3F,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhB1H,KAAM,CACFsN,aAAc,EACd3F,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhB1G,YAAa,CACTsM,aAAc,EACd3F,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhBG,gBAAiB,CACb0F,kBAAmB,EACnBC,sBAAuB,EACvBC,uBAAwB,EACxBC,gBAAiB,EACjBC,gBAAiB,EACjBC,gBAAiB,EACjBC,iBAAkB,EAClBC,kBAAmB,EACnBC,iBAAkB,EAClBpG,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhBsG,kBAAmB,CACfC,cAAe,CACXC,GAAM,CACF7G,YAAa,aACb8G,WAAY,CACRC,OAAQ,GACRC,OAAQ,KAEZ5G,KAAM,GACNC,OAAQ,GAEZ4G,EAAK,CACDjH,YAAa,WACb8G,WAAY,CACRC,OAAQ,EACRC,OAAQ,GAEZ5G,KAAM,GACNC,OAAQ,GAEZ6G,EAAK,CACDlH,YAAa,aACb8G,WAAY,CACRC,OAAQ,IACRC,OAAQ,GAEZ5G,KAAM,GACNC,OAAQ,GAEZ8G,EAAK,CACDnH,YAAa,WACb8G,WAAY,CACRC,OAAQ,EACRC,OAAQ,GAEZ5G,KAAM,GACNC,OAAQ,KAIpBnJ,SAAU,CACNuJ,WAAY,CACRtJ,SAAU,EACVI,WAAY,IAGpBsG,iBAAkB,CACdsC,YAAa,CACTvF,OAAQ,EACR8F,MAAO,GAEXN,KAAM,CACFxF,OAAQ,EACR8F,MAAO,GAEXL,OAAQ,CACJzF,OAAQ,EACR8F,MAAO,MAtJE0G,EAAA7c,OAAAgH,EAAA,EAAAhH,CAAAwb,EAAA,GAuBdnN,EAvBcwO,EAAA,GAuBEvO,EAvBFuO,EAAA,GA2Jf7M,EAA2B,WAC7B+H,EAAmB,SAAAxJ,GAAK,OAAIA,EAAQ,KAGlCuO,EAA8B,WAChC9B,EAAsB,SAAAzM,GAAK,OAAIA,EAAQ,KAGrCwO,EAA4B,WAC9B7B,EAAoB,SAAA3M,GAAK,OAAIA,EAAQ,KAGnCqC,EAAyB,WAC3BqH,EAAiB,SAAA1J,GAAK,OAAIA,EAAQ,KAGhC+C,EAAyB,WAC3B6G,EAAiB,SAAA5J,GAAK,OAAIA,EAAQ,KAGhCyO,EAAkC,WACpC5B,EAA0B,SAAA7M,GAAK,OAAIA,EAAQ,KA2K/C,OACI/M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIlG,MAAM,WAAWqG,SAAS,aAAanE,UAAU,kBAKnEuL,EACA1L,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACub,GAAD,CAAShU,OAAQoF,KAErB7M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,QAAQ5M,QAAS,SAAAyH,GACxC6D,GAAe,KADnB,UAMR3L,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACKrC,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMmJ,IAAkBtT,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAACwb,GAAD,CAAevY,IAAKiK,EAAGzF,MAAOyF,EAAG2M,eAAgBA,EAAgB7H,kBAAmBA,EAAmB1D,yBAA0BA,MAC3KhQ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMoM,IAAqBvW,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAACyb,GAAD,CAAsBxY,IAAKiK,EAAGzF,MAAOyF,EAAG2M,eAAgBA,EAAgB7H,kBAAmBA,EAAmB1D,yBAA0B8M,MACrL9c,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMsM,IAAmBzW,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAAC0b,GAAD,CAAoBzY,IAAKiK,EAAGzF,MAAOyF,EAAG2M,eAAgBA,EAAgB7H,kBAAmBA,EAAmB1D,yBAA0B+M,MACjL/c,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMqJ,IAAgBxT,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAAC2b,GAAD,CAAa1Y,IAAKiK,EAAGzF,MAAOyF,EAAG2M,eAAgBA,EAAgB7H,kBAAmBA,EAAmB9C,uBAAwBA,MACrK5Q,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMuJ,IAAgB1T,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAAC4b,GAAD,CAAa3Y,IAAKiK,EAAGzF,MAAOyF,EAAG2M,eAAgBA,EAAgB7H,kBAAmBA,EAAmBpC,uBAAwBA,MACtK9P,EAAAC,EAAAC,cAAC6b,GAAD,CAAmBhC,eAAgBA,EAAgB7H,kBAAmBA,IACrE1T,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMwM,IAAyB3W,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAAC8b,GAAD,CAAsB7Y,IAAKiK,EAAGzF,MAAOyF,EAAG2M,eAAgBA,EAAgB7H,kBAAmBA,EAAmBsJ,gCAAiCA,MACjMxb,EAAAC,EAAAC,cAAC+b,GAAD,CAAWlC,eAAgBA,EAAgB7H,kBAAmBA,IAC9DlS,EAAAC,EAAAC,cAACgc,GAAD,CAAUnC,eAAgBA,EAAgB7H,kBAAmBA,IAC7DlS,EAAAC,EAAAC,cAACic,GAAD,CAAepC,eAAgBA,EAAgB7H,kBAAmBA,KAEtElS,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,QAAQ5M,QAAS,SAAAyH,GA1M5DgF,EAAkB,SAAArF,GAEd,IAAM8J,EAASwI,EAAexL,oBACxBlC,EAAiB0N,EAAerS,oBAChC8E,EAAeuN,EAAenR,kBAC9B6I,EAAOsI,EAAe7K,kBACtBtC,EAAOmN,EAAelK,kBACtBjC,EAAcmM,EAAe1Q,iBAC7B+S,EAAiBrC,EAAepG,oBAChC0I,EAAatC,EAAe7F,gBAC5B/I,EAAW4O,EAAe5J,eAC1BmM,EAAWvC,EAAezI,oBAwJhC,OArJA7J,EAAOwS,YAAYzF,OAAS/M,EAAOmT,kBAAkBC,cAAcwB,EAAWtI,cAAcgH,WAAWsB,EAAWrI,WAGlHvM,EAAO8J,OAAO2I,aAAe,EAC7B3I,EAAOzD,QAAQ,SAAChG,EAAGH,GACf,IAAIoG,GAAUwD,EAAO5J,GAAOvB,kBAAkBJ,GAAKuL,EAAO5J,GAAOvB,kBAAkBH,IAAMsL,EAAO5J,GAAOvB,kBAAkBF,IAAKqL,EAAO5J,GAAOyG,eAAiBmD,EAAO5J,GAAON,YAC3K0G,KAAYwD,EAAO5J,GAAOlB,eAAeF,GAAKgL,EAAO5J,GAAOlB,eAAeF,EAAI,MAAQgL,EAAO5J,GAAOlB,eAAeP,GAAKqL,EAAO5J,GAAOlB,eAAeP,EAAI,KAAMqL,EAAO5J,GAAOyG,eAAiBmD,EAAO5J,GAAON,YAE7MI,EAAO8J,OAAO2I,cAAgBnM,IAIlCtG,EAAO8J,OAAOgD,SAASC,OAASxG,KAAKC,KAAKxG,EAAO8J,OAAO2I,aAAezS,EAAOwS,YAAYzF,QAC1F/M,EAAO8J,OAAOgD,SAASF,KAAO5M,EAAO8J,OAAO2I,aAAezS,EAAOwS,YAAY5F,KAC9E5M,EAAO8J,OAAOgD,SAASD,OAAS7M,EAAO8J,OAAO2I,aAAezS,EAAOwS,YAAY3F,OAGhF7M,EAAO4E,eAAe6N,aAAe,EACrC7N,EAAeyB,QAAQ,SAAChG,EAAGH,GACvB,IAAIoG,GAAU1B,EAAe1E,GAAOvB,kBAAkBJ,GAAKqG,EAAe1E,GAAOvB,kBAAkBH,GAAKoG,EAAe1E,GAAOvB,kBAAkBF,GAAKmG,EAAe1E,GAAON,YAC3K0G,KAAY1B,EAAe1E,GAAOlB,eAAeF,GAAK8F,EAAe1E,GAAOlB,eAAeF,EAAI,KAAO8F,EAAe1E,GAAOlB,eAAeP,GAAKmG,EAAe1E,GAAOlB,eAAeP,EAAI,IAAMmG,EAAe1E,GAAON,YAErNI,EAAO4E,eAAe6N,cAAgBnM,IAI1CtG,EAAO4E,eAAekI,SAASC,OAASxG,KAAKC,KAAKxG,EAAO4E,eAAe6N,aAAezS,EAAOwS,YAAYzF,QAC1G/M,EAAO4E,eAAekI,SAASF,KAAO5M,EAAO4E,eAAe6N,aAAezS,EAAOwS,YAAY5F,KAC9F5M,EAAO4E,eAAekI,SAASD,OAAS7M,EAAO4E,eAAe6N,aAAezS,EAAOwS,YAAY3F,OAGhG7M,EAAO+E,aAAa0N,aAAe,EACnC1N,EAAasB,QAAQ,SAAChG,EAAGH,GACrB,IAAIoG,GAAUvB,EAAa7E,GAAOwK,kBAAoB3F,EAAa7E,GAAO0K,kBAAoB7F,EAAa7E,GAAOe,cAElHjB,EAAO+E,aAAa0N,cAAgBnM,IAIxCtG,EAAO+E,aAAa+H,SAASC,OAASxG,KAAKC,KAAKxG,EAAO+E,aAAa0N,aAAezS,EAAOwS,YAAYzF,QACtG/M,EAAO+E,aAAa+H,SAASF,KAAO5M,EAAO+E,aAAa0N,aAAezS,EAAOwS,YAAY5F,KAC1F5M,EAAO+E,aAAa+H,SAASD,OAAS7M,EAAO+E,aAAa0N,aAAezS,EAAOwS,YAAY3F,OAG5F7M,EAAOgK,KAAKyI,aAAe,EAC3BzI,EAAK3D,QAAQ,SAAChG,EAAGH,GACb,IAAIgF,EAAQ,EAEZ8E,EAAK9J,GAAOmH,WAAWhB,QAAQ,SAACsL,EAAIC,GAChC,IAAItL,GAAU0D,EAAK9J,GAAOmH,WAAWuK,GAAIzK,QAAU6C,EAAK9J,GAAOmH,WAAWuK,GAAIxK,OAC9ElC,GAASoB,IAGb,IAAIuL,EAAM3M,GAAS8E,EAAK9J,GAAOwH,gBAAgBlJ,GAAKwL,EAAK9J,GAAOwH,gBAAgBnJ,EAChFyB,EAAOgK,KAAKyI,cAAgBZ,IAIhC7R,EAAOgK,KAAK8C,SAASC,OAASxG,KAAKC,KAAKxG,EAAOgK,KAAKyI,aAAezS,EAAOwS,YAAYzF,QACtF/M,EAAOgK,KAAK8C,SAASF,KAAO5M,EAAOgK,KAAKyI,aAAezS,EAAOwS,YAAY5F,KAC1E5M,EAAOgK,KAAK8C,SAASD,OAAS7M,EAAOgK,KAAKyI,aAAezS,EAAOwS,YAAY3F,OAG5E7M,EAAOmF,KAAKsN,aAAe,EAC3BtN,EAAKkB,QAAQ,SAAChG,EAAGH,GACb,IAAIgF,EAAQ,EAEZC,EAAKjF,GAAO8H,WAAW3B,QAAQ,SAACsL,EAAIC,GAChC,IAAItL,GAAUnB,EAAKjF,GAAO8H,WAAW4J,GAAI9J,YAAc3C,EAAKjF,GAAO8H,WAAW4J,GAAI7J,SAClF7C,GAASoB,IAGbnD,QAAQC,IAAI8B,GAEZ,IAAI2M,EAAM3M,IAAUC,EAAKjF,GAAO4K,cAAgB,KAEhD3H,QAAQC,IAAI+B,EAAKjF,IAEjBF,EAAOmF,KAAKsN,cAAgBZ,IAIhC7R,EAAOmF,KAAK2H,SAASC,OAASxG,KAAKC,KAAKxG,EAAOmF,KAAKsN,aAAezS,EAAOwS,YAAYzF,QACtF/M,EAAOmF,KAAK2H,SAASF,KAAO5M,EAAOmF,KAAKsN,aAAezS,EAAOwS,YAAY5F,KAC1E5M,EAAOmF,KAAK2H,SAASD,OAAS7M,EAAOmF,KAAKsN,aAAezS,EAAOwS,YAAY3F,OAG5E7M,EAAOmG,YAAYsM,cAAgBtM,EAAYgF,eAAehE,QAAUhB,EAAYgF,eAAeH,OAAS7E,EAAYgF,eAAeD,UACvIlL,EAAOmG,YAAYsM,eAAiBtM,EAAYkF,kBAAkBlE,QAAUhB,EAAYkF,kBAAkBL,OAAS7E,EAAYkF,kBAAkBH,UAGjJlL,EAAOmG,YAAY2G,SAASC,OAASxG,KAAKC,KAAKxG,EAAOmG,YAAYsM,aAAezS,EAAOwS,YAAYzF,QACpG/M,EAAOmG,YAAY2G,SAASF,KAAO5M,EAAOmG,YAAYsM,aAAezS,EAAOwS,YAAY5F,KACxF5M,EAAOmG,YAAY2G,SAASD,OAAS7M,EAAOmG,YAAYsM,aAAezS,EAAOwS,YAAY3F,OAG1F7M,EAAOgN,gBAAgB0F,kBAAoB,EAC3C1S,EAAOgN,gBAAgB2F,sBAAwB,EAC/C3S,EAAOgN,gBAAgB4F,uBAAyB,EAChD5S,EAAOgN,gBAAgB6F,gBAAkB,EACzC7S,EAAOgN,gBAAgB8F,gBAAkB,EACzC9S,EAAOgN,gBAAgBiG,kBAAoB,EAC3CjT,EAAOgN,gBAAgBkG,iBAAmB,EAC1CyB,EAAetO,QAAQ,SAAChG,EAAGH,GACvB,IAAIgF,EAAQ,EAEZyP,EAAezU,GAAOgM,oBAAoBJ,QAAQzF,QAAQ,SAACsL,EAAIC,GAC3D,IAAItL,IAAWqO,EAAezU,GAAOgM,oBAAoBJ,QAAQ8F,GAAI3F,gBAAkB0I,EAAezU,GAAOgM,oBAAoBT,aAAekJ,EAAezU,GAAOgM,oBAAoBJ,QAAQ8F,GAAI5F,eAAiB2I,EAAezU,GAAOgM,oBAAoBJ,QAAQ8F,GAAI7F,qBAC7Q7G,GAASoB,IAGbtG,EAAOgN,gBAAgB0F,kBAAoBxN,EAC3ClF,EAAOgN,gBAAgB2F,sBAAyB,GAAKgC,EAAezU,GAAOgM,oBAAoBT,YAAekJ,EAAezU,GAAOgM,oBAAoBP,gBAAkBgJ,EAAezU,GAAOgM,oBAAoBJ,QAAQ,GAAGC,qBAC/N/L,EAAOgN,gBAAgB4F,wBAA0B+B,EAAezU,GAAOgM,oBAAoBT,aAAekJ,EAAezU,GAAOgM,oBAAoBJ,QAAQ,GAAGG,gBAAkB0I,EAAezU,GAAOgM,oBAAoBT,aAAekJ,EAAezU,GAAOgM,oBAAoBJ,QAAQ,GAAGC,qBAE/R/L,EAAOgN,gBAAgB6F,gBAAkBtM,KAAKuO,KAAKvO,KAAKwO,KAAKJ,EAAezU,GAAOgM,oBAAoBN,gBAAmB,GAAK+I,EAAezU,GAAOgM,oBAAoBT,aAAgBkJ,EAAezU,GAAOgM,oBAAoBT,YAAckJ,EAAezU,GAAOgM,oBAAoBJ,QAAQ,GAAGG,gBAAiB,GAAK1F,KAAKwO,KAAMJ,EAAezU,GAAOgM,oBAAoBR,iBAAmBiJ,EAAezU,GAAOgM,oBAAoBJ,QAAQ,GAAGC,qBAAuB,IAChd/L,EAAOgN,gBAAgB8F,gBAAkB9S,EAAOgN,gBAAgB6F,iBAAmB8B,EAAezU,GAAOgM,oBAAoBJ,QAAQ,GAAGG,gBAAkB0I,EAAezU,GAAOgM,oBAAoBJ,QAAQ,GAAGE,cAE/MhM,EAAOgN,gBAAgB+F,gBAAkBxM,KAAKC,MAAOmO,EAAezU,GAAOgM,oBAAoBR,iBAAiBiJ,EAAezU,GAAOgM,oBAAoBV,YAAe,GACzKxL,EAAOgT,iBAAmB,IAAO2B,EAAezU,GAAOgM,oBAAoBV,aAAemJ,EAAezU,GAAOgM,oBAAoBT,WACpIzL,EAAOiT,kBAAoBjT,EAAOgN,gBAAgB+F,gBAAkB/S,EAAOgT,iBAE3EhT,EAAOgN,gBAAgBkG,kBAAqBlT,EAAOgN,gBAAgB0F,kBAAoB1S,EAAOgN,gBAAgB2F,sBAAwB3S,EAAOgN,gBAAgB4F,uBAAyB5S,EAAOgN,gBAAgB8F,gBAAkB9S,EAAOiT,oBAI1OjT,EAAOgN,gBAAgBF,SAASC,OAASxG,KAAKC,KAAKxG,EAAOgN,gBAAgBkG,iBAAmBlT,EAAOwS,YAAYzF,QAChH/M,EAAOgN,gBAAgBF,SAASF,KAAO5M,EAAOgN,gBAAgBkG,iBAAmBlT,EAAOwS,YAAY5F,KACpG5M,EAAOgN,gBAAgBF,SAASD,OAAS7M,EAAOgN,gBAAgBkG,iBAAmBlT,EAAOwS,YAAY3F,OAGtG7M,EAAO0D,SAASuJ,WAAWtJ,SAAW4C,KAAKC,MAAMxG,EAAO8J,OAAO2I,aAAezS,EAAO4E,eAAe6N,aAAezS,EAAO+E,aAAa0N,aAAezS,EAAOgK,KAAKyI,aAAezS,EAAOmF,KAAKsN,aAAezS,EAAOgN,gBAAgBkG,mBAAqB,EAAE,KAAQ,IAAIxP,EAASjB,gBAAiBiB,EAASf,gBAAiBe,EAAS4E,iBAGnUtI,EAAO0D,SAASuJ,WAAWlJ,YAAeL,EAASjB,eAAiBiB,EAASb,YAAc7C,EAAO0D,SAASuJ,WAAWtJ,WAAcD,EAASf,eAAiBe,EAASX,YAAc/C,EAAO0D,SAASuJ,WAAWtJ,WAAcD,EAAS4E,eAAiB5E,EAAS8E,YAAcxI,EAAO0D,SAASuJ,WAAWtJ,SAG1S3D,EAAOqK,iBAAiBsC,YAAYvF,OAASpH,EAAO8J,OAAOgD,SAASC,OAAS/M,EAAO4E,eAAekI,SAASC,OAAS/M,EAAO+E,aAAa+H,SAASC,OAAS/M,EAAOgK,KAAK8C,SAASC,OAAS/M,EAAOmF,KAAK2H,SAASC,OAAS/M,EAAOmG,YAAY2G,SAASC,OAAS/M,EAAOgN,gBAAgBF,SAASC,OAC5R/M,EAAOqK,iBAAiBuC,KAAKxF,OAASpH,EAAO8J,OAAOgD,SAASF,KAAO5M,EAAO4E,eAAekI,SAASF,KAAO5M,EAAO+E,aAAa+H,SAASF,KAAO5M,EAAOgK,KAAK8C,SAASF,KAAO5M,EAAOmF,KAAK2H,SAASF,KAAO5M,EAAOmG,YAAY2G,SAASF,KAAO5M,EAAOgN,gBAAgBF,SAASF,KACzQ5M,EAAOqK,iBAAiBwC,OAAOzF,OAASpH,EAAO8J,OAAOgD,SAASD,OAAS7M,EAAO4E,eAAekI,SAASD,OAAS7M,EAAO+E,aAAa+H,SAASD,OAAS7M,EAAOgK,KAAK8C,SAASD,OAAS7M,EAAOmF,KAAK2H,SAASD,OAAS7M,EAAOmG,YAAY2G,SAASD,OAAS7M,EAAOgN,gBAAgBF,SAASD,OAGvR7M,EAAOqK,iBAAiBsC,YAAYO,MAAQlN,EAAOqK,iBAAiBsC,YAAYvF,QAAUyN,EAASlL,WAAWgD,YAC9G3M,EAAOqK,iBAAiBuC,KAAKM,MAAQlN,EAAOqK,iBAAiBuC,KAAKxF,QAAUyN,EAASlL,WAAWiD,KAChG5M,EAAOqK,iBAAiBwC,OAAOK,MAAQlN,EAAOqK,iBAAiBwC,OAAOzF,QAAUyN,EAASlL,WAAWkD,OAEpG1J,QAAQC,IAAIkP,EAAgBtS,GAE5BkE,GAAe,GACRlE,MAuCK,kBFjWtB,CACEyO,KAAM,uBACNzV,OAAQmD,EACRwS,UDxCJ,SAAiBvW,GAAO,IAAAwF,EACsBC,mBAAS,GAD/BC,EAAA/G,OAAAgH,EAAA,EAAAhH,CAAA6G,EAAA,GACboX,EADalX,EAAA,GACEmX,EADFnX,EAAA,GAAAI,EAGsBL,mBAAS,CAC/CwQ,YAAa,GACb3F,eAAgB,GAChBmB,oBAAqB,KANL1L,EAAApH,OAAAgH,EAAA,EAAAhH,CAAAmH,EAAA,GAGboQ,EAHanQ,EAAA,GAGEiQ,EAHFjQ,EAAA,GASd+W,EAAyB,WAC3BD,EAAiB,SAAA3P,GAAK,OAAIA,EAAQ,KAGtC,OACI/M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIlG,MAAM,UAAUqG,SAAS,aAAanE,UAAU,kBAItEH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACKrC,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMsP,IAAgBzZ,IAAI,SAAC8E,EAAGsF,GAAJ,OAAUpN,EAAAC,EAAAC,cAAC0c,GAAD,CAAOzZ,IAAKiK,EAAGzF,MAAOyF,EAAG2I,cAAeA,EAAeF,iBAAkBA,EAAkB8G,uBAAwBA,MAC5J3c,EAAAC,EAAAC,cAAC2c,GAAD,CAAU9G,cAAeA,EAAeF,iBAAkBA,IAC1D7V,EAAAC,EAAAC,cAAC4c,GAAD,CAAe/G,cAAeA,EAAeF,iBAAkBA,KAEnE7V,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASmM,KAAK,QAAQ5M,QAAS,SAAAyH,GACxC8C,QAAQC,IAAIkL,KADhB,kBCclB,CACEG,KAAM,0BACNzV,OAAQmD,EACRwS,UAAW3K,cGnDfsR,KAAgBC,WAAWC,+CAAYC,gBAAkB,kBAEzD,IA0CeC,GA1CK,SAACC,GAAmC,IAAjBC,EAAiBC,UAAA1O,OAAA,QAAAT,IAAAmP,UAAA,GAAAA,UAAA,GAAP,GACzCC,EAAY,SAAAC,GAKhBT,KAAgBU,IAAhBjf,OAAAsE,EAAA,EAAAtE,CAAA,CACEgf,QACGH,IAELN,KAAgBW,SAASF,IAGrBG,EAAWV,+CAAYW,oBAAsB,GA0BnD,OAvBS,SAAAC,GAAA,SAAAC,IAAA,OAAAtf,OAAAC,EAAA,EAAAD,CAAAE,KAAAof,GAAAtf,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAsf,GAAAC,MAAArf,KAAA4e,YAAA,OAAA9e,OAAAwf,EAAA,EAAAxf,CAAAsf,EAAAD,GAAArf,OAAAyf,EAAA,EAAAzf,CAAAsf,EAAA,EAAA3a,IAAA,oBAAA6E,MAAA,WAGL,IAAMwV,EAAO9e,KAAKmB,MAAMqe,SAASC,SAAWzf,KAAKmB,MAAMqe,SAASE,OAChEb,EAAS,GAAAc,OAAIV,GAAJU,OAAeb,MAJnB,CAAAra,IAAA,qBAAA6E,MAAA,SAOYsW,GACjB,IAAMC,EACJD,EAAUJ,SAASC,SAAWG,EAAUJ,SAASE,OAC7CI,EACJ9f,KAAKmB,MAAMqe,SAASC,SAAWzf,KAAKmB,MAAMqe,SAASE,OAEjDG,IAAgBC,GAClBjB,EAAS,GAAAc,OAAIV,GAAJU,OAAeG,MAdrB,CAAArb,IAAA,SAAA6E,MAAA,WAmBL,OAAOhI,EAAAC,EAAAC,cAACkd,EAAqB1e,KAAKmB,WAnB7Bie,EAAA,CAAiBvd,cCXbke,yBAAA,kBACbze,EAAAC,EAAAC,cAACwe,EAAA,EAAD,CAAQC,SAAU1B,+CAAYW,oBAAsB,IAClD5d,EAAAC,EAAAC,cAAA,WACG+V,GAAOjT,IAAI,SAAC4b,EAAOjX,GAClB,OACE3H,EAAAC,EAAAC,cAAC2e,EAAA,EAAD,CACE1b,IAAKwE,EACLuO,KAAM0I,EAAM1I,KACZC,MAAOyI,EAAMzI,MACbC,UAAW+G,GAAY,SAAAtd,GACrB,OACEG,EAAAC,EAAAC,cAAC0e,EAAMne,OAAWZ,EAChBG,EAAAC,EAAAC,cAAC0e,EAAMxI,UAAcvW,cCVnBif,QACW,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASC,MACvB,2DCZN,IAAMC,GAAiB,WACnBC,IAASC,OAAOpf,EAAAC,EAAAC,cAACue,GAAD,MAASY,SAASC,eAAe,UAGjDP,OAAOQ,QACPF,SAASG,iBAAiB,cAAe,WACrCN,OACD,GAEHA,KDkHE,kBAAmBO,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.924b1cb1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.60a85991.svg\";","export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    {\n      title: \"Estimations\",\n      to: \"/estimations\",\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Estimation\",\n      to: \"/estimations-add\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Earthworks Estimation\",\n      to: \"/estimations-earthworks\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Formworks Estimation\",\n      to: \"/estimations-formworks\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Concrete Estimation\",\n      to: \"/estimations-concrete\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Masonry Estimation\",\n      to: \"/estimations-masonry\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Steelworks Estimation\",\n      to: \"/estimations-steelworks\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    }\n  ];\n}\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top mr-1\"\n                style={{ maxWidth: \"25px\" }}\n                src={require(\"../../../images/shards-dashboards-logo.svg\")}\n                alt=\"Estimato\"\n              />\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                  Estimato\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\n\nconst SidebarNavItem = ({ item }) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.htmlBefore && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n        />\n      )}\n      {item.title && <span>{item.title}</span>}\n      {item.htmlAfter && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n        />\n      )}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"../../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        <SidebarSearch />\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nMainSidebar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nMainSidebar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default MainSidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import React from \"react\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"../../assets/quill.css\";\r\n\r\nconst AddNewEstimationForm = () => (\r\n  <ListGroup flush>\r\n    <ListGroupItem className=\"p-3\">\r\n      <Row>\r\n        <Col>\r\n          <Form>\r\n            <Row form>\r\n              <Col md=\"12\" className=\"form-group\">\r\n                <label htmlFor=\"es-estimation-label\">Estimation Label</label>\r\n                <FormInput\r\n                  id=\"es-estimation-label\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Estimation Label\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Button type=\"submit\">Create New Estimation</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </ListGroupItem>\r\n  </ListGroup>\r\n);\r\n\r\nexport default AddNewEstimationForm;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AddNewEstimation from \"../components/add-new-estimation/AddNewEstimationForm\";\r\n\r\nfunction Estimations(props) {\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Estimations\" subtitle=\"All Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            <Row>\r\n                <Col>\r\n                    <AddNewEstimation/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Estimations;","import React from \"react\";\r\nimport { Container, Row, Col } from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AddNewEstimationForm from '../components/add-new-estimation/AddNewEstimationForm';\r\n\r\nconst AddNewEstimation = () => (\r\n  <Container fluid className=\"main-content-container px-4 pb-4\">\r\n    {/* Page Header */}\r\n    <Row noGutters className=\"page-header py-4\">\r\n      <PageTitle sm=\"4\" title=\"Add New Estimation\" subtitle=\"Estimations\" className=\"text-sm-left\" />\r\n    </Row>\r\n\r\n    <Row>\r\n      {/* Editor */}\r\n      <Col lg=\"12\" md=\"12\">\r\n        <AddNewEstimationForm />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default AddNewEstimation;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnFootingDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n    const [footingType, setFootingType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: '', y: '', z: ''});\r\n    const [columnCircular, setColumnCircular] = useState({d: '', z: ''});\r\n\r\n    const [footingRectangular, setFootingReactangular] = useState({x: '', y: '', z: ''});\r\n    const [footingCircular, setFootingCircular] = useState({d: '', z: ''});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.columnFootingValues[props.index] = {\r\n                columnType: columnType,\r\n                footingType: footingType,\r\n                columnRectangular: columnRectangular,\r\n                columnCircular: columnCircular,\r\n                footingRectangular: footingRectangular,\r\n                footingCircular: footingCircular,\r\n                columnCount: columnCount\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [columnType, footingType, columnRectangular, columnCircular, footingRectangular, footingCircular, columnCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Column Footing Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"ew-cfd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.x = e.target.value; return object;})} id=\"ew-cfd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.y = e.target.value; return object;})} id=\"ew-cfd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.z = e.target.value; return object;})} id=\"ew-cfd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"ew-cfd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"ew-cfd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-type-of-footing\">Type of Footing</label>\r\n                                        <FormSelect onChange={e => setFootingType(e.target.value)} id=\"ew-cfd-type-of-footing\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { footingType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.x = e.target.value; return object;})} id=\"ew-cfd-footing-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.y = e.target.value; return object;})} id=\"ew-cfd-footing-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.z = e.target.value; return object;})} id=\"ew-cfd-footing-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { footingType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setFootingCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"ew-cfd-footing-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setFootingCircular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"ew-cfd-footing-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Columns</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnFootingDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction WallFootingDetails(props) {\r\n    const [depthCHB, setDepthCHB] = useState('');\r\n    const [depthWallFooting, setDepthWallFooting] = useState('');\r\n    const [widthFooting, setWidthFooting] = useState('');\r\n    const [wallPerimeter, setWallPerimeter] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.wallFootingValues[props.index] = {\r\n                depthCHB: depthCHB,\r\n                depthWallFooting: depthWallFooting,\r\n                widthFooting: widthFooting,\r\n                wallPerimeter: wallPerimeter\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [depthCHB, depthWallFooting, widthFooting, wallPerimeter]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Wall Footing Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementWallFootingFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-depth-chb\">Depth of CHB from NGL (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-depth-chb\" onChange={e => setDepthCHB(e.target.value)} placeholder=\"Enter depth in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-depth-wall-footing\">Depth of Wall Footing (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-depth-wall-footing\" onChange={e => setDepthWallFooting(e.target.value)} placeholder=\"Enter depth in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-width-footing\">Width of Footing (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-width-footing\" onChange={e => setWidthFooting(e.target.value)} placeholder=\"Enter width in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-wall-perimiter\">Wall Perimiter (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-wall-perimiter\" onChange={e => setWallPerimeter(e.target.value)} placeholder=\"Enter perimeter in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WallFootingDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction GravelBedding(props) {\r\n    const [gravelBeddingDepth, setGravelBeddingDepth] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.gravelBeddingValues = {\r\n                gravelBeddingDepth: gravelBeddingDepth\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [gravelBeddingDepth]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Gravel Bedding</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-gravel-bedding-depth\">Gravel Bedding (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-gravel-bedding-depth\" onChange={e => setGravelBeddingDepth(e.target.value)} placeholder=\"Enter gravel bedding in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default GravelBedding;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticTankDetails(props) {\r\n    const [septicTank, setSepticTank] = useState({x: '', y: '', z: ''});\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.septicTankValues[props.index] = {\r\n                septicTank: septicTank\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [septicTank]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Septic Tank Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementSepticTankFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.x = e.target.value; return object;})} id=\"ew-septic-tank-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.y = e.target.value; return object;})} id=\"ew-septic-tank-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.z = e.target.value; return object;})} id=\"ew-septic-tank-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticTankDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticTankDetails(props) {\r\n    const [onFill, setOnFill] = useState({height: '', area: ''});\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.onFillValues[props.index] = {\r\n                onFill: onFill\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [onFill]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">On-Fill</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementOnFillFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-on-fill-height\">On-Fill Height (m)</label>\r\n                                        <FormInput onChange={e => setOnFill(object => {object.height = e.target.value; return object;})} id=\"ew-on-fill-height\" placeholder=\"Enter Height in meters\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-on-fill-area\">Area to be Filled (m²)</label>\r\n                                        <FormInput onChange={e => setOnFill(object => {object.area = e.target.value; return object;})} id=\"ew-on-fill-area\" placeholder=\"Enter area in meter squared\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticTankDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SlabDetail(props) {\r\n    const [slabDetailArea, setSlabDetailArea] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.slabDetailValues= {\r\n                slabDetailArea: slabDetailArea\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [slabDetailArea]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Slab Detail</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-slab-detail-area\">Area Used for Ground Slab (m²)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-slab-detail-area\" onChange={e => setSlabDetailArea(e.target.value)} placeholder=\"Enter gravel bedding in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SlabDetail;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState();\r\n    const [numberForeman, setNumberForeman] = useState();\r\n    const [laborerWage, setLaborerWage] = useState();\r\n    const [foremanWage, setForemanWage] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.manPowerValues= {\r\n                numberLaborer: numberLaborer,\r\n                numberForeman: numberForeman,\r\n                laborerWage: laborerWage,\r\n                foremanWage: foremanWage\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [numberLaborer, numberForeman, laborerWage, foremanWage]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-foreman\" onChange={e => setNumberForeman(e.target.value)} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, { useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Summary(props) {\r\n    useEffect(() => {\r\n        console.log(props.values);\r\n    });\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Summary</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <span>Volume for Excavation: {+props.values.summary.volume_for_excavation.toFixed(3)} m³</span><br/>\r\n                                <span>Volume for Backfill: {+props.values.summary.volume_for_backfill.toFixed(3)} m³</span><br/>\r\n                                <span>Volume for Gravel Bedding: {+props.values.summary.volume_for_gravel_bedding.toFixed(3)} m³</span><br/>\r\n                                <span>Duration of Work: </span><br/>\r\n                                <div className=\"p-2\">\r\n                                    <span>Excavation: {+props.values.manpower.duration.excavation.toFixed(3)} days</span><br/>\r\n                                    <span>Backfill: {+props.values.manpower.duration.backfill.toFixed(3)} days</span><br/>\r\n                                    <span>Gravel Bedding: {+props.values.manpower.duration.gravel_bedding.toFixed(3)} days</span><br/>\r\n                                </div>\r\n                                <span>Labor Costs: </span><br/>\r\n                                <div className=\"p-2\">\r\n                                    <span>Excavation: {+props.values.manpower.labor_cost.excavation.toFixed(3)} PHP</span><br/>\r\n                                    <span>Backfill: {+props.values.manpower.labor_cost.backfill.toFixed(3)} PHP</span><br/>\r\n                                    <span>Gravel Bedding: {+props.values.manpower.labor_cost.gravel_bedding.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col, Button } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport ColumnFootingDetails from \"../../components/earthworks-estimation/ColumnFootingDetails\";\r\nimport WallFootingDetails from \"../../components/earthworks-estimation/WallFootingDetails\";\r\nimport GravelBedding from \"../../components/earthworks-estimation/GravelBedding\";\r\nimport SepticTankDetails from \"../../components/earthworks-estimation/SepticTankDetails\";\r\nimport OnFill from \"../../components/earthworks-estimation/OnFill\";\r\nimport SlabDetail from '../../components/earthworks-estimation/SlabDetail';\r\nimport Manpower from '../../components/earthworks-estimation/Manpower';\r\nimport Summary from '../../components/earthworks-estimation/Summary';\r\n\r\nfunction Earthworks(props) {\r\n    const [summaryView, setSummaryView] = useState(false);\r\n\r\n    const [columnFootingFormCount, setColumnFootingFormCount] = useState(1);\r\n    const [wallFootingFormCount, setWallFootingFormCount] = useState(1);\r\n    const [septicTankFormCount, setSpeticTankFormCount] = useState(1);\r\n    const [onFillFormCount, setOnFillFormCount] = useState(1);\r\n\r\n    const [earthworksValues, setEarthworkValues] = useState({\r\n        columnFootingValues: [],\r\n        wallFootingValues: [],\r\n        gravelBeddingValues: {},\r\n        septicTankValues: [],\r\n        onFillValues: [],\r\n        slabDetailValues: {},\r\n        manPowerValues: {}\r\n    });\r\n\r\n    const [solutionValues, setSolutionValues] = useState({\r\n        column_footing: {\r\n            excavation: {\r\n                rectangular: 0,\r\n                circular: 0\r\n            },\r\n            backfill: {\r\n                rectangular: 0,\r\n                circular: 0\r\n            },\r\n            gravel_bedding: {\r\n                rectangular: 0,\r\n                circular: 0\r\n            }\r\n        },\r\n        wall_footing: {\r\n            excavation: 0,\r\n            gravel_bedding: 0,\r\n            backfill: 0\r\n        },\r\n        plumbing: {\r\n            excavation: 0\r\n        },\r\n        on_fill: {\r\n            total: 0\r\n        },\r\n        slab: {\r\n            gravel_bedding: 0\r\n        },\r\n        manpower: {\r\n            duration: {\r\n                excavation: 0,\r\n                backfill: 0,\r\n                gravel_bedding: 0\r\n            },\r\n            labor_cost: {\r\n                excavation: 0,\r\n                backfill: 0,\r\n                gravel_bedding: 0\r\n            }\r\n        },\r\n        summary: {\r\n            volume_for_excavation: 0,\r\n            volume_for_backfill: 0,\r\n            volume_for_gravel_bedding: 0\r\n        }\r\n    });\r\n\r\n    const incrementColumnFootingFormCount = () => {\r\n        setColumnFootingFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementWallFootingFormCount = () => {\r\n        setWallFootingFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementSepticTankFormCount = () => {\r\n        setSpeticTankFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementOnFillFormCount = () => {\r\n        setOnFillFormCount(count => count + 1);\r\n    }\r\n\r\n    const calculate = () => {\r\n        setSolutionValues(values => {\r\n            // Establish variables\r\n            const column_footing = earthworksValues.columnFootingValues;\r\n            const wall_footing = earthworksValues.wallFootingValues;\r\n            const gravel_bedding = earthworksValues.gravelBeddingValues;\r\n            const septic_tank = earthworksValues.septicTankValues;\r\n            const on_fill = earthworksValues.onFillValues;\r\n            const slab_detail = earthworksValues.slabDetailValues;\r\n            const manpower = earthworksValues.manPowerValues;\r\n\r\n            // Column Footing Excavation Rectangular\r\n            values.column_footing.excavation.rectangular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingRectangular.x * +column_footing[index].footingRectangular.y * (+column_footing[index].columnRectangular.z + +column_footing[index].footingRectangular.z + +gravel_bedding.gravelBeddingDepth) * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.excavation.rectangular += result;\r\n            });\r\n\r\n            // Column Footing Excavation Circular\r\n            values.column_footing.excavation.circular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingCircular.d * (+column_footing[index].columnCircular.z + +column_footing[index].footingCircular.z + +gravel_bedding.gravelBeddingDepth) * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.excavation.circular += result;\r\n            });\r\n\r\n            // Column Footing Backfill Rectangular\r\n            values.column_footing.backfill.rectangular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = ((+column_footing[index].footingRectangular.x * +column_footing[index].footingRectangular.y) - (+column_footing[index].columnRectangular.x * +column_footing[index].columnRectangular.y)) * +column_footing[index].footingRectangular.z * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.backfill.rectangular += result;\r\n            });\r\n\r\n            // Column Footing Backfill Circular\r\n            values.column_footing.backfill.circular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingCircular.z * (+column_footing[index].footingCircular.d - +column_footing[index].columnCircular.d) * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.backfill.circular += result;\r\n            });\r\n\r\n            // Gravel Bedding Rectangular\r\n            values.column_footing.gravel_bedding.rectangular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingRectangular.x * +column_footing[index].footingRectangular.y * +column_footing[index].columnCount * +gravel_bedding.gravelBeddingDepth;\r\n\r\n                values.column_footing.gravel_bedding.rectangular += result;\r\n            });\r\n\r\n            // Gravel Bedding Circular\r\n            values.column_footing.gravel_bedding.circular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingCircular.d * +column_footing[index].columnCount * +gravel_bedding.gravelBeddingDepth;\r\n\r\n                values.column_footing.gravel_bedding.circular += result;\r\n            });\r\n\r\n            // Wall Footing Excavation\r\n            values.wall_footing.excavation = 0;\r\n            wall_footing.forEach((e, index) => {\r\n                let result = +wall_footing[index].widthFooting * (+wall_footing[index].depthCHB + +wall_footing[index].depthWallFooting + +gravel_bedding.gravelBeddingDepth) * +wall_footing[index].wallPerimeter;\r\n\r\n                values.wall_footing.excavation += result;\r\n            });\r\n\r\n            // Wall Footing Gravel Bedding\r\n            values.wall_footing.gravel_bedding = 0;\r\n            wall_footing.forEach((e, index) => {\r\n                let result = +wall_footing[index].widthFooting * +gravel_bedding.gravelBeddingDepth * +wall_footing[index].wallPerimeter;\r\n\r\n                values.wall_footing.gravel_bedding += result;\r\n            });\r\n\r\n            // Wall Footing Backfill\r\n            values.wall_footing.backfill = 0;\r\n            wall_footing.forEach((e, index) => {\r\n                let result = (+wall_footing[index].widthFooting - +wall_footing[index].depthWallFooting) * +wall_footing[index].depthCHB * +wall_footing[index].wallPerimeter;\r\n\r\n                values.wall_footing.backfill += result;\r\n            });\r\n\r\n            // Plumbing\r\n            values.plumbing.excavation = 0;\r\n            septic_tank.forEach((e, index) => {\r\n                let result = +septic_tank[index].septicTank.x * +septic_tank[index].septicTank.y * +septic_tank[index].septicTank.z;\r\n\r\n                values.plumbing.excavation += result;\r\n            });\r\n\r\n            // On Fill\r\n            values.on_fill.total = 0;\r\n            on_fill.forEach((e, index) => {\r\n                let result = +on_fill[index].onFill.height * +on_fill[index].onFill.area;\r\n\r\n                values.on_fill.total += result;\r\n            });\r\n\r\n            // Slab Detail\r\n            values.slab.gravel_bedding = +slab_detail.slabDetailArea * +gravel_bedding.gravelBeddingDepth;\r\n\r\n            // Presummary\r\n            values.summary.volume_for_excavation = values.column_footing.excavation.rectangular + values.wall_footing.excavation + values.plumbing.excavation;\r\n            values.summary.volume_for_backfill = values.column_footing.backfill.rectangular + values.wall_footing.backfill + values.on_fill.total;\r\n            values.summary.volume_for_gravel_bedding = values.column_footing.gravel_bedding.rectangular + values.wall_footing.gravel_bedding + values.slab.gravel_bedding;\r\n\r\n            // Manpower Duration\r\n            values.manpower.duration.excavation = Math.ceil(values.summary.volume_for_excavation * (1/1.35) * (1/(+manpower.numberLaborer + +manpower.numberForeman)));\r\n            values.manpower.duration.backfill = Math.ceil(values.summary.volume_for_backfill * (1/3.87) * (1/(+manpower.numberLaborer + +manpower.numberForeman)));\r\n            values.manpower.duration.gravel_bedding = Math.ceil(values.summary.volume_for_gravel_bedding * (1/3.87) * (1/(+manpower.numberLaborer + +manpower.numberForeman)));\r\n\r\n            // Manpower Labor Costs\r\n            values.manpower.labor_cost.excavation = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.duration.excavation) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.duration.excavation);\r\n            values.manpower.labor_cost.backfill = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.duration.backfill) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.duration.backfill);\r\n            values.manpower.labor_cost.gravel_bedding = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.duration.gravel_bedding) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.duration.gravel_bedding);\r\n\r\n            console.log(earthworksValues, values);\r\n            // Go to Summary View\r\n            setSummaryView(true);\r\n            return values;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Earthworks\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            {\r\n                summaryView ?\r\n                <Row>\r\n                    <Col>\r\n                        <Summary values={solutionValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"close\" onClick={e => {\r\n                            setSummaryView(false);\r\n                        }}>Back</Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Row>\r\n                    <Col>\r\n                        {[...Array(columnFootingFormCount)].map((e, i) => <ColumnFootingDetails key={i} index={i} incrementColumnFootingFormCount={incrementColumnFootingFormCount} setEarthworkValues={setEarthworkValues} />)}\r\n                        {[...Array(wallFootingFormCount)].map((e, i) => <WallFootingDetails key={i} index={i} incrementWallFootingFormCount={incrementWallFootingFormCount} setEarthworkValues={setEarthworkValues} />)}\r\n                        <GravelBedding setEarthworkValues={setEarthworkValues} />\r\n                        {[...Array(septicTankFormCount)].map((e, i) => <SepticTankDetails key={i} index={i} incrementSepticTankFormCount={incrementSepticTankFormCount} setEarthworkValues={setEarthworkValues} />)}\r\n                        {[...Array(onFillFormCount)].map((e, i) => <OnFill key={i} index={i} incrementOnFillFormCount={incrementOnFillFormCount} setEarthworkValues={setEarthworkValues} />)}\r\n                        <SlabDetail setEarthworkValues={setEarthworkValues} />\r\n                        <Manpower setEarthworkValues={setEarthworkValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"check\" onClick={e => {\r\n                            calculate();\r\n                        }}>Summarize</Button>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Earthworks;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: undefined, y: undefined, z: undefined});\r\n    const [columnCircular, setColumnCircular] = useState({d: undefined, z: undefined});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n    const [columnHeight, setColumnHeight] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.columnDetailsValues[props.index] = {\r\n                columnType: columnType,\r\n                columnRectangular: columnRectangular,\r\n                columnCircular: columnCircular,\r\n                columnCount: columnCount,\r\n                columnHeight: columnHeight\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [columnType, columnRectangular, columnCircular, columnCount, columnHeight]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Column Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementColumnFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"fw-cd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.x = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.y = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Columns</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-height\">Column Height (m)</label>\r\n                                        <FormInput onChange={e => setColumnHeight(e.target.value)} type=\"number\" id=\"ew-cfd-column-height\" placeholder=\"Enter height in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction BeamDetails(props) {\r\n    const [beamDimensions, setBeamDimensions] = useState({x: '', y: ''});\r\n    const [beamValues, setBeamValues] = useState([{length: '', amount: ''}]);\r\n    const [beamCount, setBeamCount] = useState(1);\r\n    \r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.beamDetailsValues[props.index] = {\r\n                beamsDimensions: beamDimensions,\r\n                beamValues: beamValues,\r\n                beamCount: beamCount\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [beamDimensions, beamValues, beamCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Beam Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementBeamFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3 pb-0\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-length\">Length (x)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-length\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.x = e.target.value;\r\n                                            return dimensions;\r\n                                        })} placeholder=\"Enter length in meters\" />\r\n                                    </Col>\r\n\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-width\">Width (y)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-width\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.y = e.target.value;\r\n                                            return dimensions;\r\n                                        })} placeholder=\"Enter width in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <h4>Beams</h4>\r\n                            </Col>\r\n                            <Col md=\"12\">\r\n                                {[...Array(beamCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-length\">Beam Length (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-length\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: '', amount: ''};\r\n\r\n                                                    value[i].length = target.value;\r\n\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter length in meters\" />\r\n                                        </Col>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-amount\">Beam Amount</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-amount\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: '', amount: ''};\r\n\r\n                                                    value[i].amount = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter amount\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(beamValues);\r\n                                    \r\n                                    setBeamCount(e => e + 1);\r\n                                }}>Add a Beam</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default BeamDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction SlabDetails(props) {\r\n    const [slabValues, setSlabValues] = useState([{horizontal: '', vertical: ''}]);\r\n    const [slabCount, setSlabCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.slabDetailsValues[props.index] = {\r\n                slabValues: slabValues,\r\n                slabCount: slabCount\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [slabValues, slabCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Slab Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementSlabFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <h4>Slabs</h4>\r\n                            </Col>\r\n                            <Col md=\"12\">\r\n                                {[...Array(slabCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-sd-slab-horizontal\">Slab Horizontal (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-sd-slab-horizontal\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setSlabValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {horizontal: '', vertical: ''};\r\n\r\n                                                    value[i].horizontal = target.value;\r\n\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter horizontal in meters\" />\r\n                                        </Col>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-sd-slab-vertical\">Slab Vertical (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-sd-slab-vertical\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setSlabValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {horizontal: '', vertical: ''};\r\n\r\n                                                    value[i].vertical = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter vertical\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(slabValues);\r\n                                    \r\n                                    setSlabCount(e => e + 1);\r\n                                }}>Add a Slab</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SlabDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState('');\r\n    const [numberForeman, setNumberForeman] = useState('');\r\n    const [numberSkilled, setNumberSkilled] = useState('');\r\n    const [laborerWage, setLaborerWage] = useState('');\r\n    const [foremanWage, setForemanWage] = useState('');\r\n    const [skilledWage, setSkilledWage] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.manpowerValues = {\r\n                numberLaborer: numberLaborer,\r\n                numberForeman: numberForeman,\r\n                numberSkilled: numberSkilled,\r\n                laborerWage: laborerWage,\r\n                foremanWage: foremanWage,\r\n                skilledWage: skilledWage,\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [numberLaborer, numberForeman, numberSkilled, laborerWage, foremanWage, skilledWage]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} value={numberLaborer} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman\" onChange={e => setNumberForeman(e.target.value)} value={numberForeman} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled\">Number of Skilled</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled\" onChange={e => setNumberSkilled(e.target.value)} value={numberSkilled} placeholder=\"Enter number of Skilled\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} value={laborerWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} value={foremanWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled-wage\">Skilled Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled-wage\" onChange={e => setSkilledWage(e.target.value)} value={skilledWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction PlywoodAndLumber(props) {\r\n    const [palValues, setPalValues] = useState(\r\n        {\r\n            size_of_plywood: {\r\n                x: '',\r\n                y: ''\r\n            },\r\n            wood_frame_size: '',\r\n            wood_frame_thickness: '',\r\n            lumber_size: {\r\n                vertical: '',\r\n                horizontal: '',\r\n                diagonal: ''\r\n            },\r\n            metal_sheets: '',\r\n            spacing_for_vertical_ribs: '',\r\n            length_of_steel_bar: ''\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.plywoodAndLumberValues = {\r\n                palValues: palValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [palValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Plywood and Lumber</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-size-of-plywood-x\">Size of Plywood (x)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-pal-size-of-plywood-x\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.size_of_plywood.x = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Size of plywood x\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-size-of-plywood-y\">Slab Vertical (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-pal-size-of-plywood-y\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.size_of_plywood.y = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Size of plywood y\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-wood-frame-size\">Wood Frame Size</label>\r\n                                        <FormSelect id=\"fw-pal-wood-frame-size\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.wood_frame_size = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Wood frame size\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value='2\"x2\"'>2\"x2\"</option>\r\n                                            <option value='2\"x3\"'>2\"x3\"</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-wood-frame-thickness\">Wood Frame Thickness</label>\r\n                                        <FormSelect id=\"fw-pal-wood-frame-thickness\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.wood_frame_thickness = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Wood frame thickness\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value='1/4\" (6mm)'>1/4\" (6mm)</option>\r\n                                            <option value='1/2\" (12mm)'>1/2\" (12mm)</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-lumber-size-vertical\">Lumber Size Vertical</label>\r\n                                        <FormSelect id=\"fw-pal-lumber-size-vertical\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.lumber_size.vertical = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value='2\"x2\"'>2\"x2\"</option>\r\n                                            <option value='2\"x3\"'>2\"x3\"</option>\r\n                                            <option value='2\"x4\"'>2\"x4\"</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-lumber-size-horizontal\">Lumber Size Horizontal</label>\r\n                                        <FormSelect id=\"fw-pal-lumber-size-horizontal\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.lumber_size.horizontal = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value='2\"x2\"'>2\"x2\"</option>\r\n                                            <option value='2\"x3\"'>2\"x3\"</option>\r\n                                            <option value='2\"x4\"'>2\"x4\"</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-lumber-size-diagonal\">Lumber Size Diagonal</label>\r\n                                        <FormSelect id=\"fw-pal-lumber-size-diagonal\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.lumber_size.diagonal = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value='2\"x2\"'>2\"x2\"</option>\r\n                                            <option value='2\"x3\"'>2\"x3\"</option>\r\n                                            <option value='2\"x4\"'>2\"x4\"</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-metal-sheets\">Metal Sheets for Circular Column</label>\r\n                                        <FormSelect id=\"fw-pal-metal-sheets\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.metal_sheets = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value='0.90 x 2.40'>0.90 x 2.40</option>\r\n                                            <option value='0.90 x 2.40'>1.20 x 2.40</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-spacing-vertical-ribs\">Spacing for Vertical Ribs (cm)</label>\r\n                                        <FormSelect id=\"fw-pal-spacing-vertical-ribs\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.spacing_for_vertical_ribs = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value=\"15\">15 cm</option>\r\n                                            <option value=\"20\">20 cm</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-length-steel-bar\">Length of Steel Bar (m)</label>\r\n                                        <FormInput id=\"fw-pal-length-steel-bar\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.length_of_steel_bar = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Length in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PlywoodAndLumber;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction MaterialCosts(props) {\r\n    const [costValues, setCostValues] = useState(\r\n        {\r\n            plywood: '',\r\n            wood_frame: '',\r\n            lumber: ['', '']\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.materialCostsValues = {\r\n                costValues: costValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [costValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Material Costs</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Plywood (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.plywood = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Wood Frame (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.wood_frame = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-lumber-0\">Lumber (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-lumber-0\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.lumber[0] = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-lumber-1\">Lumber (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-lumber-1\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.lumber[1] = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MaterialCosts;","import React, { useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Summary(props) {\r\n    useEffect(() => {\r\n        console.log(props.values);\r\n    });\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Summary</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <h6 className=\"font-weight-bold\">Formworks</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Column</strong></span><br/>\r\n                                    <span>Total Number of Plywood: {+props.values.column.rectangular.total_number_of_plywood.toFixed(3)} pcs</span><br/>\r\n                                    <span>Wood Frames (Board Feet): {+props.values.column.rectangular.wood_frame.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Beam</strong></span><br/>\r\n                                    <span>Total Number of Plywood: {+props.values.beam.total_number_of_plywood.toFixed(3)} pcs</span><br/>\r\n                                    <span>Wood Frames (Board Feet): {+props.values.beam.wood_frame.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Slab</strong></span><br/>\r\n                                    <span>Total Number of Plywood: {+props.values.slab.total_number_of_plywood.toFixed(3)} pcs</span><br/>\r\n                                    <span>Wood Frames (Board Feet): {+props.values.slab.wood_frame.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Scaffolding</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Column</strong></span><br/>\r\n                                    <span>Vertical: {+props.values.column_scaffolding.vertical.toFixed(3)} bd'ft</span><br/>\r\n                                    <span>Horizontal: {+props.values.column_scaffolding.horizontal.toFixed(3)} bd'ft</span><br/>\r\n                                    <span>Diagonal: {+props.values.column_scaffolding.diagonal.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Beam</strong></span><br/>\r\n                                    <span>Vertical: {+props.values.beam_scaffolding.vertical.toFixed(3)} bd'ft</span><br/>\r\n                                    <span>Horizontal: {+props.values.beam_scaffolding.horizontal.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Slab</strong></span><br/>\r\n                                    <span>Vertical: {+props.values.slab_scaffolding.vertical.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Duration of Work</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Formworks: {+props.values.manpower.duration.formworks.toFixed(3)} days</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Labor Costs</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Formworks: {+props.values.manpower.labor_cost.formworks.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Material Costs</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Plywood ({props.values.material_summary.plywood.data[0] + ' ' + props.values.material_summary.plywood.data[1]}): {+props.values.material_summary.plywood.cost.toFixed(3)} PHP</span><br/>\r\n                                    <span>Wood Frame ({props.values.material_summary.wood_frames.data[0] + ' ' + props.values.material_summary.wood_frames.data[1]}): {+props.values.material_summary.wood_frames.cost.toFixed(3)} PHP</span><br/>\r\n                                    <span>Lumber ({props.values.material_summary.lumber.vertical.data[0] + ' ' + props.values.material_summary.lumber.vertical.data[1]}): {+props.values.material_summary.lumber.vertical.cost.toFixed(3)} PHP</span><br/>\r\n                                    <span>Lumber ({props.values.material_summary.lumber.horizontal.data[0] + ' ' + props.values.material_summary.lumber.horizontal.data[1]}): {+props.values.material_summary.lumber.horizontal.cost.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: undefined, y: undefined, z: undefined});\r\n    const [columnCircular, setColumnCircular] = useState({d: undefined, z: undefined});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n    const [columnHeight, setColumnHeight] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.columnDetailsValues[props.index] = {\r\n                columnType: columnType,\r\n                columnRectangular: columnRectangular,\r\n                columnCircular: columnCircular,\r\n                columnCount: columnCount,\r\n                columnHeight: columnHeight\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [columnType, columnRectangular, columnCircular, columnCount, columnHeight]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Column Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"fw-cd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.x = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.y = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Columns</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-height\">Column Height (m)</label>\r\n                                        <FormInput onChange={e => setColumnHeight(e.target.value)} type=\"number\" id=\"ew-cfd-column-height\" placeholder=\"Enter height in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnFootingDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: undefined, y: undefined, z: undefined});\r\n    const [columnCircular, setColumnCircular] = useState({d: undefined, z: undefined});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.columnFootingValues[props.index] = {\r\n                columnType: columnType,\r\n                columnRectangular: columnRectangular,\r\n                columnCircular: columnCircular,\r\n                columnCount: columnCount,\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [columnType, columnRectangular, columnCircular, columnCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Column Footing Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cfd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"fw-cfd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cfd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.x = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cfd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.y = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cfd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cfd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cfd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Column-Footing</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnFootingDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction WallFootingDetails(props) {\r\n    const [wallFootingDepth, setWallFootingDepth] = useState('');\r\n    const [wallFootingWidth, setWallFootingWidth] = useState('');\r\n    const [wallPerimeter, setWallPerimeter] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.wallFootingValues[props.index] = {\r\n                wallFootingDepth: wallFootingDepth,\r\n                wallFootingWidth: wallFootingWidth,\r\n                wallPerimeter: wallPerimeter\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [wallFootingDepth, wallFootingWidth, wallPerimeter]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Wall Footing Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Depth of Wall Footing</label>\r\n                                        <FormInput onChange={e => setWallFootingDepth(e.target.value)} type=\"number\" id=\"ew-wf-depth\" placeholder=\"Enter footing\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Width of Footing (Base)</label>\r\n                                        <FormInput onChange={e => setWallFootingWidth(e.target.value)} type=\"number\" id=\"ew-wf-width\" placeholder=\"Enter width\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Wall Perimeter</label>\r\n                                        <FormInput onChange={e => setWallPerimeter(e.target.value)} type=\"number\" id=\"ew-wf-perimeter\" placeholder=\"Enter perimeter\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WallFootingDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction BeamDetails(props) {\r\n    const [beamDimensions, setBeamDimensions] = useState({x: '', y: ''});\r\n    const [beamValues, setBeamValues] = useState([{length: '', amount: ''}]);\r\n    const [beamCount, setBeamCount] = useState(1);\r\n    \r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.beamDetailsValues[props.index] = {\r\n                beamsDimensions: beamDimensions,\r\n                beamValues: beamValues,\r\n                beamCount: beamCount\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [beamDimensions, beamValues, beamCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Beam Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3 pb-0\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-length\">Length (x)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-length\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.x = e.target.value;\r\n                                            return dimensions;\r\n                                        })} placeholder=\"Enter length in meters\" />\r\n                                    </Col>\r\n\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-width\">Width (y)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-width\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.y = e.target.value;\r\n                                            return dimensions;\r\n                                        })} placeholder=\"Enter width in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <h4>Beams</h4>\r\n                            </Col>\r\n                            <Col md=\"12\">\r\n                                {[...Array(beamCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-length\">Beam Length (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-length\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: '', amount: ''};\r\n\r\n                                                    value[i].length = target.value;\r\n\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter length in meters\" />\r\n                                        </Col>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-amount\">Beam Amount</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-amount\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: '', amount: ''};\r\n\r\n                                                    value[i].amount = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter amount\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(beamValues);\r\n                                    \r\n                                    setBeamCount(e => e + 1);\r\n                                }}>Add a Beam</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default BeamDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction SlabDetails(props) {\r\n    const [slabValues, setSlabValues] = useState([{horizontal: '', vertical: ''}]);\r\n    const [slabThickness, setSlabThickness] = useState('');\r\n    const [slabCount, setSlabCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            \r\n            value.slabDetailsValues[props.index] = {\r\n                slabValues: slabValues,\r\n                slabThickness: slabThickness,\r\n                slabCount: slabCount\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [slabValues, slabThickness, slabCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Slab Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <h4>Slabs</h4>\r\n                            </Col>\r\n                            <Col md=\"12\">\r\n                                {[...Array(slabCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-sd-slab-horizontal\">Slab Horizontal (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-sd-slab-horizontal\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setSlabValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {horizontal: '', vertical: ''};\r\n\r\n                                                    value[i].horizontal = target.value;\r\n\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter horizontal in meters\" />\r\n                                        </Col>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-sd-slab-vertical\">Slab Vertical (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-sd-slab-vertical\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setSlabValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {horizontal: '', vertical: ''};\r\n\r\n                                                    value[i].vertical = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter vertical\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n\r\n                                <Row className=\"pb-3\">\r\n                                    <Col>\r\n                                        <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                            console.log(slabValues);\r\n                                            \r\n                                            setSlabCount(e => e + 1);\r\n                                        }}>Add a Slab</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                                \r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-sd-slab-vertical\">Slab Thickness (cm)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-sd-slab-vertical\" onChange={e => {\r\n                                            var target = e.target;\r\n\r\n                                            setSlabThickness(slabThickness => {\r\n                                                slabThickness = target.value;\r\n\r\n                                                return slabThickness;\r\n                                            });\r\n                                        }} placeholder=\"Enter slab vertical\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SlabDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticTankDetails(props) {\r\n    const [topSlabDetails, setTopSlabDetails] = useState({length: '', width: '', depth: '', thickness: ''});\r\n    const [bottomSlabDetails, setBottomSlabDetails] = useState({length: '', width: '', thickness: ''});\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.septicTankValues = {\r\n                topSlabDetails: topSlabDetails,\r\n                bottomSlabDetails: bottomSlabDetails\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [topSlabDetails, bottomSlabDetails]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Septic Tank Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h4>Top Slab Details</h4>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-x\">Length (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setTopSlabDetails(object => {\r\n                                                object.length = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-x\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-y\">Width (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setTopSlabDetails(object => {\r\n                                                object.width = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-y\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-z\">Depth (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setTopSlabDetails(object => {\r\n                                                object.depth = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-z\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col xxsm=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-z\">Thickness (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setTopSlabDetails(object => {\r\n                                                object.thickness = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-z\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h4>Bottom Slab Details</h4>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-x\">Length (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setBottomSlabDetails(object => {\r\n                                                object.length = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-x\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-y\">Width (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setBottomSlabDetails(object => {\r\n                                                object.width = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-y\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col xxsm=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-z\">Thickness (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setBottomSlabDetails(object => {\r\n                                                object.thickness = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-z\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticTankDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ConcreteStairDetails(props) {\r\n    const [concreteStairValues, setConcreteStairValues] = useState(\r\n        {\r\n            rise_length: '',\r\n            run_length: '',\r\n            height_of_stair: '',\r\n            width_of_stair: '',\r\n            length_of_stair: '',\r\n            waistlength_thickness: '',\r\n            landing: [\r\n                {\r\n                    thickness_of_landing: '',\r\n                    landing_width: '',\r\n                    landing_length: ''\r\n                }\r\n            ]\r\n        }\r\n    );\r\n    const [landingCount, setLandingCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.concreteStairValues[props.index] = {\r\n                concreteStairValues: concreteStairValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [concreteStairValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Concrete Stair Details</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Rise Length (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.rise_length = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Run Length (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.run_length = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Height of Stairs (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.height_of_stair = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Width of Stairs (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.width_of_stair = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Length of Stairs (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.length_of_stair = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Waistlength Thickness (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.waistlength_thickness = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col>\r\n                                        <h4>Landing</h4>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                {[...Array(landingCount)].map((e, i) => \r\n                                    <Row form key={i}>\r\n                                        <Col md=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-mc-lumber-0\">Thickness of Landing (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-mc-lumber-0\" onChange={e => {\r\n                                                const target = e.target;\r\n                                                setConcreteStairValues(values => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!values.landing[i]) values.landing[i] = {thickness_of_landing: '', landing_width: '', landing_length: ''};\r\n\r\n                                                    values.landing[i].thickness_of_landing = target.value;\r\n\r\n                                                    return values;\r\n                                                });\r\n                                            }} placeholder=\"Enter value in meters\" />\r\n                                        </Col>\r\n                                        <Col md=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-mc-lumber-1\">Landing Width (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-mc-lumber-1\" onChange={e => {\r\n                                                const target = e.target;\r\n                                                setConcreteStairValues(values => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!values.landing[i]) values.landing[i] = {thickness_of_landing: '', landing_width: '', landing_length: ''};\r\n                                                    \r\n                                                    values.landing[i].landing_width = target.value;\r\n\r\n                                                    return values;\r\n                                                });\r\n                                            }} placeholder=\"Enter value in meters\" />\r\n                                        </Col>\r\n                                        <Col md=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-mc-lumber-1\">Landing Length (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-mc-lumber-1\" onChange={e => {\r\n                                                const target = e.target;\r\n                                                setConcreteStairValues(values => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!values.landing[i]) values.landing[i] = {thickness_of_landing: '', landing_width: '', landing_length: ''};\r\n                                                    \r\n                                                    values.landing[i].landing_length = target.value;\r\n\r\n                                                    return values;\r\n                                                });\r\n                                            }} placeholder=\"Enter value in meters\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(landingCount);\r\n                                    \r\n                                    setLandingCount(e => e + 1);\r\n                                }}>Add a Slab</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ConcreteStairDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction WallFootingDetails(props) {\r\n    const [cementMixValues, setCementMixValues] = useState({\r\n        classMixture: 'AA',\r\n        cementBag: '40kg',\r\n        proportions: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.cementMixValues = cementMixValues\r\n\r\n            return value;\r\n        });\r\n    }, [cementMixValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Cement Mix</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Class Mixture</label>\r\n                                        <FormSelect onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setCementMixValues(object => {\r\n                                                    object.classMixture = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                        }} type=\"number\" id=\"ew-wf-depth\" >\r\n                                            <option value=\"AA\">AA</option>\r\n                                            <option value=\"A\">A</option>\r\n                                            <option value=\"B\">B</option>\r\n                                            <option value=\"C\">C</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Cement Bag</label>\r\n                                        <FormSelect onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setCementMixValues(object => {\r\n                                                    object.cementBag = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                        }} type=\"number\" id=\"ew-wf-width\">\r\n                                            <option value=\"40kg\">40kg</option>\r\n                                            <option value=\"50kg\">50kg</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Proportions</label>\r\n                                        <p>{cementMixValues.proportions}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WallFootingDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState('');\r\n    const [numberForeman, setNumberForeman] = useState('');\r\n    const [numberSkilled, setNumberSkilled] = useState('');\r\n    const [laborerWage, setLaborerWage] = useState('');\r\n    const [foremanWage, setForemanWage] = useState('');\r\n    const [skilledWage, setSkilledWage] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.manpowerValues = {\r\n                numberLaborer: numberLaborer,\r\n                numberForeman: numberForeman,\r\n                numberSkilled: numberSkilled,\r\n                laborerWage: laborerWage,\r\n                foremanWage: foremanWage,\r\n                skilledWage: skilledWage,\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [numberLaborer, numberForeman, numberSkilled, laborerWage, foremanWage, skilledWage]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} value={numberLaborer} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman\" onChange={e => setNumberForeman(e.target.value)} value={numberForeman} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled\">Number of Skilled</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled\" onChange={e => setNumberSkilled(e.target.value)} value={numberSkilled} placeholder=\"Enter number of Skilled\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} value={laborerWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} value={foremanWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled-wage\">Skilled Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled-wage\" onChange={e => setSkilledWage(e.target.value)} value={skilledWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction MaterialCosts(props) {\r\n    const [costValues, setCostValues] = useState(\r\n        {\r\n            cement_bags: '',\r\n            sand: '',\r\n            gravel: ''\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.materialCostsValues = {\r\n                costValues: costValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [costValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Material Costs</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Cement Bags (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.cement_bags = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Sand (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.sand = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Gravel (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.gravel = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MaterialCosts;","import React, { useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Summary(props) {\r\n    useEffect(() => {\r\n        console.log(props.values);\r\n    });\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Summary</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Columns</strong></span><br/>\r\n                                    <span>Cement: {+props.values.column.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.column.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.column.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Column Footing</strong></span><br/>\r\n                                    <span>Cement: {+props.values.column_footing.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.column_footing.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.column_footing.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Wall Footing</strong></span><br/>\r\n                                    <span>Cement: {+props.values.wall_footing.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.wall_footing.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.wall_footing.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Beams</strong></span><br/>\r\n                                    <span>Cement: {+props.values.beam.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.beam.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.beam.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Slab</strong></span><br/>\r\n                                    <span>Cement: {+props.values.slab.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.slab.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.slab.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Septic Tank</strong></span><br/>\r\n                                    <span>Cement: {+props.values.septic_tank.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.septic_tank.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.septic_tank.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Concrete Stairs</strong></span><br/>\r\n                                    <span>Cement: {+props.values.concrete_stairs.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.concrete_stairs.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.concrete_stairs.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Duration of Work</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Concreting: {+props.values.manpower.concreting.duration.toFixed(3)} days</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Labor Costs</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Concreting: {+props.values.manpower.concreting.labor_cost.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Material Costs</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Cement Bags: {+props.values.material_summary.cement_bags.price.toFixed(3)} PHP</span><br/>\r\n                                    <span>Sand: {+props.values.material_summary.sand.price.toFixed(3)} PHP</span><br/>\r\n                                    <span>Gravel: {+props.values.material_summary.gravel.price.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Walls(props) {\r\n    const [values, setValues] = useState({\r\n        wallHeight: '',\r\n        wallPerimeter: '',\r\n        size_of_CHB: {\r\n            cm: '10 x 20 x 40',\r\n            inches: '4 x 8 x 16'\r\n        },\r\n        classMixture: 'A',\r\n        plasterThickness: '8',\r\n        doubleSided: 'Yes',\r\n        reinforcing_bars: {\r\n            vertical_spacing: '',\r\n            horizontal_spacing: '',\r\n            rebar_length: '',\r\n            tie_wire_length: '',\r\n            rebar_diameter: ''\r\n        },\r\n        door_window_gross_area: {\r\n            doors: [\r\n                {\r\n                    area: '',\r\n                    count: ''\r\n                }\r\n            ],\r\n            windows: [\r\n                {\r\n                    area: '',\r\n                    count: ''\r\n                }\r\n            ]\r\n        }\r\n    });\r\n\r\n    const [doorCount, setDoorCount] = useState(1);\r\n    const [windowCount, setWindowCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.setMasonryValues(value => {\r\n            value.wallsValues[props.index] = values\r\n\r\n            return value;\r\n        });\r\n\r\n        console.log(props.masonryValues.wallsValues);\r\n    }, [values]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Walls</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Specifications</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Wall Height (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.wallHeight = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={values.wallHeight} type=\"number\" id=\"\" placeholder=\"\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Wall Perimeter (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.wallPerimeter = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].wallPerimeter : values.wallPerimeter} type=\"number\" id=\"\" placeholder=\"\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Size of CHB (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.size_of_CHB.cm = target.value;\r\n\r\n                                                if (target.value === '10 x 20 x 40') values.size_of_CHB.inches = '4 x 8 x 16';\r\n                                                else if (target.value === '15 x 20 x 40') values.size_of_CHB.inches = '6 x 8 x 16';\r\n                                                else if (target.value === '20 x 20 x 40') values.size_of_CHB.inches = '8 x 8 x 16';\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].size_of_CHB.cm : values.size_of_CHB.cm} id=\"\">\r\n                                            <option value='10 x 20 x 40'>10 x 20 x 40</option>\r\n                                            <option value='15 x 20 x 40'>15 x 20 x 40</option>\r\n                                            <option value='20 x 20 x 40'>20 x 20 x 40</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Size of CHB (inches)</label>\r\n                                        <p>{props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].size_of_CHB.inches : values.size_of_CHB.inches}</p>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Class Mixture</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.classMixture = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].classMixture : values.classMixture} id=\"\">\r\n                                            <option value='A'>A</option>\r\n                                            <option value='B'>B</option>\r\n                                            <option value='C'>C</option>\r\n                                            <option value='D'>D</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Plaster Thickness (mm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.plasterThickness = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].plasterThickness : values.plasterThickness} id=\"\">\r\n                                            <option value='8'>8</option>\r\n                                            <option value='12'>12</option>\r\n                                            <option value='16'>16</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Double Sided?</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.doubleSided = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].doubleSided : values.doubleSided} id=\"\">\r\n                                            <option value='Yes'>Yes</option>\r\n                                            <option value='No'>No</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Reinforcing Bars</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Vertical Spacing (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.vertical_spacing = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.vertical_spacing : values.reinforcing_bars.vertical_spacing} id=\"\">\r\n                                            <option value='40'>40</option>\r\n                                            <option value='60'>60</option>\r\n                                            <option value='80'>80</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Horizontal Spacing (layer)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.horizontal_spacing = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.horizontal_spacing : values.reinforcing_bars.horizontal_spacing} id=\"\">\r\n                                            <option value='2'>2</option>\r\n                                            <option value='3'>3</option>\r\n                                            <option value='4'>4</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Rebar Length (m)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.rebar_length = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.rebar_length : values.reinforcing_bars.rebar_length} id=\"\">\r\n                                            <option value='5'>5</option>\r\n                                            <option value='6'>6</option>\r\n                                            <option value='7.5'>7.5</option>\r\n                                            <option value='9'>9</option>\r\n                                            <option value='12'>12</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Tie Wire Length (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.tie_wire_length = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.tie_wire_length : values.reinforcing_bars.tie_wire_length} id=\"\">\r\n                                            <option value='25'>25</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='40'>40</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Rebar Diameter (mm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.rebar_diameter = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.rebar_diameter : values.reinforcing_bars.rebar_diameter} id=\"\">\r\n                                            <option value='8'>8</option>\r\n                                            <option value='10'>10</option>\r\n                                            <option value='12'>12</option>\r\n                                            <option value='13'>13</option>\r\n                                            <option value='15'>15</option>\r\n                                            <option value='16'>16</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                            <option value='28'>28</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='32'>32</option>\r\n                                            <option value='36'>36</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Door/Window Gross Area</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Vertical Spacing (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.vertical_spacing = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.vertical_spacing : values.reinforcing_bars.vertical_spacing} id=\"\">\r\n                                            <option value='40'>40</option>\r\n                                            <option value='60'>60</option>\r\n                                            <option value='80'>80</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Horizontal Spacing (layer)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.horizontal_spacing = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.horizontal_spacing : values.reinforcing_bars.horizontal_spacing} id=\"\">\r\n                                            <option value='2'>2</option>\r\n                                            <option value='3'>3</option>\r\n                                            <option value='4'>4</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Walls;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState('');\r\n    const [numberForeman, setNumberForeman] = useState('');\r\n    const [numberSkilled, setNumberSkilled] = useState('');\r\n    const [laborerWage, setLaborerWage] = useState('');\r\n    const [foremanWage, setForemanWage] = useState('');\r\n    const [skilledWage, setSkilledWage] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setMasonryValues(value => {\r\n            value.manpowerValues = {\r\n                numberLaborer: numberLaborer,\r\n                numberForeman: numberForeman,\r\n                numberSkilled: numberSkilled,\r\n                laborerWage: laborerWage,\r\n                foremanWage: foremanWage,\r\n                skilledWage: skilledWage,\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [numberLaborer, numberForeman, numberSkilled, laborerWage, foremanWage, skilledWage]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} value={numberLaborer} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman\" onChange={e => setNumberForeman(e.target.value)} value={numberForeman} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled\">Number of Skilled</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled\" onChange={e => setNumberSkilled(e.target.value)} value={numberSkilled} placeholder=\"Enter number of Skilled\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} value={laborerWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} value={foremanWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled-wage\">Skilled Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled-wage\" onChange={e => setSkilledWage(e.target.value)} value={skilledWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction MaterialCosts(props) {\r\n    const [costValues, setCostValues] = useState(\r\n        {\r\n            cement_bags: '',\r\n            sand: '',\r\n            gravel: ''\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.setMasonryValues(value => {\r\n            value.materialCostsValues = {\r\n                costValues: costValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [costValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Material Costs</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Cement Bags (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.cement_bags = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Sand (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.sand = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Gravel (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.gravel = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MaterialCosts;","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col, Button } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport Walls from '../../components/masonry-estimation/Walls';\r\nimport Manpower from '../../components/masonry-estimation/Manpower';\r\nimport MaterialCosts from '../../components/masonry-estimation/MaterialCosts';\r\n\r\nfunction Masonry(props) {\r\n    const [wallFormCount, setWallFormCount] = useState(1);\r\n\r\n    const [masonryValues, setMasonryValues] = useState({\r\n        wallsValues: [],\r\n        manpowerValues: {},\r\n        materialCostsValues: {}\r\n    });\r\n\r\n    const incrementWallFormCount = () => {\r\n        setWallFormCount(count => count + 1);\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Masonry\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            <Row>\r\n                <Col>\r\n                    {[...Array(wallFormCount)].map((e, i) => <Walls key={i} index={i} masonryValues={masonryValues} setMasonryValues={setMasonryValues} incrementWallFormCount={incrementWallFormCount} />)}\r\n                    <Manpower masonryValues={masonryValues} setMasonryValues={setMasonryValues} />\r\n                    <MaterialCosts masonryValues={masonryValues} setMasonryValues={setMasonryValues} />\r\n                </Col>\r\n                <Col md=\"12\">\r\n                    <Button type=\"submit\" icon=\"check\" onClick={e => {\r\n                        console.log(masonryValues);\r\n                    }}>Summarize</Button>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Masonry;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout } from \"./layouts\";\n\n// Route Views\nimport Estimations from \"./views/Estimations\";\nimport AddNewEstimation from \"./views/AddNewEstimation\";\nimport Earthworks from \"./views/Estimations/Earthworks\";\nimport Formworks from \"./views/Estimations/Formworks\";\nimport Concrete from \"./views/Estimations/Concrete\";\nimport Masonry from \"./views/Estimations/Masonry\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/estimations\" />\n  },\n  {\n    path: \"/estimations\",\n    layout: DefaultLayout,\n    component: Estimations\n  },\n  {\n    path: \"/estimations-add\",\n    layout: DefaultLayout,\n    component: AddNewEstimation\n  },\n  {\n    path: \"/estimations-earthworks\",\n    layout: DefaultLayout,\n    component: Earthworks\n  },\n  {\n    path: \"/estimations-formworks\",\n    layout: DefaultLayout,\n    component: Formworks\n  },\n  {\n    path: \"/estimations-concrete\",\n    layout: DefaultLayout,\n    component: Concrete\n  },\n  {\n    path: \"/estimations-masonry\",\n    layout: DefaultLayout,\n    component: Masonry\n  },\n  {\n    path: \"/estimations-steelworks\",\n    layout: DefaultLayout,\n    component: Earthworks\n  }\n];","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col, Button } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport ColumnDetails from '../../components/formworks-estimation/ColumnDetails';\r\nimport BeamDetails from '../../components/formworks-estimation/BeamDetails';\r\nimport SlabDetails from '../../components/formworks-estimation/SlabDetails';\r\nimport Manpower from '../../components/formworks-estimation/Manpower';\r\nimport PlywoodAndLumber from '../../components/formworks-estimation/PlywoodAndLumber';\r\nimport MaterialCosts from '../../components/formworks-estimation/MaterialCosts';\r\nimport Summary from '../../components/formworks-estimation/Summary';\r\n\r\nfunction Formworks(props) {\r\n    const [summaryView, setSummaryView] = useState(false);\r\n\r\n    const [columnFormCount, setColumnFormCount] = useState(1);\r\n    const [beamFormCount, setBeamFormCount] = useState(1);\r\n    const [slabFormCount, setSlabFormCount] = useState(1);\r\n\r\n    const [solutionValues, setSolutionValues] = useState({\r\n        frame_size: 0.05,\r\n        column: {\r\n            rectangular: {\r\n                formworksArea: '',\r\n                total_number_of_plywood: '',\r\n                wood_frame: ''\r\n            },\r\n            circular: {\r\n                formworksArea: '',\r\n                total_number_of_sheet: '',\r\n                vertical_support: '',\r\n                circumferential_ties: ''\r\n            }\r\n        },\r\n        wood_frame_multiplier: {\r\n            column: {\r\n                size: '',\r\n                thickness: '',\r\n                multiplier: ''\r\n            },\r\n            beam: {\r\n                size: '',\r\n                thickness: '',\r\n                multiplier: ''\r\n            }\r\n        },\r\n        column_scaffolding: {\r\n            length: 0,\r\n            vertical: 0,\r\n            horizontal: 0,\r\n            diagonal: 0\r\n        },\r\n        column_scaffolding_multipliers: {\r\n            '2\"x2\"': {\r\n                vertical: 4.7,\r\n                horizontal: 21.0,\r\n                diagonal: 11.7\r\n            },\r\n            '2\"x3\"': {\r\n                vertical: 7.0,\r\n                horizontal: 31.67,\r\n                diagonal: 17.5\r\n            },\r\n            '2\"x4\"': {\r\n                vertical: 9.35,\r\n                horizontal: 42.25,\r\n                diagonal: 23.35\r\n            }\r\n        },\r\n        beam: {\r\n            total_length: 0,\r\n            area_needed: 0,\r\n            total_number_of_plywood: 0,\r\n            wood_frame: 0\r\n        },\r\n        beam_scaffolding: {\r\n            length: 0,\r\n            vertical: 0,\r\n            horizontal: 0\r\n        },\r\n        beam_scaffolding_multipliers: {\r\n            '2\"x2\"': {\r\n                vertical: 4.0,\r\n                horizontal: 4.7\r\n            },\r\n            '2\"x3\"': {\r\n                vertical: 6.0,\r\n                horizontal: 7.0\r\n            },\r\n            '2\"x4\"': {\r\n                vertical: 8.0,\r\n                horizontal: 9.35\r\n            }\r\n        },\r\n        slab: {\r\n            formworksArea: 0,\r\n            total_number_of_plywood: 0,\r\n            wood_frame: 0\r\n        },\r\n        slab_scaffolding: {\r\n            area: 0,\r\n            vertical: 0\r\n        },\r\n        slab_scaffolding_multipliers: {\r\n            '2\"x2\"': {\r\n                vertical: 6.1\r\n            },\r\n            '2\"x3\"': {\r\n                vertical: 9.1\r\n            },\r\n            '2\"x4\"': {\r\n                vertical: 12.1\r\n            }\r\n        },\r\n        manpower: {\r\n            duration: {\r\n                formworks: 0\r\n            },\r\n            labor_cost: {\r\n                formworks: 0\r\n            }\r\n        },\r\n        material_summary: {\r\n            plywood: {\r\n                data: [0, '12\"'],\r\n                pieces: 0,\r\n                cost: 0\r\n            },\r\n            wood_frames: {\r\n                data: [0, 0],\r\n                boardfoot: 0,\r\n                cost: 0\r\n            },\r\n            lumber: {\r\n                vertical: {\r\n                    data: [0, '12\"'],\r\n                    boardfoot: 0,\r\n                    cost: 0\r\n                },\r\n                horizontal: {\r\n                    data: [0, '12\"'],\r\n                    boardfoot: 0,\r\n                    cost: 0\r\n                }\r\n            }\r\n        },\r\n        quantity_of_lumber_scaffolding: {\r\n            '2\"x2\"': {\r\n                column: {\r\n                    vertical: 4.7,\r\n                    horizontal: 21.0,\r\n                    diagonal: 11.7\r\n                },\r\n                beam: {\r\n                    vertical: 4.0,\r\n                    horizontal: 4.7\r\n                },\r\n                flooring_slab: {\r\n                    vertical: 6.1\r\n                }\r\n            },\r\n            '2\"x3\"': {\r\n                column: {\r\n                    vertical: 7.0,\r\n                    horizontal: 31.67,\r\n                    diagonal: 17.5\r\n                },\r\n                beam: {\r\n                    vertical: 6.0,\r\n                    horizontal: 7.0\r\n                },\r\n                flooring_slab: {\r\n                    vertical: 9.1\r\n                }\r\n            },\r\n            '2\"x4\"': {\r\n                column: {\r\n                    vertical: 9.35,\r\n                    horizontal: 42.25,\r\n                    diagonal: 23.35\r\n                },\r\n                beam: {\r\n                    vertical: 8.0,\r\n                    horizontal: 9.35\r\n                },\r\n                flooring_slab: {\r\n                    vertical: 12.1\r\n                }\r\n            }\r\n        },\r\n        boardfoot_of_wood_for_column :{\r\n            '2\"x2\"': {\r\n                column: {\r\n                    '1/4\" (6mm)': 29.67,\r\n                    '1/2\" (12mm)': 20.33\r\n                },\r\n                beam: {\r\n                    '1/4\" (6mm)': 25.06,\r\n                    '1/2\" (12mm)': 18.66\r\n                }\r\n            },\r\n            '2\"x3\"': {\r\n                column: {\r\n                    '1/4\" (6mm)': 44.5,\r\n                    '1/2\" (12mm)': 30.55\r\n                },\r\n                beam: {\r\n                    '1/4\" (6mm)': 37.6,\r\n                    '1/2\" (12mm)': 28.0\r\n                }\r\n            },\r\n        },\r\n        quantity_of_metal_form_for_circular_column: {\r\n            \"0.90 x 2.40\": {\r\n                number_of_sheets: 0.462,\r\n                length_of_vertical_ribs: {\r\n                    '15 cm': 25,\r\n                    '20 cm': 18\r\n                },\r\n                length_of_circumferential_ties: 9.52\r\n            },\r\n            \"1.20 x 2.40\": {\r\n                number_of_sheets: 0.347,\r\n                length_of_vertical_ribs: {\r\n                    '15 cm': 25,\r\n                    '20 cm': 18\r\n                },\r\n                length_of_circumferential_ties: 9.52\r\n            }\r\n        }\r\n    });\r\n\r\n    const [formworkValues, setFormWorkValues] = useState({\r\n        columnDetailsValues: [],\r\n        beamDetailsValues: [],\r\n        slabDetailsValues: [],\r\n        plywoodAndLumberValues: {},\r\n        manpowerValues: {},\r\n        materialCostsValues: {}\r\n    });\r\n\r\n    const incrementColumnFormCount = () => {\r\n        setColumnFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementBeamFormCount = () => {\r\n        setBeamFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementSlabFormCount = () => {\r\n        setSlabFormCount(count => count + 1);\r\n    }\r\n\r\n    const calculate = () => {\r\n        setSolutionValues(values => {\r\n            // Establish variables\r\n            const column = formworkValues.columnDetailsValues;\r\n            const beam = formworkValues.beamDetailsValues;\r\n            const slab = formworkValues.slabDetailsValues;\r\n            const plywoodAndLumber = formworkValues.plywoodAndLumberValues;\r\n            const manpower = formworkValues.manpowerValues;\r\n            const materialCosts = formworkValues.materialCostsValues;\r\n\r\n            // Woodframe Multiplier\r\n            values.wood_frame_multiplier.column.size = values.wood_frame_multiplier.beam.size = plywoodAndLumber.palValues.wood_frame_size;\r\n            values.wood_frame_multiplier.column.thickness = values.wood_frame_multiplier.beam.thickness = plywoodAndLumber.palValues.wood_frame_thickness;\r\n            values.wood_frame_multiplier.column.multiplier = values.boardfoot_of_wood_for_column[plywoodAndLumber.palValues.wood_frame_size].column[plywoodAndLumber.palValues.wood_frame_thickness];\r\n            values.wood_frame_multiplier.beam.multiplier = values.boardfoot_of_wood_for_column[plywoodAndLumber.palValues.wood_frame_size].beam[plywoodAndLumber.palValues.wood_frame_thickness];\r\n\r\n            // Column Rectangular Form Works Area\r\n            values.column.rectangular.formworksArea = 0;\r\n            column.forEach((e, index) => {\r\n                let result = (((2 * +column[index].columnRectangular.x) + (2 * +column[index].columnRectangular.y) + (4 * +values.frame_size)) * +column[index].columnCount * (+column[index].columnRectangular.z + +column[index].columnHeight));\r\n\r\n                values.column.rectangular.formworksArea += +result.toFixed(2);\r\n            });\r\n\r\n            // Column Rectangular Total Number of Plywood\r\n            values.column.rectangular.total_number_of_plywood = Math.ceil(values.column.rectangular.formworksArea / (plywoodAndLumber.palValues.size_of_plywood.x * plywoodAndLumber.palValues.size_of_plywood.y));\r\n            values.column.rectangular.wood_frame = Math.ceil(values.column.rectangular.total_number_of_plywood * values.wood_frame_multiplier.column.multiplier);\r\n\r\n            // Column Circular Form Works Area\r\n            values.column.circular.formworksArea = 0;\r\n            column.forEach((e, index) => {\r\n                let result = +column[index].columnCircular.d * 3.1416 * +column[index].columnCount * +column[index].columnHeight;\r\n\r\n                values.column.circular.formworksArea += +result.toFixed(2);\r\n            });\r\n\r\n            // Column Circular Total Number of Sheet\r\n            values.column.circular.total_number_of_sheet = Math.ceil(values.column.circular.formworksArea * values.quantity_of_metal_form_for_circular_column[plywoodAndLumber.palValues.metal_sheets].number_of_sheets);\r\n            // Column Circular Vertical Support\r\n            values.column.circular.vertical_support = Math.ceil((values.column.circular.formworksArea * values.quantity_of_metal_form_for_circular_column[plywoodAndLumber.palValues.metal_sheets].length_of_vertical_ribs[plywoodAndLumber.palValues.spacing_for_vertical_ribs])/plywoodAndLumber.palValues.length_of_steel_bar);\r\n            // Column Circular Circumferential Ties\r\n            values.column.circular.circumferential_ties = Math.ceil((values.column.circular.formworksArea * values.quantity_of_metal_form_for_circular_column.length_of_circumferential_ties)/plywoodAndLumber.palValues.length_of_steel_bar);\r\n\r\n            // Column Scaffolding Length\r\n            values.column_scaffolding.length = 0;\r\n            column.forEach((e, index) => {\r\n                let result = +column[index].columnCount * +column[index].columnHeight;\r\n\r\n                values.column_scaffolding.length += result;\r\n            });\r\n\r\n            // Column Scaffolding Vertical\r\n            values.column_scaffolding.vertical = Math.ceil(values.column_scaffolding.length * values.column_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.vertical].vertical);\r\n            // Column Scaffolding Horizontal\r\n            values.column_scaffolding.horizontal = Math.ceil(values.column_scaffolding.length * values.column_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.horizontal].horizontal);\r\n            // Column Scaffolding Diagonal\r\n            values.column_scaffolding.diagonal = Math.ceil(values.column_scaffolding.length * values.column_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.diagonal].diagonal);\r\n\r\n            // Beam Total Length\r\n            values.beam.total_length = 0;\r\n            values.beam_scaffolding.length = 0;\r\n            beam.forEach((e, index) => {\r\n                beam[index].beamValues.forEach((ee, ii) => {\r\n                    let result = +beam[index].beamValues[ii].length * +beam[index].beamValues[ii].amount;\r\n\r\n                    values.beam.total_length += result;\r\n                    values.beam_scaffolding.length += result;\r\n                })\r\n            });\r\n\r\n            // Beam Area Needed\r\n            values.beam.area_needed = 0;\r\n            beam.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                beam[index].beamValues.forEach((ee, ii) => {\r\n                    let result = +beam[index].beamValues[ii].length * +beam[index].beamValues[ii].amount;\r\n                    total += result;\r\n                });\r\n\r\n                console.log(beam[index]);\r\n\r\n                let res = total * ((2 * +beam[index].beamsDimensions.y) + (+beam[index].beamsDimensions.x) + (2 * values.frame_size));\r\n                values.beam.area_needed += res;\r\n            });\r\n\r\n            values.beam.total_number_of_plywood = Math.ceil(values.beam.area_needed / (plywoodAndLumber.palValues.size_of_plywood.x * plywoodAndLumber.palValues.size_of_plywood.y));\r\n            values.beam.wood_frame = Math.ceil(values.beam.total_number_of_plywood * values.wood_frame_multiplier.beam.multiplier);\r\n\r\n            // Beam Scaffolding Vertical\r\n            values.beam_scaffolding.vertical = Math.ceil(values.beam_scaffolding.length * values.beam_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.vertical].vertical);\r\n            values.beam_scaffolding.horizontal = Math.ceil(values.beam_scaffolding.length * values.beam_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.horizontal].horizontal);\r\n\r\n            // Slab Area for Formworks\r\n            values.slab.formworksArea = 0;\r\n            values.slab_scaffolding.area = 0;\r\n            slab.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                console.log('slab values', slab[index].slabValues);\r\n\r\n                slab[index].slabValues.forEach((ee, ii) => {\r\n                    let result = +slab[index].slabValues[ii].horizontal * +slab[index].slabValues[ii].vertical;\r\n                    total += result;\r\n                });\r\n\r\n                console.log(beam[index]);\r\n\r\n                let res = total;\r\n                values.slab.formworksArea += res;\r\n                values.slab_scaffolding.area += res;\r\n            });\r\n\r\n            // Slab Total Number of Plywood\r\n            values.slab.total_number_of_plywood = Math.ceil(values.slab.formworksArea / (plywoodAndLumber.palValues.size_of_plywood.x * plywoodAndLumber.palValues.size_of_plywood.y));\r\n            values.slab.wood_frame = Math.ceil(values.slab.total_number_of_plywood * 39.77);\r\n\r\n            // Slab Scaffolding Vertical\r\n            values.slab_scaffolding.vertical = Math.ceil(values.slab_scaffolding.area * values.slab_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.vertical].vertical);\r\n\r\n            // Manpower Formworks Duration and Labor Cost\r\n            values.manpower.duration.formworks = Math.ceil((values.column.rectangular.formworksArea + values.beam.area_needed + values.slab.formworksArea) * (1/2.5) * (1/(+manpower.numberLaborer + +manpower.numberSkilled)));\r\n            values.manpower.labor_cost.formworks = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.duration.formworks) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.duration.formworks) + (+manpower.numberSkilled * +manpower.skilledWage * values.manpower.duration.formworks);\r\n\r\n            // Material Costs\r\n            if (plywoodAndLumber.palValues.size_of_plywood.x === \"0.9\") values.material_summary.plywood.data[0] = \"0.9 x 2.40\";\r\n            else values.material_summary.plywood.data[0] = \"1.2 x 2.40\";\r\n\r\n            values.material_summary.plywood.pieces = values.column.rectangular.total_number_of_plywood + values.beam.total_number_of_plywood + values.slab.total_number_of_plywood;\r\n\r\n            if (plywoodAndLumber.palValues.wood_frame_size === '2\"x2\"') values.material_summary.wood_frames.data[0] = '2\" x 2\" x';\r\n            else if (plywoodAndLumber.palValues.wood_frame_size === '2\"x3\"') values.material_summary.wood_frames.data[0] = '2\" x 3\" x';\r\n            else values.material_summary.wood_frames.data[0] = '0';\r\n\r\n            values.material_summary.wood_frames.boardfoot = values.column.rectangular.wood_frame + values.beam.wood_frame + values.slab.wood_frame;\r\n\r\n            if (plywoodAndLumber.palValues.wood_frame_thickness === '1/4\" (6mm)') values.material_summary.wood_frames.data[1] = '1/4\"';\r\n            else if (plywoodAndLumber.palValues.wood_frame_thickness === '1/2\" (12mm)') values.material_summary.wood_frames.data[1] = '1/2\"';\r\n            else values.material_summary.wood_frames.data[1] = '0';\r\n            \r\n            // Cost of Plywood and Woodframes\r\n            values.material_summary.plywood.cost = +materialCosts.costValues.plywood * values.material_summary.plywood.pieces;\r\n            values.material_summary.wood_frames.cost = +materialCosts.costValues.wood_frame * values.material_summary.wood_frames.boardfoot;\r\n\r\n            // Lumber\r\n            if (plywoodAndLumber.palValues.lumber_size.vertical === '2\"x2\"') values.material_summary.lumber.vertical.data[0] = '2\" x 2\" x\"';\r\n            else if (plywoodAndLumber.palValues.lumber_size.vertical === '2\"x3\"') values.material_summary.lumber.vertical.data[0] = '2\" x 3\" x';\r\n            else if (plywoodAndLumber.palValues.lumber_size.vertical === '2\"x3\"') values.material_summary.lumber.vertical.data[0] = '2\" x 4\" x';\r\n            else values.material_summary.lumber.vertical.data[0] = '0';\r\n\r\n            values.material_summary.lumber.vertical.boardfoot = values.column_scaffolding.vertical + values.column_scaffolding.diagonal + values.beam_scaffolding.vertical + values.slab_scaffolding.vertical;\r\n\r\n            if (plywoodAndLumber.palValues.lumber_size.horizontal === '2\"x2\"') values.material_summary.lumber.horizontal.data[0] = '2\" x 2\" x\"';\r\n            else if (plywoodAndLumber.palValues.lumber_size.horizontal === '2\"x3\"') values.material_summary.lumber.horizontal.data[0] = '2\" x 3\" x';\r\n            else if (plywoodAndLumber.palValues.lumber_size.horizontal === '2\"x4\"') values.material_summary.lumber.horizontal.data[0] = '2\" x 4\" x';\r\n            else values.material_summary.lumber.horizontal.data[0] = '0';\r\n\r\n            values.material_summary.lumber.horizontal.boardfoot = values.column_scaffolding.horizontal + values.beam_scaffolding.horizontal;\r\n\r\n            // Cost of Lumber Horizontal and Vertical\r\n            values.material_summary.lumber.vertical.cost = values.material_summary.lumber.vertical.boardfoot * +materialCosts.costValues.lumber[0];\r\n            values.material_summary.lumber.horizontal.cost = values.material_summary.lumber.horizontal.boardfoot * +materialCosts.costValues.lumber[1];\r\n\r\n            console.log(formworkValues, values);\r\n            // Go to Summary View\r\n            setSummaryView(true);\r\n            return values;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Formworks\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            {\r\n                summaryView ?\r\n                <Row>\r\n                    <Col>\r\n                        <Summary values={solutionValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"close\" onClick={e => {\r\n                            setSummaryView(false);\r\n                        }}>Back</Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Row>\r\n                    <Col>\r\n                        {[...Array(columnFormCount)].map((e, i) => <ColumnDetails key={i} index={i} formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} incrementColumnFormCount={incrementColumnFormCount} />)}\r\n                        {[...Array(beamFormCount)].map((e, i) => <BeamDetails key={i} index={i} formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} incrementBeamFormCount={incrementBeamFormCount} />)}\r\n                        {[...Array(slabFormCount)].map((e, i) => <SlabDetails key={i} index={i} formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} incrementSlabFormCount={incrementSlabFormCount} />)}\r\n                        <PlywoodAndLumber formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} />\r\n                        <Manpower formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} />\r\n                        <MaterialCosts formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"check\" onClick={e => {\r\n                            calculate();\r\n                        }}>Summarize</Button>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Formworks;","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col, Button } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport ColumnDetails from '../../components/concrete-estimation/ColumnDetails';\r\nimport ColumnFootingDetails from '../../components/concrete-estimation/ColumnFootingDetails';\r\nimport WallFootingDetails from '../../components/concrete-estimation/WallFootingDetails';\r\nimport BeamDetails from '../../components/concrete-estimation/BeamDetails';\r\nimport SlabDetails from '../../components/concrete-estimation/SlabDetails';\r\nimport SepticTankDetails from '../../components/concrete-estimation/SepticTankDetails';\r\nimport ConcreteStairDetails from '../../components/concrete-estimation/ConcreteStairDetails';\r\nimport CementMix from '../../components/concrete-estimation/CementMix';\r\nimport Manpower from '../../components/concrete-estimation/Manpower';\r\nimport MaterialCosts from '../../components/concrete-estimation/MaterialCosts';\r\nimport Summary from '../../components/concrete-estimation/Summary';\r\n\r\nfunction Concrete(props) {\r\n    const [summaryView, setSummaryView] = useState(false);\r\n\r\n    const [columnFormCount, setColumnFormCount] = useState(1);\r\n    const [columnFootingCount, setColumnFootingCount] = useState(1);\r\n    const [wallFootingCount, setWallFootingCount] = useState(1);\r\n    const [beamFormCount, setBeamFormCount] = useState(1);\r\n    const [slabFormCount, setSlabFormCount] = useState(1);\r\n    const [concreteStairFormCount, setConcreteStairFormCount] = useState(1);\r\n\r\n    const [concreteValues, setConcreteValues] = useState({\r\n        columnDetailsValues: [],\r\n        columnFootingValues: [],\r\n        wallFootingValues: [],\r\n        beamDetailsValues: [],\r\n        slabDetailsValues: [],\r\n        septicTankValues: {},\r\n        concreteStairValues: [],\r\n        cementMixValues: {},\r\n        manpowerValues: {},\r\n        materialCostsValues: {}\r\n    });\r\n\r\n    const [solutionValues, setSolutionValues] = useState({\r\n        multipliers: {\r\n            cement: 0,\r\n            sand: 0.5,\r\n            gravel: 1\r\n        },\r\n        column: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        column_footing: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        wall_footing: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        beam: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        slab: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        septic_tank: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        concrete_stairs: {\r\n            volume_of_landing: 0,\r\n            volume_of_first_block: 0,\r\n            volume_of_second_block: 0,\r\n            length_of_waist: 0,\r\n            volume_of_waist: 0,\r\n            number_of_steps: 0,\r\n            volume_of_1_step: 0,\r\n            volume_of_n_steps: 0,\r\n            total_pcc_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        volumetric_method: {\r\n            class_mixture: {\r\n                \"AA\": {\r\n                    proportions: \"1 :1.5 : 3\",\r\n                    cement_bag: {\r\n                        \"40kg\": 12.0,\r\n                        \"50kg\": 9.5\r\n                    },\r\n                    sand: 0.5,\r\n                    gravel: 1.0\r\n                },\r\n                \"A\": {\r\n                    proportions: \"1 :2 : 4\",\r\n                    cement_bag: {\r\n                        \"40kg\": 9.0,\r\n                        \"50kg\": 7.0\r\n                    },\r\n                    sand: 0.5,\r\n                    gravel: 1.0\r\n                },\r\n                \"B\": {\r\n                    proportions: \"1 :2.5 : 5\",\r\n                    cement_bag: {\r\n                        \"40kg\": 7.5,\r\n                        \"50kg\": 6.0\r\n                    },\r\n                    sand: 0.5,\r\n                    gravel: 1.0\r\n                },\r\n                \"C\": {\r\n                    proportions: \"1 :3 : 6\",\r\n                    cement_bag: {\r\n                        \"40kg\": 6.0,\r\n                        \"50kg\": 5.0\r\n                    },\r\n                    sand: 0.5,\r\n                    gravel: 1.0\r\n                }\r\n            }\r\n        },\r\n        manpower: {\r\n            concreting: {\r\n                duration: 0,\r\n                labor_cost: 0\r\n            }\r\n        },\r\n        material_summary: {\r\n            cement_bags: {\r\n                amount: 0,\r\n                price: 0\r\n            },\r\n            sand: {\r\n                amount: 0,\r\n                price: 0\r\n            },\r\n            gravel: {\r\n                amount: 0,\r\n                price: 0\r\n            }\r\n        }\r\n    });\r\n\r\n    const incrementColumnFormCount = () => {\r\n        setColumnFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementColumnFootingCount = () => {\r\n        setColumnFootingCount(count => count + 1);\r\n    }\r\n\r\n    const incrementWallFootingCount = () => {\r\n        setWallFootingCount(count => count + 1);\r\n    }\r\n\r\n    const incrementBeamFormCount = () => {\r\n        setBeamFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementSlabFormCount = () => {\r\n        setSlabFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementConcreteStairFormCount = () => {\r\n        setConcreteStairFormCount(count => count + 1);\r\n    }\r\n\r\n    const calculate = () => {\r\n        setSolutionValues(values => {\r\n            // Establish variables\r\n            const column = concreteValues.columnDetailsValues;\r\n            const column_footing = concreteValues.columnFootingValues;\r\n            const wall_footing = concreteValues.wallFootingValues;\r\n            const beam = concreteValues.beamDetailsValues;\r\n            const slab = concreteValues.slabDetailsValues;\r\n            const septic_tank = concreteValues.septicTankValues;\r\n            const concrete_stair = concreteValues.concreteStairValues;\r\n            const cement_mix = concreteValues.cementMixValues;\r\n            const manpower = concreteValues.manpowerValues;\r\n            const material = concreteValues.materialCostsValues;\r\n\r\n            // Set Multipliers\r\n            values.multipliers.cement = values.volumetric_method.class_mixture[cement_mix.classMixture].cement_bag[cement_mix.cementBag];\r\n\r\n            // Set Column Total Volume\r\n            values.column.total_volume = 0;\r\n            column.forEach((e, index) => {\r\n                let result = +column[index].columnRectangular.x * +column[index].columnRectangular.y * (+column[index].columnRectangular.z + +column[index].columnHeight) * +column[index].columnCount;\r\n                result += (+column[index].columnCircular.d ? +column[index].columnCircular.d : 0) * ((+column[index].columnCircular.z ? +column[index].columnCircular.z : 0) + +column[index].columnHeight) * +column[index].columnCount;\r\n\r\n                values.column.total_volume += result;\r\n            });\r\n\r\n            // Set Column Required\r\n            values.column.required.cement = Math.ceil(values.column.total_volume * values.multipliers.cement);\r\n            values.column.required.sand = values.column.total_volume * values.multipliers.sand;\r\n            values.column.required.gravel = values.column.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Column Footing Total Volume\r\n            values.column_footing.total_volume = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].columnRectangular.x * +column_footing[index].columnRectangular.y * +column_footing[index].columnRectangular.z * +column_footing[index].columnCount;\r\n                result += (+column_footing[index].columnCircular.d ? +column_footing[index].columnCircular.d : 0) * (+column_footing[index].columnCircular.z ? +column_footing[index].columnCircular.z : 0) * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.total_volume += result;\r\n            });\r\n\r\n            // Set Column Footing Required\r\n            values.column_footing.required.cement = Math.ceil(values.column_footing.total_volume * values.multipliers.cement);\r\n            values.column_footing.required.sand = values.column_footing.total_volume * values.multipliers.sand;\r\n            values.column_footing.required.gravel = values.column_footing.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Wall Footing Total Volume\r\n            values.wall_footing.total_volume = 0;\r\n            wall_footing.forEach((e, index) => {\r\n                let result = +wall_footing[index].wallFootingDepth * +wall_footing[index].wallFootingWidth * +wall_footing[index].wallPerimeter;\r\n\r\n                values.wall_footing.total_volume += result;\r\n            });\r\n\r\n            // Set Wall Footing Required\r\n            values.wall_footing.required.cement = Math.ceil(values.wall_footing.total_volume * values.multipliers.cement);\r\n            values.wall_footing.required.sand = values.wall_footing.total_volume * values.multipliers.sand;\r\n            values.wall_footing.required.gravel = values.wall_footing.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Beam Total Volume\r\n            values.beam.total_volume = 0;\r\n            beam.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                beam[index].beamValues.forEach((ee, ii) => {\r\n                    let result = +beam[index].beamValues[ii].length * +beam[index].beamValues[ii].amount;\r\n                    total += result;\r\n                });\r\n\r\n                let res = total * +beam[index].beamsDimensions.y * +beam[index].beamsDimensions.x;\r\n                values.beam.total_volume += res;\r\n            });\r\n\r\n            // Set Beam Required\r\n            values.beam.required.cement = Math.ceil(values.beam.total_volume * values.multipliers.cement);\r\n            values.beam.required.sand = values.beam.total_volume * values.multipliers.sand;\r\n            values.beam.required.gravel = values.beam.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Slab Total Volume\r\n            values.slab.total_volume = 0;\r\n            slab.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                slab[index].slabValues.forEach((ee, ii) => {\r\n                    let result = +slab[index].slabValues[ii].horizontal * +slab[index].slabValues[ii].vertical;\r\n                    total += result;\r\n                });\r\n\r\n                console.log(total);\r\n\r\n                let res = total * (+slab[index].slabThickness / 100);\r\n\r\n                console.log(slab[index]);\r\n\r\n                values.slab.total_volume += res;\r\n            });\r\n\r\n            // Set Slab Required\r\n            values.slab.required.cement = Math.ceil(values.slab.total_volume * values.multipliers.cement);\r\n            values.slab.required.sand = values.slab.total_volume * values.multipliers.sand;\r\n            values.slab.required.gravel = values.slab.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Septic Tank Total Volume\r\n            values.septic_tank.total_volume = +septic_tank.topSlabDetails.length * +septic_tank.topSlabDetails.width * +septic_tank.topSlabDetails.thickness;\r\n            values.septic_tank.total_volume += +septic_tank.bottomSlabDetails.length * +septic_tank.bottomSlabDetails.width * +septic_tank.bottomSlabDetails.thickness;\r\n\r\n            // Set Septic Tank Required\r\n            values.septic_tank.required.cement = Math.ceil(values.septic_tank.total_volume * values.multipliers.cement);\r\n            values.septic_tank.required.sand = values.septic_tank.total_volume * values.multipliers.sand;\r\n            values.septic_tank.required.gravel = values.septic_tank.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Concrete Stairs Values\r\n            values.concrete_stairs.volume_of_landing = 0;\r\n            values.concrete_stairs.volume_of_first_block = 0;\r\n            values.concrete_stairs.volume_of_second_block = 0;\r\n            values.concrete_stairs.length_of_waist = 0;\r\n            values.concrete_stairs.volume_of_waist = 0;\r\n            values.concrete_stairs.volume_of_n_steps = 0;\r\n            values.concrete_stairs.total_pcc_volume = 0;\r\n            concrete_stair.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                concrete_stair[index].concreteStairValues.landing.forEach((ee, ii) => {\r\n                    let result = (+concrete_stair[index].concreteStairValues.landing[ii].landing_length - +concrete_stair[index].concreteStairValues.run_length) * +concrete_stair[index].concreteStairValues.landing[ii].landing_width * +concrete_stair[index].concreteStairValues.landing[ii].thickness_of_landing;\r\n                    total += result;\r\n                });\r\n\r\n                values.concrete_stairs.volume_of_landing = total;\r\n                values.concrete_stairs.volume_of_first_block = (2 * +concrete_stair[index].concreteStairValues.run_length) * +concrete_stair[index].concreteStairValues.width_of_stair * +concrete_stair[index].concreteStairValues.landing[0].thickness_of_landing;\r\n                values.concrete_stairs.volume_of_second_block = +concrete_stair[index].concreteStairValues.run_length * (+concrete_stair[index].concreteStairValues.landing[0].landing_length - +concrete_stair[index].concreteStairValues.run_length) * +concrete_stair[index].concreteStairValues.landing[0].thickness_of_landing;\r\n\r\n                values.concrete_stairs.length_of_waist = Math.sqrt(Math.pow(+concrete_stair[index].concreteStairValues.length_of_stair - (2 * +concrete_stair[index].concreteStairValues.run_length) - (+concrete_stair[index].concreteStairValues.run_length - +concrete_stair[index].concreteStairValues.landing[0].landing_length), 2) + Math.pow((+concrete_stair[index].concreteStairValues.height_of_stair - +concrete_stair[index].concreteStairValues.landing[0].thickness_of_landing), 2));\r\n                values.concrete_stairs.volume_of_waist = values.concrete_stairs.length_of_waist * +concrete_stair[index].concreteStairValues.landing[0].landing_length * +concrete_stair[index].concreteStairValues.landing[0].landing_width;\r\n                \r\n                values.concrete_stairs.number_of_steps = Math.ceil((+concrete_stair[index].concreteStairValues.height_of_stair/+concrete_stair[index].concreteStairValues.rise_length) - 1);\r\n                values.volume_of_1_step = 0.5 * +concrete_stair[index].concreteStairValues.rise_length * +concrete_stair[index].concreteStairValues.run_length;\r\n                values.volume_of_n_steps = values.concrete_stairs.number_of_steps * values.volume_of_1_step;\r\n\r\n                values.concrete_stairs.total_pcc_volume += (values.concrete_stairs.volume_of_landing + values.concrete_stairs.volume_of_first_block + values.concrete_stairs.volume_of_second_block + values.concrete_stairs.volume_of_waist + values.volume_of_n_steps);\r\n            });\r\n\r\n            // Set Concrete Stairs Required\r\n            values.concrete_stairs.required.cement = Math.ceil(values.concrete_stairs.total_pcc_volume * values.multipliers.cement);\r\n            values.concrete_stairs.required.sand = values.concrete_stairs.total_pcc_volume * values.multipliers.sand;\r\n            values.concrete_stairs.required.gravel = values.concrete_stairs.total_pcc_volume * values.multipliers.gravel;\r\n\r\n            // Set Manpower Duration\r\n            values.manpower.concreting.duration = Math.ceil((values.column.total_volume + values.column_footing.total_volume + values.wall_footing.total_volume + values.beam.total_volume + values.slab.total_volume + values.concrete_stairs.total_pcc_volume) * (1/0.6) * (1/(+manpower.numberLaborer + +manpower.numberForeman + +manpower.numberSkilled)));\r\n\r\n            // Set Manpower Labor Cost\r\n            values.manpower.concreting.labor_cost = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.concreting.duration) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.concreting.duration) + (+manpower.numberSkilled * +manpower.skilledWage * values.manpower.concreting.duration);\r\n\r\n            // Set Material Summary Amount\r\n            values.material_summary.cement_bags.amount = values.column.required.cement + values.column_footing.required.cement + values.wall_footing.required.cement + values.beam.required.cement + values.slab.required.cement + values.septic_tank.required.cement + values.concrete_stairs.required.cement;\r\n            values.material_summary.sand.amount = values.column.required.sand + values.column_footing.required.sand + values.wall_footing.required.sand + values.beam.required.sand + values.slab.required.sand + values.septic_tank.required.sand + values.concrete_stairs.required.sand;\r\n            values.material_summary.gravel.amount = values.column.required.gravel + values.column_footing.required.gravel + values.wall_footing.required.gravel + values.beam.required.gravel + values.slab.required.gravel + values.septic_tank.required.gravel + values.concrete_stairs.required.gravel;\r\n\r\n            // Set Material Summary Price\r\n            values.material_summary.cement_bags.price = values.material_summary.cement_bags.amount * +material.costValues.cement_bags;\r\n            values.material_summary.sand.price = values.material_summary.sand.amount * +material.costValues.sand;\r\n            values.material_summary.gravel.price = values.material_summary.gravel.amount * +material.costValues.gravel;\r\n\r\n            console.log(concreteValues, values);\r\n            // Go to Summary View\r\n            setSummaryView(true);\r\n            return values;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Concrete\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            {\r\n                summaryView ?\r\n                <Row>\r\n                    <Col>\r\n                        <Summary values={solutionValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"close\" onClick={e => {\r\n                            setSummaryView(false);\r\n                        }}>Back</Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Row>\r\n                    <Col>\r\n                        {[...Array(columnFormCount)].map((e, i) => <ColumnDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementColumnFormCount={incrementColumnFormCount} />)}\r\n                        {[...Array(columnFootingCount)].map((e, i) => <ColumnFootingDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementColumnFormCount={incrementColumnFootingCount} />)}\r\n                        {[...Array(wallFootingCount)].map((e, i) => <WallFootingDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementColumnFormCount={incrementWallFootingCount} />)}\r\n                        {[...Array(beamFormCount)].map((e, i) => <BeamDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementBeamFormCount={incrementBeamFormCount} />)}\r\n                        {[...Array(slabFormCount)].map((e, i) => <SlabDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementSlabFormCount={incrementSlabFormCount} />)}\r\n                        <SepticTankDetails concreteValues={concreteValues} setConcreteValues={setConcreteValues} />\r\n                        {[...Array(concreteStairFormCount)].map((e, i) => <ConcreteStairDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementConcreteStairFormCount={incrementConcreteStairFormCount} />)}\r\n                        <CementMix concreteValues={concreteValues} setConcreteValues={setConcreteValues} ></CementMix>\r\n                        <Manpower concreteValues={concreteValues} setConcreteValues={setConcreteValues} />\r\n                        <MaterialCosts concreteValues={concreteValues} setConcreteValues={setConcreteValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"check\" onClick={e => {\r\n                            calculate();\r\n                        }}>Summarize</Button>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Concrete;","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-2\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = page => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\nimport \"../src/assets/custom.css\";\n\nexport default () => (\n  <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker(props => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n    document.addEventListener('deviceready', () => {\n        renderReactDom();\n    }, false);\n} else {\n    renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}