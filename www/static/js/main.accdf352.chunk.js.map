{"version":3,"sources":["images/shards-dashboards-logo.svg","flux/constants.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","layouts/Default.js","components/common/PageTitle.js","components/add-new-estimation/AddNewEstimationForm.js","views/Estimations.js","views/AddNewEstimation.js","components/earthworks-estimation/ColumnFootingDetails.js","components/earthworks-estimation/WallFootingDetails.js","components/earthworks-estimation/GravelBedding.js","components/earthworks-estimation/SepticTankDetails.js","components/earthworks-estimation/OnFill.js","components/earthworks-estimation/SlabDetail.js","components/earthworks-estimation/Manpower.js","components/earthworks-estimation/Summary.js","views/Estimations/Earthworks.js","components/formworks-estimation/ColumnDetails.js","components/formworks-estimation/BeamDetails.js","components/formworks-estimation/SlabDetails.js","components/formworks-estimation/Manpower.js","components/formworks-estimation/PlywoodAndLumber.js","components/formworks-estimation/MaterialCosts.js","components/formworks-estimation/Summary.js","components/concrete-estimation/ColumnDetails.js","components/concrete-estimation/ColumnFootingDetails.js","components/concrete-estimation/WallFootingDetails.js","components/concrete-estimation/BeamDetails.js","components/concrete-estimation/SlabDetails.js","components/concrete-estimation/SepticTankDetails.js","components/concrete-estimation/ConcreteStairDetails.js","components/concrete-estimation/CementMix.js","components/concrete-estimation/Manpower.js","components/concrete-estimation/MaterialCosts.js","components/concrete-estimation/Summary.js","components/masonry-estimation/Walls.js","components/masonry-estimation/SepticWalls.js","components/masonry-estimation/Manpower.js","components/masonry-estimation/MaterialCosts.js","components/masonry-estimation/Summary.js","views/Estimations/Masonry.js","routes.js","views/Estimations/Formworks.js","views/Estimations/Concrete.js","withTracker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","to","htmlBefore","htmlAfter","store","Store","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","registerToActions","bind","assertThisInitialized","toggleSidebar","register","actionType","_ref","payload","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","props","handleClick","dispatch","console","log","react_default","a","createElement","className","href","onClick","React","Component","MainNavbar","layout","stickyTop","classes","classNames","shards_react_es","type","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","id","maxWidth","src","require","alt","SidebarSearch","display","minHeight","seamless","placeholder","aria-label","SidebarNavItem","item","tag","RouteNavLink","dangerouslySetInnerHTML","__html","SidebarNavItems","state","getSidebarItems","onChange","addChangeListener","removeChangeListener","setState","objectSpread","items","map","idx","MainSidebar_SidebarNavItem","key","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","DefaultLayout","children","noNavbar","noFooter","fluid","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","AddNewEstimationForm","flush","form","htmlFor","Estimations","noGutters","common_PageTitle","add_new_estimation_AddNewEstimationForm","AddNewEstimation","ColumnFootingDetails","_useState","useState","_useState2","slicedToArray","columnType","setColumnType","_useState3","_useState4","footingType","setFootingType","_useState5","x","y","z","_useState6","columnRectangular","setColumnRectangular","_useState7","d","_useState8","columnCircular","setColumnCircular","_useState9","_useState10","footingRectangular","setFootingReactangular","_useState11","_useState12","footingCircular","setFootingCircular","_useState13","_useState14","columnCount","setColumnCount","useEffect","setEarthworkValues","values","columnFootingValues","index","small","incrementColumnFootingFormCount","e","target","value","xxsm","object","WallFootingDetails","depthCHB","setDepthCHB","depthWallFooting","setDepthWallFooting","widthFooting","setWidthFooting","wallPerimeter","setWallPerimeter","wallFootingValues","incrementWallFootingFormCount","GravelBedding","gravelBeddingDepth","setGravelBeddingDepth","gravelBeddingValues","SepticTankDetails","septicTank","setSepticTank","septicTankValues","incrementSepticTankFormCount","height","area","onFill","setOnFill","onFillValues","incrementOnFillFormCount","SlabDetail","slabDetailArea","setSlabDetailArea","slabDetailValues","Manpower","numberLaborer","setNumberLaborer","numberForeman","setNumberForeman","laborerWage","setLaborerWage","foremanWage","setForemanWage","manPowerValues","Summary","summary","volume_for_excavation","toFixed","volume_for_backfill","volume_for_gravel_bedding","manpower","duration","excavation","backfill","gravel_bedding","labor_cost","Earthworks","summaryView","setSummaryView","columnFootingFormCount","setColumnFootingFormCount","wallFootingFormCount","setWallFootingFormCount","septicTankFormCount","setSpeticTankFormCount","onFillFormCount","setOnFillFormCount","earthworksValues","column_footing","rectangular","circular","wall_footing","plumbing","on_fill","total","slab","solutionValues","setSolutionValues","count","earthworks_estimation_Summary","icon","toConsumableArray","Array","i","earthworks_estimation_ColumnFootingDetails","earthworks_estimation_WallFootingDetails","earthworks_estimation_GravelBedding","earthworks_estimation_SepticTankDetails","OnFill","earthworks_estimation_SlabDetail","earthworks_estimation_Manpower","septic_tank","slab_detail","forEach","result","Math","ceil","ColumnDetails","undefined","columnHeight","setColumnHeight","setFormWorkValues","columnDetailsValues","incrementColumnFormCount","BeamDetails","beamDimensions","setBeamDimensions","length","amount","beamValues","setBeamValues","beamCount","setBeamCount","beamDetailsValues","beamsDimensions","incrementBeamFormCount","xxs","dimensions","SlabDetails","horizontal","vertical","slabValues","setSlabValues","slabCount","setSlabCount","slabDetailsValues","incrementSlabFormCount","numberSkilled","setNumberSkilled","skilledWage","setSkilledWage","manpowerValues","PlywoodAndLumber","size_of_plywood","wood_frame_size","wood_frame_thickness","lumber_size","diagonal","metal_sheets","spacing_for_vertical_ribs","length_of_steel_bar","palValues","setPalValues","plywoodAndLumberValues","MaterialCosts","plywood","wood_frame","lumber","costValues","setCostValues","materialCostsValues","column","total_number_of_plywood","beam","column_scaffolding","beam_scaffolding","slab_scaffolding","formworks","material_summary","data","cost","wood_frames","setConcreteValues","wallFootingDepth","setWallFootingDepth","wallFootingWidth","setWallFootingWidth","slabThickness","setSlabThickness","width","depth","thickness","topSlabDetails","setTopSlabDetails","bottomSlabDetails","setBottomSlabDetails","ConcreteStairDetails","rise_length","run_length","height_of_stair","width_of_stair","length_of_stair","waistlength_thickness","landing","thickness_of_landing","landing_width","landing_length","concreteStairValues","setConcreteStairValues","landingCount","setLandingCount","classMixture","cementBag","proportions","cementMixValues","setCementMixValues","cement_bags","sand","gravel","required","cement","concrete_stairs","concreting","price","Walls","wallHeight","size_of_CHB","cm","inches","plasterThickness","doubleSided","reinforcing_bars","vertical_spacing","horizontal_spacing","rebar_length","tie_wire_length","rebar_diameter","door_window_gross_area","doors","setValues","doorCount","setDoorCount","setMasonryValues","wallsValues","masonryValues","SepticWalls","septicDepth","septicLength","septicWidth","numberOfChambers","septicWallValues","CHB","4 x 8 x 16","6 x 8 x 16","8 x 8 x 16","rebar","tie_wire","xxsn","reinforcement","vertical_rebars","horizontal_rebars","layering","plastering","Masonry","routes","path","exact","component","Redirect","columnFormCount","setColumnFormCount","beamFormCount","setBeamFormCount","slabFormCount","setSlabFormCount","frame_size","formworksArea","total_number_of_sheet","vertical_support","circumferential_ties","wood_frame_multiplier","multiplier","column_scaffolding_multipliers","2\"x2\"","2\"x3\"","2\"x4\"","total_length","area_needed","beam_scaffolding_multipliers","slab_scaffolding_multipliers","pieces","boardfoot","quantity_of_lumber_scaffolding","flooring_slab","boardfoot_of_wood_for_column","1/4\" (6mm)","1/2\" (12mm)","quantity_of_metal_form_for_circular_column","0.90 x 2.40","number_of_sheets","length_of_vertical_ribs","15 cm","20 cm","length_of_circumferential_ties","1.20 x 2.40","formworkValues","formworks_estimation_Summary","formworks_estimation_ColumnDetails","formworks_estimation_BeamDetails","formworks_estimation_SlabDetails","formworks_estimation_PlywoodAndLumber","formworks_estimation_Manpower","formworks_estimation_MaterialCosts","plywoodAndLumber","materialCosts","ee","ii","res","columnFootingCount","setColumnFootingCount","wallFootingCount","setWallFootingCount","concreteStairFormCount","setConcreteStairFormCount","_useState15","_useState16","concreteValues","_useState17","multipliers","total_volume","volume_of_landing","volume_of_first_block","volume_of_second_block","length_of_waist","volume_of_waist","number_of_steps","volume_of_1_step","volume_of_n_steps","total_pcc_volume","volumetric_method","class_mixture","AA","cement_bag","40kg","50kg","A","B","C","_useState18","incrementColumnFootingCount","incrementWallFootingCount","incrementConcreteStairFormCount","concrete_estimation_Summary","concrete_estimation_ColumnDetails","concrete_estimation_ColumnFootingDetails","concrete_estimation_WallFootingDetails","concrete_estimation_BeamDetails","concrete_estimation_SlabDetails","concrete_estimation_SepticTankDetails","concrete_estimation_ConcreteStairDetails","CementMix","concrete_estimation_Manpower","concrete_estimation_MaterialCosts","concrete_stair","cement_mix","material","sqrt","pow","wallFormCount","setWallFormCount","total_wall_area","walls","septic","total_number_of_chb","number_of_chb_per_type","quantity_of_cement_and_sand_for_CHB_mortar_per_sqm","10 x 20 x 40","number_of_CHB_per_sqm","bags_of_cement","D","15 x 20 x 40","20 x 20 x 40","quantity_of_cement_and_sand_for_plastering_per_sqm","thickness_of_plastering","8","12","16","20","25","Sand","length_of_reinforcing_bars_for_CHB","vertical_reinforcement","40","length_of_bars","per_block","per_sqm","60","80","horizontal_reinforcement","2","3","4","tie_wire_for_CHB","30","parameters","CHB_cement_multiplier","CHB_sand_multiplier","plaster_multiplier","sand_plaster_multiplier","double_sided_plaster","reinforcing_bars_multiplier","CHB_mortar","for_plaster","number_of_rebars","tie_wire_kgs","incrementWallFormCount","masonry_estimation_Summary","masonry_estimation_Walls","masonry_estimation_SepticWalls","masonry_estimation_Manpower","masonry_estimation_MaterialCosts","wall","wall_area","door_window_area","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","options","arguments","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","_Component","HOC","apply","inherits","createClass","location","pathname","search","concat","prevProps","currentPage","nextPage","App","HashRouter","basename","route","Route","Boolean","window","hostname","match","renderReactDom","ReactDOM","render","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,qSCAzBC,EACL,SADKA,EAEG,iBCAHC,EAAA,UAAIC,oBCIfC,EAAS,CACXC,aAAa,EACbC,SCPO,CACL,CACEC,MAAO,cACPC,GAAI,IACJC,WAAY,qCACZC,UAAW,IAEb,CACEH,MAAO,iBACPC,GAAI,mBACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,4BACPC,GAAI,0BACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,2BACPC,GAAI,yBACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,0BACPC,GAAI,wBACJC,WAAY,oCACZC,UAAW,IAEb,CACEH,MAAO,yBACPC,GAAI,uBACJC,WAAY,oCACZC,UAAW,MDgBFC,EAAA,gBAxCb,SAAAC,IAAc,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACZC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,QAEKI,kBAAoBP,EAAKO,kBAAkBC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KACzBA,EAAKU,cAAgBV,EAAKU,cAAcF,KAAnBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAErBV,EAAWqB,SAASX,EAAKO,kBAAkBC,KAAvBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,MANRA,oFAS6B,IAAvBY,EAAuBC,EAAvBD,WAAuBC,EAAXC,QAC9B,OAAQF,GACN,KAAKG,EACHZ,KAAKO,yDAOTnB,EAAOC,aAAeD,EAAOC,YAC7BW,KAAKa,KAAKD,0CAIV,OAAOxB,EAAOC,sDAId,OAAOD,EAAOE,mDAGEwB,GAChBd,KAAKe,GAAGH,EAAkBE,gDAGPA,GACnBd,KAAKgB,eAAeJ,EAAkBE,UArCtBG,iBEmBLC,cAzBb,SAAAA,EAAYC,GAAO,IAAAtB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAkB,IACjBrB,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAoB,GAAAf,KAAAH,KAAMmB,KAEDC,YAAcvB,EAAKuB,YAAYf,KAAjBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAHFA,6EAOjBV,EAAWkC,SAAS,CAClBZ,WAAYG,IAEdU,QAAQC,IAAI,gDAIZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAEbH,EAAAC,EAAAC,cAAA,KAAGE,KAAK,IAAIC,QAAS7B,KAAKoB,YAAaO,UAAU,uFAC/CH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,mBAnBiBG,IAAMC,WCG3BC,EAAa,SAAAtB,GAA2BA,EAAxBuB,OAAwB,IAAhBC,EAAgBxB,EAAhBwB,UACtBC,EAAUC,IACd,cACA,WACAF,GAAa,cAGf,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAWQ,GACdX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWV,UAAU,OACnBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,QAAQX,UAAU,0CAC7BH,EAAAC,EAAAC,cAACa,EAAD,UAkBVP,EAAWQ,aAAe,CACxBN,WAAW,GAGEF,eClCTS,cACJ,SAAAA,EAAYtB,GAAO,IAAAtB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAyC,IACjB5C,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA2C,GAAAtC,KAAAH,KAAMmB,KAEDuB,oBAAsB7C,EAAK6C,oBAAoBrC,KAAzBP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAHVA,qFAOjBV,EAAWkC,SAAS,CAClBZ,WAAYG,qCAIP,IACC+B,EAAiB3C,KAAKmB,MAAtBwB,aACR,OACEnB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEV,UAAU,gEACVW,KAAK,SAELd,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEV,UAAU,aACVC,KAAK,IACLgB,MAAO,CAAEC,WAAY,SAErBrB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,OACEoB,GAAG,YACHnB,UAAU,gCACViB,MAAO,CAAEG,SAAU,QACnBC,IAAKC,EAAQ,KACbC,IAAI,cAEJP,GACAnB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,2BAAhB,cAONH,EAAAC,EAAAC,cAAA,KACEC,UAAU,iDACVE,QAAS7B,KAAK0C,qBAEdlB,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,oBA9CoBG,IAAMC,WA6DtCU,EAAkBD,aAAe,CAC/BG,cAAc,GAGDF,QC9DAU,EAAA,kBACb3B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAMV,UAAU,wEAAwEiB,MAAO,CAAEQ,QAAS,OAAQC,UAAW,SAC3H7B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYiB,UAAQ,EAAC3B,UAAU,QAC7BH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAiBC,KAAK,WACpBd,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,WAEFH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEV,UAAU,gBACV4B,YAAY,0BACZC,aAAW,wBCaNC,EA3BQ,SAAA/C,GAAA,IAAGgD,EAAHhD,EAAGgD,KAAH,OACrBlC,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAASsB,IAAKC,IAAcpE,GAAIkE,EAAKlE,IAClCkE,EAAKjE,YACJ+B,EAAAC,EAAAC,cAAA,OACEC,UAAU,mCACVkC,wBAAyB,CAAEC,OAAQJ,EAAKjE,cAG3CiE,EAAKnE,OAASiC,EAAAC,EAAAC,cAAA,YAAOgC,EAAKnE,OAC1BmE,EAAKhE,WACJ8B,EAAAC,EAAAC,cAAA,OACEC,UAAU,mCACVkC,wBAAyB,CAAEC,OAAQJ,EAAKhE,gBC4BnCqE,cAvCb,SAAAA,EAAY5C,GAAO,IAAAtB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+D,IACjBlE,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiE,GAAA5D,KAAAH,KAAMmB,KAED6C,MAAQ,CACX1E,SAAUM,EAAMqE,mBAGlBpE,EAAKqE,SAAWrE,EAAKqE,SAAS7D,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KAPCA,oFAWjBD,EAAMuE,kBAAkBnE,KAAKkE,yDAI7BtE,EAAMwE,qBAAqBpE,KAAKkE,6CAIhClE,KAAKqE,SAALvE,OAAAwE,EAAA,EAAAxE,CAAA,GACKE,KAAKgE,MADV,CAEE1E,SAAUM,EAAMqE,sDAIX,IACWM,EAAUvE,KAAKgE,MAAzB1E,SACR,OACEkC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,+BACZ4C,EAAMC,IAAI,SAACd,EAAMe,GAAP,OACTjD,EAAAC,EAAAC,cAACgD,EAAD,CAAgBC,IAAKF,EAAKf,KAAMA,eAhCd5B,IAAMC,WCK9B6C,cACJ,SAAAA,EAAYzD,GAAO,IAAAtB,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA4E,IACjB/E,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA8E,GAAAzE,KAAAH,KAAMmB,KAED6C,MAAQ,CACX3E,aAAa,EACbwF,gBAAiBjF,EAAMqE,mBAGzBpE,EAAKqE,SAAWrE,EAAKqE,SAAS7D,KAAdP,OAAAQ,EAAA,EAAAR,QAAAQ,EAAA,EAAAR,CAAAD,KARCA,oFAYjBD,EAAMuE,kBAAkBnE,KAAKkE,yDAI7BtE,EAAMwE,qBAAqBpE,KAAKkE,6CAIhClE,KAAKqE,SAALvE,OAAAwE,EAAA,EAAAxE,CAAA,GACKE,KAAKgE,MADV,CAEE3E,YAAaO,EAAMkF,eACnBD,gBAAiBjF,EAAMqE,sDAKzB,IAAM9B,EAAUC,IACd,eACA,OACA,SACApC,KAAKgE,MAAM3E,YAAc,OAAS,IAKpC,OAFAiC,QAAQC,IAAIvB,KAAKgE,MAAM3E,YAAa8C,GAGlCX,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEsB,IAAI,QACJhC,UAAWQ,EACX4C,GAAI,CAAEC,KAAM,GACZC,GAAI,CAAED,KAAM,IAEZxD,EAAAC,EAAAC,cAACwD,EAAD,CAAmBvC,aAAc3C,KAAKmB,MAAMwB,eAC5CnB,EAAAC,EAAAC,cAACyB,EAAD,MACA3B,EAAAC,EAAAC,cAACyD,EAAD,cA/CkBrD,IAAMC,WA4DhC6C,EAAYpC,aAAe,CACzBG,cAAc,GAGDiC,QCpETQ,EAAgB,SAAA1E,GAAA,IAAG2E,EAAH3E,EAAG2E,SAAUC,EAAb5E,EAAa4E,SAAb5E,EAAuB6E,SAAvB,OACpB/D,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,GACdhE,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAAC+D,EAAD,MACAjE,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACEV,UAAU,mBACVoD,GAAI,CAAEC,KAAM,GAAIU,OAAQ,GACxBT,GAAI,CAAED,KAAM,EAAGU,OAAQ,GACvBC,GAAG,KACHhC,IAAI,SAEF2B,GAAY9D,EAAAC,EAAAC,cAACkE,EAAD,MACbP,MAiBTD,EAAc5C,aAAe,CAC3B8C,UAAU,EACVC,UAAU,GAGGH,gBCTAS,EA3BG,SAAAnF,GAA8C,IAA3CnB,EAA2CmB,EAA3CnB,MAAOuG,EAAoCpF,EAApCoF,SAAUnE,EAA0BjB,EAA1BiB,UAAcoE,EAAYjG,OAAAkG,EAAA,EAAAlG,CAAAY,EAAA,kCACxDyB,EAAUC,IACdT,EACA,cACA,eACA,WAGF,OACEH,EAAAC,EAAAC,cAACW,EAAA,EAADvC,OAAAmG,OAAA,CAAKC,GAAG,KAAKP,GAAG,IAAIhE,UAAWQ,GAAc4D,GAC3CvE,EAAAC,EAAAC,cAAA,QAAMC,UAAU,gCAAgCmE,GAChDtE,EAAAC,EAAAC,cAAA,MAAIC,UAAU,cAAcpC,KCuBnB4G,iBAzBc,kBAC3B3E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACd5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACP7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACrBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CACES,GAAG,sBACHR,KAAK,OACLiB,YAAY,2BAKlB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,UAAb,gCCPGiE,MAlBf,SAAqBpF,GACjB,OACIK,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIpG,MAAM,cAAcuG,SAAS,iBAAiBnE,UAAU,kBAI9EH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACgF,EAAD,UCKLC,EAhBU,kBACvBnF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEzBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACvBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIpG,MAAM,qBAAqBuG,SAAS,cAAcnE,UAAU,kBAGhFH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KAEEb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK0C,GAAG,KAAKE,GAAG,MACdzD,EAAAC,EAAAC,cAACgF,EAAD,yBCgKOE,MAnKf,SAA8BzF,GAAO,IAAA0F,EACGC,mBAAS,eADZC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GAC1BI,EAD0BF,EAAA,GACdG,EADcH,EAAA,GAAAI,EAEKL,mBAAS,eAFdM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAE1BE,EAF0BD,EAAA,GAEbE,EAFaF,EAAA,GAAAG,EAIiBT,mBAAS,CAACU,EAAG,GAAIC,EAAG,GAAIC,EAAG,KAJ5CC,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAI1BK,EAJ0BD,EAAA,GAIPE,EAJOF,EAAA,GAAAG,EAKWhB,mBAAS,CAACiB,EAAG,GAAIL,EAAG,KAL/BM,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAK1BG,EAL0BD,EAAA,GAKVE,EALUF,EAAA,GAAAG,EAOoBrB,mBAAS,CAACU,EAAG,GAAIC,EAAG,GAAIC,EAAG,KAP/CU,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAO1BE,EAP0BD,EAAA,GAONE,EAPMF,EAAA,GAAAG,EAQazB,mBAAS,CAACiB,EAAG,GAAIL,EAAG,KARjCc,EAAA1I,OAAAkH,EAAA,EAAAlH,CAAAyI,EAAA,GAQ1BE,EAR0BD,EAAA,GAQTE,EARSF,EAAA,GAAAG,EAUK7B,qBAVL8B,EAAA9I,OAAAkH,EAAA,EAAAlH,CAAA6I,EAAA,GAU1BE,EAV0BD,EAAA,GAUbE,EAVaF,EAAA,GA4BjC,OAhBAG,oBAAU,WACN5H,EAAM6H,mBAAmB,SAAAC,GAWrB,OAVAA,EAAOC,oBAAoB/H,EAAMgI,OAAS,CACtClC,WAAYA,EACZI,YAAaA,EACbO,kBAAmBA,EACnBK,eAAgBA,EAChBI,mBAAoBA,EACpBI,gBAAiBA,EACjBI,YAAaA,GAGVI,KAEZ,CAAChC,EAAYI,EAAaO,EAAmBK,EAAgBI,EAAoBI,EAAiBI,IAGjGrH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,0BAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOV,EAAMkI,oCAAoC7H,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAE1HH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOC,QAAQ1G,GAAG,yBACzDtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKK,gBAAfvC,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIzB,EAAqB,SAAA6B,GAAsC,OAA3BA,EAAOlC,EAAI8B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,8BAA8BS,YAAY,uBAExJ/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIzB,EAAqB,SAAA6B,GAAsC,OAA3BA,EAAOjC,EAAI6B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,8BAA8BS,YAAY,uBAExJ/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIzB,EAAqB,SAAA6B,GAAsC,OAA3BA,EAAOhC,EAAI4B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,8BAA8BS,YAAY,wBAK/I,aAAf0D,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,gBACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,2BAA2BS,YAAY,uBAEjD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,4BAAf,aACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,wBAK3D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,0BAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIhC,EAAegC,EAAEC,OAAOC,QAAQ1G,GAAG,0BAC1DtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKM,gBAAhBnC,GACE7F,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gCAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIhB,EAAuB,SAAAoB,GAAsC,OAA3BA,EAAOlC,EAAI8B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,+BAA+BS,YAAY,uBAE3J/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gCAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIhB,EAAuB,SAAAoB,GAAsC,OAA3BA,EAAOjC,EAAI6B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,+BAA+BS,YAAY,uBAE3J/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gCAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIhB,EAAuB,SAAAoB,GAAsC,OAA3BA,EAAOhC,EAAI4B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,+BAA+BS,YAAY,wBAKjJ,aAAhB8D,GACE7F,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,6BAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBb,EAAmB,SAAAgB,GAEf,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,4BAA4BS,YAAY,uBAElD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,6BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBb,EAAmB,SAAAgB,GAEf,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,4BAA4BS,YAAY,wBAK1D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,sBAAsBS,YAAY,qCC5FtIoG,MA5Df,SAA4BxI,GAAO,IAAA0F,EACCC,mBAAS,IADVC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACxB+C,EADwB7C,EAAA,GACd8C,EADc9C,EAAA,GAAAI,EAEiBL,mBAAS,IAF1BM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAExB2C,EAFwB1C,EAAA,GAEN2C,EAFM3C,EAAA,GAAAG,EAGST,mBAAS,IAHlBa,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGxByC,EAHwBrC,EAAA,GAGVsC,EAHUtC,EAAA,GAAAG,EAIWhB,mBAAS,IAJpBkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAIxBoC,EAJwBlC,EAAA,GAITmC,EAJSnC,EAAA,GAmB/B,OAbAe,oBAAU,WACN5H,EAAM6H,mBAAmB,SAAAC,GAQrB,OAPAA,EAAOmB,kBAAkBjJ,EAAMgI,OAAS,CACpCS,SAAUA,EACVE,iBAAkBA,EAClBE,aAAcA,EACdE,cAAeA,GAGZjB,KAEZ,CAACW,EAAUE,EAAkBE,EAAcE,IAG1C1I,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,wBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOV,EAAMkJ,kCAAkC7I,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAExHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,6BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GAAC,OAAIO,EAAYP,EAAEC,OAAOC,QAAQjG,YAAY,2BAE3G/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,6BAAf,6BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,4BAA4BoB,SAAU,SAAAoF,GAAC,OAAIS,EAAoBT,EAAEC,OAAOC,QAAQjG,YAAY,4BAGhI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,uBAAuBoB,SAAU,SAAAoF,GAAC,OAAIW,EAAgBX,EAAEC,OAAOC,QAAQjG,YAAY,2BAEnH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,wBAAwBoB,SAAU,SAAAoF,GAAC,OAAIa,EAAiBb,EAAEC,OAAOC,QAAQjG,YAAY,uCCR1I+G,MAxCf,SAAuBnJ,GAAO,IAAA0F,EAC0BC,qBAD1BC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACnB0D,EADmBxD,EAAA,GACCyD,EADDzD,EAAA,GAa1B,OAVAgC,oBAAU,WACN5H,EAAM6H,mBAAmB,SAAAC,GAKrB,OAJAA,EAAOwB,oBAAsB,CACzBF,mBAAoBA,GAGjBtB,KAEZ,CAACsB,IAGA/I,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,2BAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,0BAA0BoB,SAAU,SAAAoF,GAAC,OAAIkB,EAAsBlB,EAAEC,OAAOC,QAAQjG,YAAY,4CCoBjJmH,MAhDf,SAA2BvJ,GAAO,IAAA0F,EACMC,mBAAS,CAACU,EAAG,GAAIC,EAAG,GAAIC,EAAG,KADjCX,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACvB8D,EADuB5D,EAAA,GACX6D,EADW7D,EAAA,GAa9B,OAVAgC,oBAAU,WACN5H,EAAM6H,mBAAmB,SAAAC,GAKrB,OAJAA,EAAO4B,iBAAiB1J,EAAMgI,OAAS,CACnCwB,WAAYA,GAGT1B,KAEZ,CAAC0B,IAGAnJ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,uBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOV,EAAM2J,iCAAiCtJ,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAEvHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACT7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACZH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIsB,EAAc,SAAAlB,GAAsC,OAA3BA,EAAOlC,EAAI8B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,mBAAmBS,YAAY,uBAEtI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIsB,EAAc,SAAAlB,GAAsC,OAA3BA,EAAOjC,EAAI6B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,mBAAmBS,YAAY,uBAEtI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIsB,EAAc,SAAAlB,GAAsC,OAA3BA,EAAOhC,EAAI4B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,mBAAmBS,YAAY,+BCQ/JmH,MA5Cf,SAA2BvJ,GAAO,IAAA0F,EACFC,mBAAS,CAACiE,OAAQ,GAAIC,KAAM,KAD1BjE,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACvBoE,EADuBlE,EAAA,GACfmE,EADenE,EAAA,GAa9B,OAVAgC,oBAAU,WACN5H,EAAM6H,mBAAmB,SAAAC,GAKrB,OAJAA,EAAOkC,aAAahK,EAAMgI,OAAS,CAC/B8B,OAAQA,GAGLhC,KAEZ,CAACgC,IAGAzJ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,WAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOV,EAAMiK,6BAA6B5J,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAEnHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAI4B,EAAU,SAAAxB,GAA2C,OAAhCA,EAAOqB,OAASzB,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,oBAAoBS,YAAY,4BAExI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,mBAAf,6BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAI4B,EAAU,SAAAxB,GAAyC,OAA9BA,EAAOsB,KAAO1B,EAAEC,OAAOC,MAAcE,KAAW5G,GAAG,kBAAkBS,YAAY,yCCQzJ8H,MAxCf,SAAoBlK,GAAO,IAAA0F,EACqBC,mBAAS,IAD9BC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GAChByE,EADgBvE,EAAA,GACAwE,EADAxE,EAAA,GAavB,OAVAgC,oBAAU,WACN5H,EAAM6H,mBAAmB,SAAAC,GAKrB,OAJAA,EAAOuC,iBAAkB,CACrBF,eAAgBA,GAGbrC,KAEZ,CAACqC,IAGA9J,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,gBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qCACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIiC,EAAkBjC,EAAEC,OAAOC,QAAQjG,YAAY,4CCgCzIkI,MA5Df,SAAkBtK,GAAO,IAAA0F,EACqBC,qBADrBC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACd6E,EADc3E,EAAA,GACC4E,EADD5E,EAAA,GAAAI,EAEqBL,qBAFrBM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEdyE,EAFcxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAG,EAGiBT,qBAHjBa,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGduE,EAHcnE,EAAA,GAGDoE,EAHCpE,EAAA,GAAAG,EAIiBhB,qBAJjBkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAIdkE,EAJchE,EAAA,GAIDiE,EAJCjE,EAAA,GAmBrB,OAbAe,oBAAU,WACN5H,EAAM6H,mBAAmB,SAAAC,GAQrB,OAPAA,EAAOiD,eAAgB,CACnBR,cAAeA,EACfE,cAAeA,EACfE,YAAaA,EACbE,YAAaA,GAGV/C,KAEZ,CAACyC,EAAeE,EAAeE,EAAaE,IAG3CxK,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIqC,EAAiBrC,EAAEC,OAAOC,QAAQjG,YAAY,8BAE9G/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIuC,EAAiBvC,EAAEC,OAAOC,QAAQjG,YAAY,8BAGlH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIyC,EAAezC,EAAEC,OAAOC,QAAQjG,YAAY,yBAEjH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAI2C,EAAe3C,EAAEC,OAAOC,QAAQjG,YAAY,iCCRtI4I,MAzCf,SAAiBhL,GAKb,OAJA4H,oBAAU,WACNzH,QAAQC,IAAIJ,EAAM8H,UAIlBzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,uCAA+BP,EAAM8H,OAAOmD,QAAQC,sBAAsBC,QAAQ,GAAlF,UAA+F9K,EAAAC,EAAAC,cAAA,WAC/FF,EAAAC,EAAAC,cAAA,qCAA6BP,EAAM8H,OAAOmD,QAAQG,oBAAoBD,QAAQ,GAA9E,UAA2F9K,EAAAC,EAAAC,cAAA,WAC3FF,EAAAC,EAAAC,cAAA,2CAAmCP,EAAM8H,OAAOmD,QAAQI,0BAA0BF,QAAQ,GAA1F,UAAuG9K,EAAAC,EAAAC,cAAA,WACvGF,EAAAC,EAAAC,cAAA,kCAA+BF,EAAAC,EAAAC,cAAA,WAC/BF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,4BAAoBP,EAAM8H,OAAOwD,SAASC,SAASC,WAAWL,QAAQ,GAAtE,SAAqF9K,EAAAC,EAAAC,cAAA,WACrFF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOwD,SAASC,SAASE,SAASN,QAAQ,GAAlE,SAAiF9K,EAAAC,EAAAC,cAAA,WACjFF,EAAAC,EAAAC,cAAA,gCAAwBP,EAAM8H,OAAOwD,SAASC,SAASG,eAAeP,QAAQ,GAA9E,SAA6F9K,EAAAC,EAAAC,cAAA,YAEjGF,EAAAC,EAAAC,cAAA,6BAA0BF,EAAAC,EAAAC,cAAA,WAC1BF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,4BAAoBP,EAAM8H,OAAOwD,SAASK,WAAWH,WAAWL,QAAQ,GAAxE,QAAsF9K,EAAAC,EAAAC,cAAA,WACtFF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOwD,SAASK,WAAWF,SAASN,QAAQ,GAApE,QAAkF9K,EAAAC,EAAAC,cAAA,WAClFF,EAAAC,EAAAC,cAAA,gCAAwBP,EAAM8H,OAAOwD,SAASK,WAAWD,eAAeP,QAAQ,GAAhF,QAA8F9K,EAAAC,EAAAC,cAAA,mBC8NnHqL,OAzPf,SAAoB5L,GAAO,IAAA0F,EACeC,oBAAS,GADxBC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GAChBmG,EADgBjG,EAAA,GACHkG,EADGlG,EAAA,GAAAI,EAGqCL,mBAAS,GAH9CM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAGhB+F,EAHgB9F,EAAA,GAGQ+F,EAHR/F,EAAA,GAAAG,EAIiCT,mBAAS,GAJ1Ca,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAIhB6F,EAJgBzF,EAAA,GAIM0F,EAJN1F,EAAA,GAAAG,EAK+BhB,mBAAS,GALxCkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAKhBwF,EALgBtF,EAAA,GAKKuF,EALLvF,EAAA,GAAAG,EAMuBrB,mBAAS,GANhCsB,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAMhBqF,EANgBpF,EAAA,GAMCqF,EANDrF,EAAA,GAAAG,EAQwBzB,mBAAS,CACpDoC,oBAAqB,GACrBkB,kBAAmB,GACnBK,oBAAqB,GACrBI,iBAAkB,GAClBM,aAAc,GACdK,iBAAkB,GAClBU,eAAgB,KAfG1D,EAAA1I,OAAAkH,EAAA,EAAAlH,CAAAyI,EAAA,GAQhBmF,EARgBlF,EAAA,GAQEQ,EARFR,EAAA,GAAAG,EAkBqB7B,mBAAS,CACjD6G,eAAgB,CACZhB,WAAY,CACRiB,YAAa,EACbC,SAAU,GAEdjB,SAAU,CACNgB,YAAa,EACbC,SAAU,GAEdhB,eAAgB,CACZe,YAAa,EACbC,SAAU,IAGlBC,aAAc,CACVnB,WAAY,EACZE,eAAgB,EAChBD,SAAU,GAEdmB,SAAU,CACNpB,WAAY,GAEhBqB,QAAS,CACLC,MAAO,GAEXC,KAAM,CACFrB,eAAgB,GAEpBJ,SAAU,CACNC,SAAU,CACNC,WAAY,EACZC,SAAU,EACVC,eAAgB,GAEpBC,WAAY,CACRH,WAAY,EACZC,SAAU,EACVC,eAAgB,IAGxBT,QAAS,CACLC,sBAAuB,EACvBE,oBAAqB,EACrBC,0BAA2B,KA9DZ5D,EAAA9I,OAAAkH,EAAA,EAAAlH,CAAA6I,EAAA,GAkBhBwF,EAlBgBvF,EAAA,GAkBAwF,EAlBAxF,EAAA,GAkEjBS,EAAkC,WACpC8D,EAA0B,SAAAkB,GAAK,OAAIA,EAAQ,KAGzChE,EAAgC,WAClCgD,EAAwB,SAAAgB,GAAK,OAAIA,EAAQ,KAGvCvD,EAA+B,WACjCyC,EAAuB,SAAAc,GAAK,OAAIA,EAAQ,KAGtCjD,EAA2B,WAC7BqC,EAAmB,SAAAY,GAAK,OAAIA,EAAQ,KA+HxC,OACI7M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIpG,MAAM,aAAauG,SAAS,aAAanE,UAAU,kBAKrEqL,EACAxL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAC4M,EAAD,CAASrF,OAAQkF,KAErB3M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,QAAQ1M,QAAS,SAAAyH,GACxC2D,GAAe,KADnB,UAMRzL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACKvC,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMvB,IAAyB1I,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAACiN,EAAD,CAAsBhK,IAAK+J,EAAGvF,MAAOuF,EAAGrF,gCAAiCA,EAAiCL,mBAAoBA,MAC/KlJ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMrB,IAAuB5I,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAACkN,EAAD,CAAoBjK,IAAK+J,EAAGvF,MAAOuF,EAAGrE,8BAA+BA,EAA+BrB,mBAAoBA,MACxKxH,EAAAC,EAAAC,cAACmN,EAAD,CAAe7F,mBAAoBA,IAClClJ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMnB,IAAsB9I,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAACoN,EAAD,CAAmBnK,IAAK+J,EAAGvF,MAAOuF,EAAG5D,6BAA8BA,EAA8B9B,mBAAoBA,MACnKlJ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMjB,IAAkBhJ,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAACqN,EAAD,CAAQpK,IAAK+J,EAAGvF,MAAOuF,EAAGtD,yBAA0BA,EAA0BpC,mBAAoBA,MAC7IxH,EAAAC,EAAAC,cAACsN,EAAD,CAAYhG,mBAAoBA,IAChCxH,EAAAC,EAAAC,cAACuN,EAAD,CAAUjG,mBAAoBA,KAElCxH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,QAAQ1M,QAAS,SAAAyH,GA3J5D8E,EAAkB,SAAAnF,GAEd,IAAM0E,EAAiBD,EAAiBxE,oBAClC4E,EAAeJ,EAAiBtD,kBAChCyC,EAAiBa,EAAiBjD,oBAClCyE,EAAcxB,EAAiB7C,iBAC/BmD,EAAUN,EAAiBvC,aAC3BgE,EAAczB,EAAiBlC,iBAC/BiB,EAAWiB,EAAiBxB,eA+GlC,OA5GAjD,EAAO0E,eAAehB,WAAWiB,YAAc,EAC/CD,EAAeyB,QAAQ,SAAC9F,EAAGH,GACvB,IAAIkG,GAAU1B,EAAexE,GAAOd,mBAAmBb,GAAKmG,EAAexE,GAAOd,mBAAmBZ,IAAMkG,EAAexE,GAAOvB,kBAAkBF,IAAKiG,EAAexE,GAAOd,mBAAmBX,IAAKmF,EAAetC,qBAAuBoD,EAAexE,GAAON,YAElQI,EAAO0E,eAAehB,WAAWiB,aAAeyB,IAIpDpG,EAAO0E,eAAehB,WAAWkB,SAAW,EAC5CF,EAAeyB,QAAQ,SAAC9F,EAAGH,GACvB,IAAIkG,GAAU1B,EAAexE,GAAOV,gBAAgBV,IAAM4F,EAAexE,GAAOlB,eAAeP,IAAKiG,EAAexE,GAAOV,gBAAgBf,IAAKmF,EAAetC,qBAAuBoD,EAAexE,GAAON,YAE3MI,EAAO0E,eAAehB,WAAWkB,UAAYwB,IAIjDpG,EAAO0E,eAAef,SAASgB,YAAc,EAC7CD,EAAeyB,QAAQ,SAAC9F,EAAGH,GACvB,IAAIkG,IAAY1B,EAAexE,GAAOd,mBAAmBb,GAAKmG,EAAexE,GAAOd,mBAAmBZ,GAAOkG,EAAexE,GAAOvB,kBAAkBJ,GAAKmG,EAAexE,GAAOvB,kBAAkBH,IAAOkG,EAAexE,GAAOd,mBAAmBX,GAAKiG,EAAexE,GAAON,YAE9QI,EAAO0E,eAAef,SAASgB,aAAeyB,IAIlDpG,EAAO0E,eAAef,SAASiB,SAAW,EAC1CF,EAAeyB,QAAQ,SAAC9F,EAAGH,GACvB,IAAIkG,GAAU1B,EAAexE,GAAOV,gBAAgBf,IAAMiG,EAAexE,GAAOV,gBAAgBV,GAAK4F,EAAexE,GAAOlB,eAAeF,IAAM4F,EAAexE,GAAON,YAEtKI,EAAO0E,eAAef,SAASiB,UAAYwB,IAI/CpG,EAAO0E,eAAed,eAAee,YAAc,EACnDD,EAAeyB,QAAQ,SAAC9F,EAAGH,GACvB,IAAIkG,GAAU1B,EAAexE,GAAOd,mBAAmBb,GAAKmG,EAAexE,GAAOd,mBAAmBZ,GAAKkG,EAAexE,GAAON,aAAegE,EAAetC,mBAE9JtB,EAAO0E,eAAed,eAAee,aAAeyB,IAIxDpG,EAAO0E,eAAed,eAAegB,SAAW,EAChDF,EAAeyB,QAAQ,SAAC9F,EAAGH,GACvB,IAAIkG,GAAU1B,EAAexE,GAAOV,gBAAgBV,GAAK4F,EAAexE,GAAON,aAAegE,EAAetC,mBAE7GtB,EAAO0E,eAAed,eAAegB,UAAYwB,IAIrDpG,EAAO6E,aAAanB,WAAa,EACjCmB,EAAasB,QAAQ,SAAC9F,EAAGH,GACrB,IAAIkG,GAAUvB,EAAa3E,GAAOa,eAAiB8D,EAAa3E,GAAOS,WAAYkE,EAAa3E,GAAOW,mBAAoB+C,EAAetC,qBAAuBuD,EAAa3E,GAAOe,cAErLjB,EAAO6E,aAAanB,YAAc0C,IAItCpG,EAAO6E,aAAajB,eAAiB,EACrCiB,EAAasB,QAAQ,SAAC9F,EAAGH,GACrB,IAAIkG,GAAUvB,EAAa3E,GAAOa,cAAgB6C,EAAetC,oBAAsBuD,EAAa3E,GAAOe,cAE3GjB,EAAO6E,aAAajB,gBAAkBwC,IAI1CpG,EAAO6E,aAAalB,SAAW,EAC/BkB,EAAasB,QAAQ,SAAC9F,EAAGH,GACrB,IAAIkG,IAAWvB,EAAa3E,GAAOa,cAAgB8D,EAAa3E,GAAOW,mBAAqBgE,EAAa3E,GAAOS,UAAYkE,EAAa3E,GAAOe,cAEhJjB,EAAO6E,aAAalB,UAAYyC,IAIpCpG,EAAO8E,SAASpB,WAAa,EAC7BuC,EAAYE,QAAQ,SAAC9F,EAAGH,GACpB,IAAIkG,GAAUH,EAAY/F,GAAOwB,WAAWnD,GAAK0H,EAAY/F,GAAOwB,WAAWlD,GAAKyH,EAAY/F,GAAOwB,WAAWjD,EAElHuB,EAAO8E,SAASpB,YAAc0C,IAIlCpG,EAAO+E,QAAQC,MAAQ,EACvBD,EAAQoB,QAAQ,SAAC9F,EAAGH,GAChB,IAAIkG,GAAUrB,EAAQ7E,GAAO8B,OAAOF,QAAUiD,EAAQ7E,GAAO8B,OAAOD,KAEpE/B,EAAO+E,QAAQC,OAASoB,IAI5BpG,EAAOiF,KAAKrB,gBAAkBsC,EAAY7D,gBAAkBuB,EAAetC,mBAG3EtB,EAAOmD,QAAQC,sBAAwBpD,EAAO0E,eAAehB,WAAWiB,YAAc3E,EAAO6E,aAAanB,WAAa1D,EAAO8E,SAASpB,WACvI1D,EAAOmD,QAAQG,oBAAsBtD,EAAO0E,eAAef,SAASgB,YAAc3E,EAAO6E,aAAalB,SAAW3D,EAAO+E,QAAQC,MAChIhF,EAAOmD,QAAQI,0BAA4BvD,EAAO0E,eAAed,eAAee,YAAc3E,EAAO6E,aAAajB,eAAiB5D,EAAOiF,KAAKrB,eAG/I5D,EAAOwD,SAASC,SAASC,WAAa2C,KAAKC,KAAKtG,EAAOmD,QAAQC,uBAAyB,EAAE,OAAS,IAAII,EAASf,gBAAiBe,EAASb,iBAC1I3C,EAAOwD,SAASC,SAASE,SAAW0C,KAAKC,KAAKtG,EAAOmD,QAAQG,qBAAuB,EAAE,OAAS,IAAIE,EAASf,gBAAiBe,EAASb,iBACtI3C,EAAOwD,SAASC,SAASG,eAAiByC,KAAKC,KAAKtG,EAAOmD,QAAQI,2BAA6B,EAAE,OAAS,IAAIC,EAASf,gBAAiBe,EAASb,iBAGlJ3C,EAAOwD,SAASK,WAAWH,YAAeF,EAASf,eAAiBe,EAASX,YAAc7C,EAAOwD,SAASC,SAASC,aAAgBF,EAASb,eAAiBa,EAAST,YAAc/C,EAAOwD,SAASC,SAASC,WAC9M1D,EAAOwD,SAASK,WAAWF,UAAaH,EAASf,eAAiBe,EAASX,YAAc7C,EAAOwD,SAASC,SAASE,WAAcH,EAASb,eAAiBa,EAAST,YAAc/C,EAAOwD,SAASC,SAASE,SAC1M3D,EAAOwD,SAASK,WAAWD,gBAAmBJ,EAASf,eAAiBe,EAASX,YAAc7C,EAAOwD,SAASC,SAASG,iBAAoBJ,EAASb,eAAiBa,EAAST,YAAc/C,EAAOwD,SAASC,SAASG,eAEtNvL,QAAQC,IAAImM,EAAkBzE,GAE9BgE,GAAe,GACRhE,MAoCK,iBC9GTuG,OAjIf,SAAuBrO,GAAO,IAAA0F,EACUC,mBAAS,eADnBC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACnBI,EADmBF,EAAA,GACPG,EADOH,EAAA,GAAAI,EAGwBL,mBAAS,CAACU,OAAGiI,EAAWhI,OAAGgI,EAAW/H,OAAG+H,IAHjErI,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAGnBS,EAHmBR,EAAA,GAGAS,EAHAT,EAAA,GAAAG,EAIkBT,mBAAS,CAACiB,OAAG0H,EAAW/H,OAAG+H,IAJ7C9H,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAInBU,EAJmBN,EAAA,GAIHO,EAJGP,EAAA,GAAAG,EAMYhB,qBANZkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAMnBe,EANmBb,EAAA,GAMNc,EANMd,EAAA,GAAAG,EAOcrB,qBAPdsB,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAOnBuH,EAPmBtH,EAAA,GAOLuH,EAPKvH,EAAA,GAuB1B,OAdAW,oBAAU,WACN5H,EAAMyO,kBAAkB,SAAApG,GASpB,OARAA,EAAMqG,oBAAoB1O,EAAMgI,OAAS,CACrClC,WAAYA,EACZW,kBAAmBA,EACnBK,eAAgBA,EAChBY,YAAaA,EACb6G,aAAcA,GAGXlG,KAEZ,CAACvC,EAAYW,EAAmBK,EAAgBY,EAAa6G,IAG5DlO,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,kBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOV,EAAM2O,6BAA6BtO,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAEnHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOC,QAAQ1G,GAAG,wBACzDtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKK,gBAAfvC,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOlC,EAAI+B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,uBAEnD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOjC,EAAI8B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,uBAEnD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,wBAK1C,aAAf0D,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,gBACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,0BAA0BS,YAAY,uBAEhD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,2BAAf,aACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,4BAA4BS,YAAY,wBAK1D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,sBAAsBS,YAAY,6BAEjH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIqG,EAAgBrG,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,uBAAuBS,YAAY,oCCjBxIwM,OApGf,SAAqB5O,GAAO,IAAA0F,EACoBC,mBAAS,CAACU,EAAG,GAAIC,EAAG,KADxCV,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACjBmJ,EADiBjJ,EAAA,GACDkJ,EADClJ,EAAA,GAAAI,EAEYL,mBAAS,CAAC,CAACoJ,OAAQ,GAAIC,OAAQ,MAF3C/I,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEjBiJ,EAFiBhJ,EAAA,GAELiJ,EAFKjJ,EAAA,GAAAG,EAGUT,mBAAS,GAHnBa,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGjB+I,EAHiB3I,EAAA,GAGN4I,EAHM5I,EAAA,GAiBxB,OAZAoB,oBAAU,WACN5H,EAAMyO,kBAAkB,SAAApG,GAOpB,OANAA,EAAMgH,kBAAkBrP,EAAMgI,OAAS,CACnCsH,gBAAiBT,EACjBI,WAAYA,EACZE,UAAWA,GAGR9G,KAEZ,CAACwG,EAAgBI,EAAYE,IAG5B9O,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,gBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOV,EAAMuP,2BAA2BlP,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAGjHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,OAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,YACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,eAAeoB,SAAU,SAAAoF,GAAC,OAAI2G,EAAkB,SAAAW,GAExE,OADAA,EAAWpJ,EAAI8B,EAAEC,OAAOC,MACjBoH,KACPrN,YAAY,4BAGpB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,eAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,cAAcoB,SAAU,SAAAoF,GAAC,OAAI2G,EAAkB,SAAAW,GAEvE,OADAA,EAAWnJ,EAAI6B,EAAEC,OAAOC,MACjBoH,KACPrN,YAAY,8BAMhC/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,SACC7B,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM6B,IAAY9L,IAAI,SAAC8E,EAAGoF,GAAJ,OACvBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAK+J,EAAG5L,GAAI4L,GAClBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,oBAAoBoB,SAAU,SAAAoF,GACtD,IAAMC,EAASD,EAAEC,OAEjB8G,EAAc,SAAA7G,GAMV,OAJKA,EAAMkF,KAAIlF,EAAMkF,GAAK,CAACwB,OAAQ,GAAIC,OAAQ,KAE/C3G,EAAMkF,GAAGwB,OAAS3G,EAAOC,MAElBA,KAEZjG,YAAY,4BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,eACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,oBAAoBoB,SAAU,SAAAoF,GACtD,IAAMC,EAASD,EAAEC,OAEjB8G,EAAc,SAAA7G,GAKV,OAHKA,EAAMkF,KAAIlF,EAAMkF,GAAK,CAACwB,OAAQ,GAAIC,OAAQ,KAE/C3G,EAAMkF,GAAGyB,OAAS5G,EAAOC,MAClBA,KAEZjG,YAAY,qBAI3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,MAAM1M,QAAS,SAAAyH,GACtChI,QAAQC,IAAI6O,GAEZG,EAAa,SAAAjH,GAAC,OAAIA,EAAI,MAH1B,qBCVjBuH,OA5Ef,SAAqB1P,GAAO,IAAA0F,EACYC,mBAAS,CAAC,CAACgK,WAAY,GAAIC,SAAU,MADjDhK,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACjBmK,EADiBjK,EAAA,GACLkK,EADKlK,EAAA,GAAAI,EAEUL,mBAAS,GAFnBM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEjB+J,EAFiB9J,EAAA,GAEN+J,EAFM/J,EAAA,GAexB,OAXA2B,oBAAU,WACN5H,EAAMyO,kBAAkB,SAAApG,GAMpB,OALAA,EAAM4H,kBAAkBjQ,EAAMgI,OAAS,CACnC6H,WAAYA,EACZE,UAAWA,GAGR1H,KAEZ,CAACwH,EAAYE,IAGZ1P,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iCAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,gBAEAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,0CAA0CE,QAAS,WAAOV,EAAMkQ,2BAA2B7P,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAb,SAGjHH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,SACC7B,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMyC,IAAY1M,IAAI,SAAC8E,EAAGoF,GAAJ,OACvBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAK+J,EAAG5L,GAAI4L,GAClBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,wBAAwBoB,SAAU,SAAAoF,GAC1D,IAAMC,EAASD,EAAEC,OAEjB0H,EAAc,SAAAzH,GAMV,OAJKA,EAAMkF,KAAIlF,EAAMkF,GAAK,CAACoC,WAAY,GAAIC,SAAU,KAErDvH,EAAMkF,GAAGoC,WAAavH,EAAOC,MAEtBA,KAEZjG,YAAY,gCAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GACxD,IAAMC,EAASD,EAAEC,OAEjB0H,EAAc,SAAAzH,GAKV,OAHKA,EAAMkF,KAAIlF,EAAMkF,GAAK,CAACoC,WAAY,GAAIC,SAAU,KAErDvH,EAAMkF,GAAGqC,SAAWxH,EAAOC,MACpBA,KAEZjG,YAAY,uBAI3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,MAAM1M,QAAS,SAAAyH,GACtChI,QAAQC,IAAIyP,GAEZG,EAAa,SAAA7H,GAAC,OAAIA,EAAI,MAH1B,qBCSjBmC,OAxEf,SAAkBtK,GAAO,IAAA0F,EACqBC,mBAAS,IAD9BC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACd6E,EADc3E,EAAA,GACC4E,EADD5E,EAAA,GAAAI,EAEqBL,mBAAS,IAF9BM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEdyE,EAFcxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAG,EAGqBT,mBAAS,IAH9Ba,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGd+J,EAHc3J,EAAA,GAGC4J,EAHD5J,EAAA,GAAAG,EAIiBhB,mBAAS,IAJ1BkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAIdgE,EAJc9D,EAAA,GAID+D,EAJC/D,EAAA,GAAAG,EAKiBrB,mBAAS,IAL1BsB,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAKd6D,EALc5D,EAAA,GAKD6D,EALC7D,EAAA,GAAAG,EAMiBzB,mBAAS,IAN1B0B,EAAA1I,OAAAkH,EAAA,EAAAlH,CAAAyI,EAAA,GAMdiJ,EANchJ,EAAA,GAMDiJ,EANCjJ,EAAA,GAuBrB,OAfAO,oBAAU,WACN5H,EAAMyO,kBAAkB,SAAApG,GAUpB,OATAA,EAAMkI,eAAiB,CACnBhG,cAAeA,EACfE,cAAeA,EACf0F,cAAeA,EACfxF,YAAaA,EACbE,YAAaA,EACbwF,YAAaA,GAGVhI,KAEZ,CAACkC,EAAeE,EAAe0F,EAAexF,EAAaE,EAAawF,IAGvEhQ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIqC,EAAiBrC,EAAEC,OAAOC,QAAQA,MAAOkC,EAAenI,YAAY,8BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIuC,EAAiBvC,EAAEC,OAAOC,QAAQA,MAAOoC,EAAerI,YAAY,6BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIiI,EAAiBjI,EAAEC,OAAOC,QAAQA,MAAO8H,EAAe/N,YAAY,8BAGxI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIyC,EAAezC,EAAEC,OAAOC,QAAQA,MAAOsC,EAAavI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAI2C,EAAe3C,EAAEC,OAAOC,QAAQA,MAAOwC,EAAazI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAImI,EAAenI,EAAEC,OAAOC,QAAQA,MAAOgI,EAAajO,YAAY,iCCkJ1JoO,OA7Mf,SAA0BxQ,GAAO,IAAA0F,EACKC,mBAC9B,CACI8K,gBAAiB,CACbpK,EAAG,GACHC,EAAG,IAEPoK,gBAAiB,GACjBC,qBAAsB,GACtBC,YAAa,CACThB,SAAU,GACVD,WAAY,GACZkB,SAAU,IAEdC,aAAc,GACdC,0BAA2B,GAC3BC,oBAAqB,KAhBApL,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACtBuL,EADsBrL,EAAA,GACXsL,EADWtL,EAAA,GA8B7B,OAVAgC,oBAAU,WACN5H,EAAMyO,kBAAkB,SAAApG,GAKpB,OAJAA,EAAM8I,uBAAyB,CAC3BF,UAAWA,GAGR5I,KAEZ,CAAC4I,IAGA5Q,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,uBAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,4BAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,2BAA2BoB,SAAU,SAAAoF,GAC7D,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAO2I,gBAAgBpK,EAAI+B,EAAOC,MAE3BP,KAEZ1F,YAAY,uBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,4BAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,2BAA2BoB,SAAU,SAAAoF,GAC7D,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAO2I,gBAAgBnK,EAAI8B,EAAOC,MAE3BP,KAEZ1F,YAAY,wBAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,0BAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,yBAAyBoB,SAAU,SAAAoF,GAC9C,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAO4I,gBAAkBtI,EAAOC,MAEzBP,KAEZ1F,YAAY,mBACX/B,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,WAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,8BAA8BoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAO6I,qBAAuBvI,EAAOC,MAE9BP,KAEZ1F,YAAY,wBACX/B,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,cAAd,cACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,kBAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,8BAA8BoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAO8I,YAAYhB,SAAWxH,EAAOC,MAE9BP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,WAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iCAAf,0BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,gCAAgCoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAO8I,YAAYjB,WAAavH,EAAOC,MAEhCP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,WAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,8BAA8BoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAO8I,YAAYC,SAAWzI,EAAOC,MAE9BP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,SAAd,YAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,oCACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,sBAAsBoB,SAAU,SAAAoF,GAC3C,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAOgJ,aAAe1I,EAAOC,MAEtBP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,iBAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gCAAf,kCACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYS,GAAG,+BAA+BoB,SAAU,SAAAoF,GACpD,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAOiJ,0BAA4B3I,EAAOC,MAEnCP,MAGXzH,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KACdhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,SACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,YAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,2BAAf,2BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWS,GAAG,0BAA0BoB,SAAU,SAAAoF,GAC9C,IAAMC,EAASD,EAAEC,OACjB8I,EAAa,SAAApJ,GAGT,OAFAA,EAAOkJ,oBAAsB5I,EAAOC,MAE7BP,KAEZ1F,YAAY,8BC1GxCgP,OAxFf,SAAuBpR,GAAO,IAAA0F,EACUC,mBAChC,CACI0L,QAAS,GACTC,WAAY,GACZC,OAAQ,CAAC,GAAI,MALK3L,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACnB8L,EADmB5L,EAAA,GACP6L,EADO7L,EAAA,GAmB1B,OAVAgC,oBAAU,WACN5H,EAAMyO,kBAAkB,SAAApG,GAKpB,OAJAA,EAAMqJ,oBAAsB,CACxBF,WAAYA,GAGTnJ,KAEZ,CAACmJ,IAGAnR,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAOuJ,QAAUjJ,EAAOC,MAEjBP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAOwJ,WAAalJ,EAAOC,MAEpBP,KAEZ1F,YAAY,yBAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAOyJ,OAAO,GAAKnJ,EAAOC,MAEnBP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAOyJ,OAAO,GAAKnJ,EAAOC,MAEnBP,KAEZ1F,YAAY,gCCIxC4I,OAjFf,SAAiBhL,GAKb,OAJA4H,oBAAU,WACNzH,QAAQC,IAAIJ,EAAM8H,UAIlBzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,oBAAd,aACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,yBAA8BF,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAAA,yCAAiCP,EAAM8H,OAAO6J,OAAOlF,YAAYmF,wBAAwBzG,QAAQ,GAAjG,QAA+G9K,EAAAC,EAAAC,cAAA,WAC/GF,EAAAC,EAAAC,cAAA,0CAAkCP,EAAM8H,OAAO6J,OAAOlF,YAAY6E,WAAWnG,QAAQ,GAArF,UAAqG9K,EAAAC,EAAAC,cAAA,YAGzGF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,yCAAiCP,EAAM8H,OAAO+J,KAAKD,wBAAwBzG,QAAQ,GAAnF,QAAiG9K,EAAAC,EAAAC,cAAA,WACjGF,EAAAC,EAAAC,cAAA,0CAAkCP,EAAM8H,OAAO+J,KAAKP,WAAWnG,QAAQ,GAAvE,UAAuF9K,EAAAC,EAAAC,cAAA,YAG3FF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,yCAAiCP,EAAM8H,OAAOiF,KAAK6E,wBAAwBzG,QAAQ,GAAnF,QAAiG9K,EAAAC,EAAAC,cAAA,WACjGF,EAAAC,EAAAC,cAAA,0CAAkCP,EAAM8H,OAAOiF,KAAKuE,WAAWnG,QAAQ,GAAvE,UAAuF9K,EAAAC,EAAAC,cAAA,YAG3FF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,yBAA8BF,EAAAC,EAAAC,cAAA,WACpCF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOgK,mBAAmBlC,SAASzE,QAAQ,GAAnE,UAAmF9K,EAAAC,EAAAC,cAAA,WACnFF,EAAAC,EAAAC,cAAA,4BAAoBP,EAAM8H,OAAOgK,mBAAmBnC,WAAWxE,QAAQ,GAAvE,UAAuF9K,EAAAC,EAAAC,cAAA,WACvFF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOgK,mBAAmBjB,SAAS1F,QAAQ,GAAnE,UAAmF9K,EAAAC,EAAAC,cAAA,YAGvFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOiK,iBAAiBnC,SAASzE,QAAQ,GAAjE,UAAiF9K,EAAAC,EAAAC,cAAA,WACjFF,EAAAC,EAAAC,cAAA,4BAAoBP,EAAM8H,OAAOiK,iBAAiBpC,WAAWxE,QAAQ,GAArE,UAAqF9K,EAAAC,EAAAC,cAAA,YAGzFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOkK,iBAAiBpC,SAASzE,QAAQ,GAAjE,UAAiF9K,EAAAC,EAAAC,cAAA,YAGrFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,2BAAmBP,EAAM8H,OAAOwD,SAASC,SAAS0G,UAAU9G,QAAQ,GAApE,SAAmF9K,EAAAC,EAAAC,cAAA,YAGvFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,2BAAmBP,EAAM8H,OAAOwD,SAASK,WAAWsG,UAAU9G,QAAQ,GAAtE,QAAoF9K,EAAAC,EAAAC,cAAA,YAGxFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAOoK,iBAAiBb,QAAQc,KAAK,GAAK,IAAMnS,EAAM8H,OAAOoK,iBAAiBb,QAAQc,KAAK,GAAjH,OAAyHnS,EAAM8H,OAAOoK,iBAAiBb,QAAQe,KAAKjH,QAAQ,GAA5K,QAA0L9K,EAAAC,EAAAC,cAAA,WAC1LF,EAAAC,EAAAC,cAAA,2BAAmBP,EAAM8H,OAAOoK,iBAAiBG,YAAYF,KAAK,GAAK,IAAMnS,EAAM8H,OAAOoK,iBAAiBG,YAAYF,KAAK,GAA5H,OAAoInS,EAAM8H,OAAOoK,iBAAiBG,YAAYD,KAAKjH,QAAQ,GAA3L,QAAyM9K,EAAAC,EAAAC,cAAA,WACzMF,EAAAC,EAAAC,cAAA,uBAAeP,EAAM8H,OAAOoK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,IAAMnS,EAAM8H,OAAOoK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAhI,OAAwInS,EAAM8H,OAAOoK,iBAAiBX,OAAO3B,SAASwC,KAAKjH,QAAQ,GAAnM,QAAiN9K,EAAAC,EAAAC,cAAA,WACjNF,EAAAC,EAAAC,cAAA,uBAAeP,EAAM8H,OAAOoK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,IAAMnS,EAAM8H,OAAOoK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAApI,OAA4InS,EAAM8H,OAAOoK,iBAAiBX,OAAO5B,WAAWyC,KAAKjH,QAAQ,GAAzM,QAAuN9K,EAAAC,EAAAC,cAAA,mBC6D5O8N,OAjIf,SAAuBrO,GAAO,IAAA0F,EACUC,mBAAS,eADnBC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACnBI,EADmBF,EAAA,GACPG,EADOH,EAAA,GAAAI,EAGwBL,mBAAS,CAACU,OAAGiI,EAAWhI,OAAGgI,EAAW/H,OAAG+H,IAHjErI,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAGnBS,EAHmBR,EAAA,GAGAS,EAHAT,EAAA,GAAAG,EAIkBT,mBAAS,CAACiB,OAAG0H,EAAW/H,OAAG+H,IAJ7C9H,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAInBU,EAJmBN,EAAA,GAIHO,EAJGP,EAAA,GAAAG,EAMYhB,qBANZkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAMnBe,EANmBb,EAAA,GAMNc,EANMd,EAAA,GAAAG,EAOcrB,qBAPdsB,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAOnBuH,EAPmBtH,EAAA,GAOLuH,EAPKvH,EAAA,GAuB1B,OAdAW,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GASpB,OARAA,EAAMqG,oBAAoB1O,EAAMgI,OAAS,CACrClC,WAAYA,EACZW,kBAAmBA,EACnBK,eAAgBA,EAChBY,YAAaA,EACb6G,aAAcA,GAGXlG,KAEZ,CAACvC,EAAYW,EAAmBK,EAAgBY,EAAa6G,IAG5DlO,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOC,QAAQ1G,GAAG,wBACzDtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKK,gBAAfvC,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOlC,EAAI+B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,uBAEnD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOjC,EAAI8B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,uBAEnD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,8BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,wBAK1C,aAAf0D,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,gBACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,0BAA0BS,YAAY,uBAEhD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,2BAAf,aACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,4BAA4BS,YAAY,wBAK1D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,sBAAsBS,YAAY,6BAEjH/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,wBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIqG,EAAgBrG,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,uBAAuBS,YAAY,oCCMxIqD,OA3Hf,SAA8BzF,GAAO,IAAA0F,EACGC,mBAAS,eADZC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GAC1BI,EAD0BF,EAAA,GACdG,EADcH,EAAA,GAAAI,EAGiBL,mBAAS,CAACU,OAAGiI,EAAWhI,OAAGgI,EAAW/H,OAAG+H,IAH1DrI,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAG1BS,EAH0BR,EAAA,GAGPS,EAHOT,EAAA,GAAAG,EAIWT,mBAAS,CAACiB,OAAG0H,EAAW/H,OAAG+H,IAJtC9H,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAI1BU,EAJ0BN,EAAA,GAIVO,EAJUP,EAAA,GAAAG,EAMKhB,qBANLkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAM1Be,EAN0Bb,EAAA,GAMbc,EANad,EAAA,GAqBjC,OAbAe,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAQpB,OAPAA,EAAMN,oBAAoB/H,EAAMgI,OAAS,CACrClC,WAAYA,EACZW,kBAAmBA,EACnBK,eAAgBA,EAChBY,YAAaA,GAGVW,KAEZ,CAACvC,EAAYW,EAAmBK,EAAgBY,IAG/CrH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,2BAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,KAAKtD,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAAC,OAAIpC,EAAcoC,EAAEC,OAAOC,QAAQ1G,GAAG,yBACzDtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,eAAd,eACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,YAAd,eAKK,gBAAfvC,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOlC,EAAI+B,EAAOC,MACXE,KAEZ5G,GAAG,8BAA8BS,YAAY,uBAEpD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOjC,EAAI8B,EAAOC,MACXE,KAEZ5G,GAAG,8BAA8BS,YAAY,uBAEpD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,+BAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB1B,EAAqB,SAAA6B,GAEjB,OADAA,EAAOhC,EAAI6B,EAAOC,MACXE,KAEZ5G,GAAG,8BAA8BS,YAAY,wBAK3C,aAAf0D,GACEzF,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,gBACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,2BAA2BS,YAAY,uBAEjD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACxBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,4BAAf,aACI9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjBrB,EAAkB,SAAAwB,GAEd,OADAA,EAAO3B,EAAIwB,EAAOC,MACXE,KAEZ5G,GAAG,6BAA6BS,YAAY,wBAK3D/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,4BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,sBAAsBS,YAAY,qCC5DtIoG,OApDf,SAA4BxI,GAAO,IAAA0F,EACiBC,mBAAS,IAD1BC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACxB6M,EADwB3M,EAAA,GACN4M,EADM5M,EAAA,GAAAI,EAEiBL,mBAAS,IAF1BM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAExByM,EAFwBxM,EAAA,GAENyM,EAFMzM,EAAA,GAAAG,EAGWT,mBAAS,IAHpBa,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGxB2C,EAHwBvC,EAAA,GAGTwC,EAHSxC,EAAA,GAiB/B,OAZAoB,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAOpB,OANAA,EAAMY,kBAAkBjJ,EAAMgI,OAAS,CACnCuK,iBAAkBA,EAClBE,iBAAkBA,EAClB1J,cAAeA,GAGZV,KAEZ,CAACkK,EAAkBE,EAAkB1J,IAGpC1I,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,yBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,yBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIqK,EAAoBrK,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,cAAcS,YAAY,mBAE9G/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,2BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIuK,EAAoBvK,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,cAAcS,YAAY,iBAE9G/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GAAC,OAAIa,EAAiBb,EAAEC,OAAOC,QAAQlH,KAAK,SAASQ,GAAG,kBAAkBS,YAAY,6BCmEpIwM,OA1Gf,SAAqB5O,GAAO,IAAA0F,EACoBC,mBAAS,CAACU,EAAG,GAAIC,EAAG,KADxCV,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACjBmJ,EADiBjJ,EAAA,GACDkJ,EADClJ,EAAA,GAAAI,EAEYL,mBAAS,CAAC,CAACoJ,OAAQ,GAAIC,OAAQ,MAF3C/I,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEjBiJ,EAFiBhJ,EAAA,GAELiJ,EAFKjJ,EAAA,GAAAG,EAGUT,mBAAS,GAHnBa,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGjB+I,EAHiB3I,EAAA,GAGN4I,EAHM5I,EAAA,GAiBxB,OAZAoB,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAOpB,OANAA,EAAMgH,kBAAkBrP,EAAMgI,OAAS,CACnCsH,gBAAiBT,EACjBI,WAAYA,EACZE,UAAWA,GAGR9G,KAEZ,CAACwG,EAAgBI,EAAYE,IAG5B9O,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,iBAKJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,OAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,YACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,gBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,eAAeoB,SAAU,SAAAoF,GAAC,OAAI2G,EAAkB,SAAAW,GAExE,OADAA,EAAWpJ,EAAI8B,EAAEC,OAAOC,MACjBoH,KACPrN,YAAY,4BAGpB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,eAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,cAAcoB,SAAU,SAAAoF,GAAC,OAAI2G,EAAkB,SAAAW,GAEvE,OADAA,EAAWnJ,EAAI6B,EAAEC,OAAOC,MACjBoH,KACPrN,YAAY,iCAS5C/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,SACC7B,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM6B,IAAY9L,IAAI,SAAC8E,EAAGoF,GAAJ,OACvBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAK+J,EAAG5L,GAAI4L,GAClBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,oBAAoBoB,SAAU,SAAAoF,GACtD,IAAMC,EAASD,EAAEC,OAEjB8G,EAAc,SAAA7G,GAMV,OAJKA,EAAMkF,KAAIlF,EAAMkF,GAAK,CAACwB,OAAQ,GAAIC,OAAQ,KAE/C3G,EAAMkF,GAAGwB,OAAS3G,EAAOC,MAElBA,KAEZjG,YAAY,4BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,qBAAf,eACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,oBAAoBoB,SAAU,SAAAoF,GACtD,IAAMC,EAASD,EAAEC,OAEjB8G,EAAc,SAAA7G,GAKV,OAHKA,EAAMkF,KAAIlF,EAAMkF,GAAK,CAACwB,OAAQ,GAAIC,OAAQ,KAE/C3G,EAAMkF,GAAGyB,OAAS5G,EAAOC,MAClBA,KAEZjG,YAAY,qBAI3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,MAAM1M,QAAS,SAAAyH,GACtChI,QAAQC,IAAI6O,GAEZG,EAAa,SAAAjH,GAAC,OAAIA,EAAI,MAH1B,qBCMjBuH,OAlGf,SAAqB1P,GAAO,IAAA0F,EACYC,mBAAS,CAAC,CAACgK,WAAY,GAAIC,SAAU,MADjDhK,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACjBmK,EADiBjK,EAAA,GACLkK,EADKlK,EAAA,GAAAI,EAEkBL,mBAAS,IAF3BM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEjB2M,EAFiB1M,EAAA,GAEF2M,EAFE3M,EAAA,GAAAG,EAGUT,mBAAS,GAHnBa,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGjB2J,EAHiBvJ,EAAA,GAGNwJ,EAHMxJ,EAAA,GAkBxB,OAbAoB,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAQpB,OANAA,EAAM4H,kBAAkBjQ,EAAMgI,OAAS,CACnC6H,WAAYA,EACZ8C,cAAeA,EACf5C,UAAWA,GAGR1H,KAEZ,CAACwH,EAAY8C,EAAe5C,IAG3B1P,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,iBAKJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GACxD,IAAIC,EAASD,EAAEC,OAEfwK,EAAiB,SAAAD,GAGb,OAFgBvK,EAAOC,SAI5BjG,YAAY,0BAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,SACC7B,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMyC,IAAY1M,IAAI,SAAC8E,EAAGoF,GAAJ,OACvBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAK+J,EAAG5L,GAAI4L,GAClBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,wBAAwBoB,SAAU,SAAAoF,GAC1D,IAAMC,EAASD,EAAEC,OAEjB0H,EAAc,SAAAzH,GAMV,OAJKA,EAAMkF,KAAIlF,EAAMkF,GAAK,CAACoC,WAAY,GAAIC,SAAU,KAErDvH,EAAMkF,GAAGoC,WAAavH,EAAOC,MAEtBA,KAEZjG,YAAY,gCAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GACxD,IAAMC,EAASD,EAAEC,OAEjB0H,EAAc,SAAAzH,GAKV,OAHKA,EAAMkF,KAAIlF,EAAMkF,GAAK,CAACoC,WAAY,GAAIC,SAAU,KAErDvH,EAAMkF,GAAGqC,SAAWxH,EAAOC,MACpBA,KAEZjG,YAAY,uBAI3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,QACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,MAAM1M,QAAS,SAAAyH,GACtChI,QAAQC,IAAIyP,GAEZG,EAAa,SAAA7H,GAAC,OAAIA,EAAI,MAH1B,uBCwCzBoB,OA3Hf,SAA2BvJ,GAAO,IAAA0F,EACcC,mBAAS,CAACoJ,OAAQ,GAAI8D,MAAO,GAAIC,MAAO,GAAIC,UAAW,KADrEnN,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACvBsN,EADuBpN,EAAA,GACPqN,EADOrN,EAAA,GAAAI,EAEoBL,mBAAS,CAACoJ,OAAQ,GAAI8D,MAAO,GAAIE,UAAW,KAFhE9M,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEvBkN,EAFuBjN,EAAA,GAEJkN,EAFIlN,EAAA,GAe9B,OAXA2B,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAMpB,OALAA,EAAMqB,iBAAmB,CACrBsJ,eAAgBA,EAChBE,kBAAmBA,GAGhB7K,KAEZ,CAAC2K,EAAgBE,IAGhB7S,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,wBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,oBACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB6K,EAAkB,SAAA1K,GAEd,OADAA,EAAOwG,OAAS3G,EAAOC,MAChBE,KAEZ5G,GAAG,mBAAmBS,YAAY,qBAEzC/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB6K,EAAkB,SAAA1K,GAEd,OADAA,EAAOsK,MAAQzK,EAAOC,MACfE,KAEZ5G,GAAG,mBAAmBS,YAAY,qBAEzC/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB6K,EAAkB,SAAA1K,GAEd,OADAA,EAAOuK,MAAQ1K,EAAOC,MACfE,KAEZ5G,GAAG,mBAAmBS,YAAY,sBAI7C/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,KAAK9H,UAAU,cACrBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB6K,EAAkB,SAAA1K,GAEd,OADAA,EAAOwK,UAAY3K,EAAOC,MACnBE,KAEZ5G,GAAG,mBAAmBS,YAAY,wBAMrD/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,uBACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB+K,EAAqB,SAAA5K,GAEjB,OADAA,EAAOwG,OAAS3G,EAAOC,MAChBE,KAEZ5G,GAAG,mBAAmBS,YAAY,qBAEzC/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB+K,EAAqB,SAAA5K,GAEjB,OADAA,EAAOsK,MAAQzK,EAAOC,MACfE,KAEZ5G,GAAG,mBAAmBS,YAAY,sBAI7C/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,KAAK9H,UAAU,cACrBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OACjB+K,EAAqB,SAAA5K,GAEjB,OADAA,EAAOwK,UAAY3K,EAAOC,MACnBE,KAEZ5G,GAAG,mBAAmBS,YAAY,6BCqE9DgR,OAnLf,SAA8BpT,GAAO,IAAA0F,EACqBC,mBAClD,CACI0N,YAAa,GACbC,WAAY,GACZC,gBAAiB,GACjBC,eAAgB,GAChBC,gBAAiB,GACjBC,sBAAuB,GACvBC,QAAS,CACL,CACIC,qBAAsB,GACtBC,cAAe,GACfC,eAAgB,OAbClO,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GAC1BqO,EAD0BnO,EAAA,GACLoO,EADKpO,EAAA,GAAAI,EAkBOL,mBAAS,GAlBhBM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAkB1BiO,EAlB0BhO,EAAA,GAkBZiO,EAlBYjO,EAAA,GA8BjC,OAVA2B,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAKpB,OAJAA,EAAM0L,oBAAoB/T,EAAMgI,OAAS,CACrC+L,oBAAqBA,GAGlB1L,KAEZ,CAAC0L,IAGA1T,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,2BAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAGnB,OAFAA,EAAOuL,YAAcjL,EAAOC,MAErBP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAGnB,OAFAA,EAAOwL,WAAalL,EAAOC,MAEpBP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAGnB,OAFAA,EAAOyL,gBAAkBnL,EAAOC,MAEzBP,KAEZ1F,YAAY,4BAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAGnB,OAFAA,EAAO0L,eAAiBpL,EAAOC,MAExBP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAGnB,OAFAA,EAAO2L,gBAAkBrL,EAAOC,MAEzBP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,6BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAGnB,OAFAA,EAAO4L,sBAAwBtL,EAAOC,MAE/BP,KAEZ1F,YAAY,4BAIvB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,WACC7B,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM2G,IAAe5Q,IAAI,SAAC8E,EAAGoF,GAAJ,OAC1BlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAK+J,GACXlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,4BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAMnB,OAJKA,EAAO6L,QAAQpG,KAAIzF,EAAO6L,QAAQpG,GAAK,CAACqG,qBAAsB,GAAIC,cAAe,GAAIC,eAAgB,KAE1GhM,EAAO6L,QAAQpG,GAAGqG,qBAAuBxL,EAAOC,MAEzCP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAMnB,OAJKA,EAAO6L,QAAQpG,KAAIzF,EAAO6L,QAAQpG,GAAK,CAACqG,qBAAsB,GAAIC,cAAe,GAAIC,eAAgB,KAE1GhM,EAAO6L,QAAQpG,GAAGsG,cAAgBzL,EAAOC,MAElCP,KAEZ1F,YAAY,2BAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GACnD,IAAMC,EAASD,EAAEC,OACjB4L,EAAuB,SAAAlM,GAMnB,OAJKA,EAAO6L,QAAQpG,KAAIzF,EAAO6L,QAAQpG,GAAK,CAACqG,qBAAsB,GAAIC,cAAe,GAAIC,eAAgB,KAE1GhM,EAAO6L,QAAQpG,GAAGuG,eAAiB1L,EAAOC,MAEnCP,KAEZ1F,YAAY,gCAOnC/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,MAAM1M,QAAS,SAAAyH,GACtChI,QAAQC,IAAI6T,GAEZC,EAAgB,SAAA/L,GAAC,OAAIA,EAAI,MAH7B,wBC7EjBK,OAzFf,SAA4BxI,GAAO,IAAA0F,EACeC,mBAAS,CACnDwO,aAAc,KACdC,UAAW,OACXC,YAAa,KAJczO,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACxB4O,EADwB1O,EAAA,GACP2O,EADO3O,EAAA,GA0B/B,OAnBAgC,oBAAU,WACN2M,EAAmB,SAAAhM,GAMf,MAL6B,OAAxBA,EAAO4L,aAAwB5L,EAAO8L,YAAc,cACvB,MAAxB9L,EAAO4L,aAAuB5L,EAAO8L,YAAc,YAC3B,MAAxB9L,EAAO4L,aAAuB5L,EAAO8L,YAAc,eAC3B,MAAxB9L,EAAO4L,eAAuB5L,EAAO8L,YAAc,aAEtD1V,OAAAwE,EAAA,EAAAxE,CAAA,GAAI4J,MAEhB,IAEHX,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAGpB,OAFAA,EAAMiM,gBAAkBA,EAEjBjM,KAEZ,CAACiM,IAGAjU,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,eAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GACd,IAAMC,EAASD,EAAEC,OAEjBmM,EAAmB,SAAAhM,GAQf,OAPAA,EAAO4L,aAAe/L,EAAOC,MAEA,OAAxBE,EAAO4L,aAAwB5L,EAAO8L,YAAc,cACvB,MAAxB9L,EAAO4L,aAAuB5L,EAAO8L,YAAc,YAC3B,MAAxB9L,EAAO4L,aAAuB5L,EAAO8L,YAAc,eAC3B,MAAxB9L,EAAO4L,eAAuB5L,EAAO8L,YAAc,aAEtD1V,OAAAwE,EAAA,EAAAxE,CAAA,GAAI4J,MAEpBpH,KAAK,SAASQ,GAAG,eAChBtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,OAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GACd,IAAMC,EAASD,EAAEC,OAEjBmM,EAAmB,SAAAhM,GAEf,OADAA,EAAO6L,UAAYhM,EAAOC,MACnBE,KAEhBpH,KAAK,SAASQ,GAAG,eAChBtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,QAAd,QACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,QAAd,UAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,sBAAf,eACA9E,EAAAC,EAAAC,cAAA,SAAI+T,EAAgBD,sBCL7C/J,OAxEf,SAAkBtK,GAAO,IAAA0F,EACqBC,mBAAS,IAD9BC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACd6E,EADc3E,EAAA,GACC4E,EADD5E,EAAA,GAAAI,EAEqBL,mBAAS,IAF9BM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEdyE,EAFcxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAG,EAGqBT,mBAAS,IAH9Ba,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGd+J,EAHc3J,EAAA,GAGC4J,EAHD5J,EAAA,GAAAG,EAIiBhB,mBAAS,IAJ1BkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAIdgE,EAJc9D,EAAA,GAID+D,EAJC/D,EAAA,GAAAG,EAKiBrB,mBAAS,IAL1BsB,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAKd6D,EALc5D,EAAA,GAKD6D,EALC7D,EAAA,GAAAG,EAMiBzB,mBAAS,IAN1B0B,EAAA1I,OAAAkH,EAAA,EAAAlH,CAAAyI,EAAA,GAMdiJ,EANchJ,EAAA,GAMDiJ,EANCjJ,EAAA,GAuBrB,OAfAO,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAUpB,OATAA,EAAMkI,eAAiB,CACnBhG,cAAeA,EACfE,cAAeA,EACf0F,cAAeA,EACfxF,YAAaA,EACbE,YAAaA,EACbwF,YAAaA,GAGVhI,KAEZ,CAACkC,EAAeE,EAAe0F,EAAexF,EAAaE,EAAawF,IAGvEhQ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIqC,EAAiBrC,EAAEC,OAAOC,QAAQA,MAAOkC,EAAenI,YAAY,8BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIuC,EAAiBvC,EAAEC,OAAOC,QAAQA,MAAOoC,EAAerI,YAAY,6BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIiI,EAAiBjI,EAAEC,OAAOC,QAAQA,MAAO8H,EAAe/N,YAAY,8BAGxI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIyC,EAAezC,EAAEC,OAAOC,QAAQA,MAAOsC,EAAavI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAI2C,EAAe3C,EAAEC,OAAOC,QAAQA,MAAOwC,EAAazI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAImI,EAAenI,EAAEC,OAAOC,QAAQA,MAAOgI,EAAajO,YAAY,iCCc1JgP,OA1Ef,SAAuBpR,GAAO,IAAA0F,EACUC,mBAChC,CACI6O,YAAa,GACbC,KAAM,GACNC,OAAQ,KALU9O,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACnB8L,EADmB5L,EAAA,GACP6L,EADO7L,EAAA,GAmB1B,OAVAgC,oBAAU,WACN5H,EAAMsS,kBAAkB,SAAAjK,GAKpB,OAJAA,EAAMqJ,oBAAsB,CACxBF,WAAYA,GAGTnJ,KAEZ,CAACmJ,IAGAnR,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAO0M,YAAcpM,EAAOC,MAErBP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAO2M,KAAOrM,EAAOC,MAEdP,KAEZ1F,YAAY,wBAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAO4M,OAAStM,EAAOC,MAEhBP,KAEZ1F,YAAY,gCC4BxC4I,OA3Ff,SAAiBhL,GAKb,OAJA4H,oBAAU,WACNzH,QAAQC,IAAIJ,EAAM8H,UAIlBzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,0BAA+BF,EAAAC,EAAAC,cAAA,WACrCF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO6J,OAAOgD,SAASC,OAAOzJ,QAAQ,GAA5D,SAA2E9K,EAAAC,EAAAC,cAAA,WAC3EF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAO6J,OAAOgD,SAASF,KAAKtJ,QAAQ,GAAxD,UAAqE9K,EAAAC,EAAAC,cAAA,WACrEF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO6J,OAAOgD,SAASD,OAAOvJ,QAAQ,GAA5D,UAAyE9K,EAAAC,EAAAC,cAAA,YAG7EF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,iCAAsCF,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO0E,eAAemI,SAASC,OAAOzJ,QAAQ,GAApE,SAAmF9K,EAAAC,EAAAC,cAAA,WACnFF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAO0E,eAAemI,SAASF,KAAKtJ,QAAQ,GAAhE,UAA6E9K,EAAAC,EAAAC,cAAA,WAC7EF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO0E,eAAemI,SAASD,OAAOvJ,QAAQ,GAApE,UAAiF9K,EAAAC,EAAAC,cAAA,YAGrFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,+BAAoCF,EAAAC,EAAAC,cAAA,WAC1CF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO6E,aAAagI,SAASC,OAAOzJ,QAAQ,GAAlE,SAAiF9K,EAAAC,EAAAC,cAAA,WACjFF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAO6E,aAAagI,SAASF,KAAKtJ,QAAQ,GAA9D,UAA2E9K,EAAAC,EAAAC,cAAA,WAC3EF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO6E,aAAagI,SAASD,OAAOvJ,QAAQ,GAAlE,UAA+E9K,EAAAC,EAAAC,cAAA,YAGnFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,wBAA6BF,EAAAC,EAAAC,cAAA,WACnCF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO+J,KAAK8C,SAASC,OAAOzJ,QAAQ,GAA1D,SAAyE9K,EAAAC,EAAAC,cAAA,WACzEF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAO+J,KAAK8C,SAASF,KAAKtJ,QAAQ,GAAtD,UAAmE9K,EAAAC,EAAAC,cAAA,WACnEF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO+J,KAAK8C,SAASD,OAAOvJ,QAAQ,GAA1D,UAAuE9K,EAAAC,EAAAC,cAAA,YAG3EF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,uBAA4BF,EAAAC,EAAAC,cAAA,WAClCF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAOiF,KAAK4H,SAASC,OAAOzJ,QAAQ,GAA1D,SAAyE9K,EAAAC,EAAAC,cAAA,WACzEF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAOiF,KAAK4H,SAASF,KAAKtJ,QAAQ,GAAtD,UAAmE9K,EAAAC,EAAAC,cAAA,WACnEF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAOiF,KAAK4H,SAASD,OAAOvJ,QAAQ,GAA1D,UAAuE9K,EAAAC,EAAAC,cAAA,YAG3EF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,8BAAmCF,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAOiG,YAAY4G,SAASC,OAAOzJ,QAAQ,GAAjE,SAAgF9K,EAAAC,EAAAC,cAAA,WAChFF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAOiG,YAAY4G,SAASF,KAAKtJ,QAAQ,GAA7D,UAA0E9K,EAAAC,EAAAC,cAAA,WAC1EF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAOiG,YAAY4G,SAASD,OAAOvJ,QAAQ,GAAjE,UAA8E9K,EAAAC,EAAAC,cAAA,YAGlFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,kCAAuCF,EAAAC,EAAAC,cAAA,WAC7CF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO+M,gBAAgBF,SAASC,OAAOzJ,QAAQ,GAArE,SAAoF9K,EAAAC,EAAAC,cAAA,WACpFF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAO+M,gBAAgBF,SAASF,KAAKtJ,QAAQ,GAAjE,UAA8E9K,EAAAC,EAAAC,cAAA,WAC9EF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAO+M,gBAAgBF,SAASD,OAAOvJ,QAAQ,GAArE,UAAkF9K,EAAAC,EAAAC,cAAA,YAGtFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,oBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,4BAAoBP,EAAM8H,OAAOwD,SAASwJ,WAAWvJ,SAASJ,QAAQ,GAAtE,SAAqF9K,EAAAC,EAAAC,cAAA,YAGzFF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,eACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,4BAAoBP,EAAM8H,OAAOwD,SAASwJ,WAAWnJ,WAAWR,QAAQ,GAAxE,QAAsF9K,EAAAC,EAAAC,cAAA,YAG1FF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,6BAAqBP,EAAM8H,OAAOoK,iBAAiBsC,YAAYO,MAAM5J,QAAQ,GAA7E,QAA2F9K,EAAAC,EAAAC,cAAA,WAC3FF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAOoK,iBAAiBuC,KAAKM,MAAM5J,QAAQ,GAA/D,QAA6E9K,EAAAC,EAAAC,cAAA,WAC7EF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAOoK,iBAAiBwC,OAAOK,MAAM5J,QAAQ,GAAnE,QAAiF9K,EAAAC,EAAAC,cAAA,mBCuOtGyU,OApTf,SAAehV,GAAO,IAAA0F,EACUC,mBAAS,CACjCsP,WAAY,GACZlM,cAAe,GACfmM,YAAa,CACTC,GAAI,eACJC,OAAQ,cAEZjB,aAAc,IACdkB,iBAAkB,IAClBC,YAAa,MACbC,iBAAkB,CACdC,iBAAkB,KAClBC,mBAAoB,IACpBC,aAAc,IACdC,gBAAiB,KACjBC,eAAgB,KAEpBC,uBAAwB,CACpBC,MAAO,CACH,CACIjM,KAAM,GACNqD,MAAO,QAtBLtH,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACXoC,EADWlC,EAAA,GACHmQ,EADGnQ,EAAA,GAAAI,EA4BgBL,mBAAS,GA5BzBM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GA4BXgQ,EA5BW/P,EAAA,GA4BAgQ,EA5BAhQ,EAAA,GAwClB,OAVA2B,oBAAU,WACN5H,EAAMkW,iBAAiB,SAAA7N,GAGnB,OAFAA,EAAM8N,YAAYnW,EAAMgI,OAASF,EAE1BO,IAGXlI,QAAQC,IAAIJ,EAAMoW,cAAcD,cACjC,CAACrO,IAGAzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,UAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,kBACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,mBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOmN,WAAa7M,EAAOC,MACpB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOiN,WAAanN,EAAOmN,WAAY9T,KAAK,SAASQ,GAAG,GAAGS,YAAY,MAE1K/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOiB,cAAgBX,EAAOC,MACvB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOe,cAAgBjB,EAAOiB,cAAe5H,KAAK,SAASQ,GAAG,GAAGS,YAAY,OAIpL/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAON,OANAA,EAAOoN,YAAYC,GAAK/M,EAAOC,MAEV,iBAAjBD,EAAOC,MAA0BP,EAAOoN,YAAYE,OAAS,aACvC,iBAAjBhN,EAAOC,MAA0BP,EAAOoN,YAAYE,OAAS,aAC5C,iBAAjBhN,EAAOC,QAA0BP,EAAOoN,YAAYE,OAAS,cAE/DzW,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOkN,YAAYC,GAAKrN,EAAOoN,YAAYC,GAAIxT,GAAG,IAC7ItB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,gBACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,gBACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,kBAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,wBACA9E,EAAAC,EAAAC,cAAA,SAAIP,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOkN,YAAYE,OAAStN,EAAOoN,YAAYE,UAIhJ/U,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOqM,aAAe/L,EAAOC,MACtB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOmM,aAAerM,EAAOqM,aAAcxS,GAAG,IACzItB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,OAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,0BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOuN,iBAAmBjN,EAAOC,MAC1B1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOqN,iBAAmBvN,EAAOuN,iBAAkB1T,GAAG,IACjJtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,SAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,KAAK9H,UAAU,cACrBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOwN,YAAclN,EAAOC,MACrB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOsN,YAAcxN,EAAOwN,YAAa3T,GAAG,IACvItB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,OAAd,OACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,WAOpBhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,oBACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,yBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBC,iBAAmBpN,EAAOC,MAC3C1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOuN,iBAAiBC,iBAAmB1N,EAAOyN,iBAAiBC,iBAAkB7T,GAAG,IACnLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,8BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBE,mBAAqBrN,EAAOC,MAC7C1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOuN,iBAAiBE,mBAAqB3N,EAAOyN,iBAAiBE,mBAAoB9T,GAAG,IACvLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,QAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBG,aAAetN,EAAOC,MACvC1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOuN,iBAAiBG,aAAe5N,EAAOyN,iBAAiBG,aAAc/T,GAAG,IAC3KtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,OAAd,OACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBI,gBAAkBvN,EAAOC,MAC1C1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOuN,iBAAiBI,gBAAkB7N,EAAOyN,iBAAiBI,gBAAiBhU,GAAG,IACjLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBK,eAAiBxN,EAAOC,MACzC1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAShI,EAAMoW,cAAcD,YAAYnW,EAAMgI,OAAOuN,iBAAiBK,eAAiB9N,EAAOyN,iBAAiBK,eAAgBjU,GAAG,IAC/KtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,WAOpBhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,0BACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACHnF,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM0I,IAAY3S,IAAI,SAAC8E,EAAGoF,GAAJ,OACvBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,EAAC1B,IAAK+J,EAAG5L,GAAI4L,GAClBlN,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,yBAAf,gBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,wBAAwBoB,SAAU,SAAAoF,GAC1D,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAA1N,GAKN,OAHMA,EAAMwN,uBAAuBC,MAAMvI,KAAIlF,EAAMwN,uBAAuBC,MAAMvI,GAAK,CAAC1D,KAAM,GAAIqD,MAAO,KAEvG7E,EAAMwN,uBAAuBC,MAAMvI,GAAG1D,KAAOzB,EAAOC,MAC7CA,KAEZjG,YAAY,gCAEnB/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKsO,IAAI,IAAIhP,UAAU,cACnBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,UACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GACxD,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAA1N,GAKN,OAHMA,EAAMwN,uBAAuBC,MAAMvI,KAAIlF,EAAMwN,uBAAuBC,MAAMvI,GAAK,CAAC1D,KAAM,GAAIqD,MAAO,KAEvG7E,EAAMwN,uBAAuBC,MAAMvI,GAAGL,MAAQ9E,EAAOC,MAC9CA,KAEZjG,YAAY,uBAI3B/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,MAAM1M,QAAS,SAAAyH,GACtC8N,EAAa,SAAA9N,GAAC,OAAIA,EAAI,MAD1B,8BCtDzBkO,OAjPf,SAAqBrW,GAAO,IAAA0F,EACIC,mBAAS,CACjC2Q,YAAa,GACbC,aAAc,GACdC,YAAa,GACbtB,YAAa,CACTC,GAAI,eACJC,OAAQ,cAEZjB,aAAc,IACdsC,iBAAkB,GAClBlB,iBAAkB,CACdC,iBAAkB,KAClBC,mBAAoB,IACpBC,aAAc,IACdC,gBAAiB,KACjBC,eAAgB,OAhBAhQ,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACjBoC,EADiBlC,EAAA,GACTmQ,EADSnQ,EAAA,GA8BxB,OAVAgC,oBAAU,WACN5H,EAAMkW,iBAAiB,SAAA7N,GAGnB,OAFAA,EAAMqO,iBAAmB5O,EAElBO,IAGXlI,QAAQC,IAAIJ,EAAMoW,cAAcM,mBACjC,CAAC5O,IAGAzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,iBAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,kBACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOwO,YAAclO,EAAOC,MACrB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOsO,YAAcxO,EAAOwO,YAAanV,KAAK,SAASQ,GAAG,GAAGS,YAAY,MAEtL/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyO,aAAenO,EAAOC,MACtB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOuO,aAAezO,EAAOyO,aAAcpV,KAAK,SAASQ,GAAG,GAAGS,YAAY,MAExL/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,aACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAO0O,YAAcpO,EAAOC,MACrB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOwO,YAAc1O,EAAO0O,YAAarV,KAAK,SAASQ,GAAG,GAAGS,YAAY,OAI1L/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAON,OANAA,EAAOoN,YAAYC,GAAK/M,EAAOC,MAEV,iBAAjBD,EAAOC,MAA0BP,EAAOoN,YAAYE,OAAS,aACvC,iBAAjBhN,EAAOC,MAA0BP,EAAOoN,YAAYE,OAAS,aAC5C,iBAAjBhN,EAAOC,QAA0BP,EAAOoN,YAAYE,OAAS,cAE/DzW,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOkN,YAAYC,GAAKrN,EAAOoN,YAAYC,GAAIxT,GAAG,IACvJtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,gBACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,gBACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,gBAAd,kBAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,wBACA9E,EAAAC,EAAAC,cAAA,SAAIP,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOkN,YAAYE,OAAStN,EAAOoN,YAAYE,UAI1J/U,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,iBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOqM,aAAe/L,EAAOC,MACtB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOmM,aAAerM,EAAOqM,aAAcxS,GAAG,IACnJtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,OAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW6B,SAAU,SAAAoF,GACjB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAO2O,iBAAmBrO,EAAOC,MAC1B1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOyO,iBAAmB3O,EAAO2O,iBAAkB9U,GAAG,SAM/KtB,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,oBACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,yBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBC,iBAAmBpN,EAAOC,MAC3C1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOuN,iBAAiBC,iBAAmB1N,EAAOyN,iBAAiBC,iBAAkB7T,GAAG,IAC7LtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,8BACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBE,mBAAqBrN,EAAOC,MAC7C1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOuN,iBAAiBE,mBAAqB3N,EAAOyN,iBAAiBE,mBAAoB9T,GAAG,IACjMtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,QAKZhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,oBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBG,aAAetN,EAAOC,MACvC1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOuN,iBAAiBG,aAAe5N,EAAOyN,iBAAiBG,aAAc/T,GAAG,IACrLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,OAAd,OACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,wBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBI,gBAAkBvN,EAAOC,MAC1C1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOuN,iBAAiBI,gBAAkB7N,EAAOyN,iBAAiBI,gBAAiBhU,GAAG,IAC3LtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,QAGRhI,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,IAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAY6B,SAAU,SAAAoF,GAClB,IAAMC,EAASD,EAAEC,OAEjB2N,EAAU,SAAAjO,GAEN,OADAA,EAAOyN,iBAAiBK,eAAiBxN,EAAOC,MACzC1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAShI,EAAMoW,cAAcM,iBAAiB1W,EAAMgI,OAAOuN,iBAAiBK,eAAiB9N,EAAOyN,iBAAiBK,eAAgBjU,GAAG,IACzLtB,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,KAAd,KACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,MACAhI,EAAAC,EAAAC,cAAA,UAAQ8H,MAAM,MAAd,gBC7J7BiC,OAxEf,SAAkBtK,GAAO,IAAA0F,EACqBC,mBAAS,IAD9BC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACd6E,EADc3E,EAAA,GACC4E,EADD5E,EAAA,GAAAI,EAEqBL,mBAAS,IAF9BM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAEdyE,EAFcxE,EAAA,GAECyE,EAFDzE,EAAA,GAAAG,EAGqBT,mBAAS,IAH9Ba,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAGd+J,EAHc3J,EAAA,GAGC4J,EAHD5J,EAAA,GAAAG,EAIiBhB,mBAAS,IAJ1BkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAIdgE,EAJc9D,EAAA,GAID+D,EAJC/D,EAAA,GAAAG,EAKiBrB,mBAAS,IAL1BsB,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAKd6D,EALc5D,EAAA,GAKD6D,EALC7D,EAAA,GAAAG,EAMiBzB,mBAAS,IAN1B0B,EAAA1I,OAAAkH,EAAA,EAAAlH,CAAAyI,EAAA,GAMdiJ,EANchJ,EAAA,GAMDiJ,EANCjJ,EAAA,GAuBrB,OAfAO,oBAAU,WACN5H,EAAMkW,iBAAiB,SAAA7N,GAUnB,OATAA,EAAMkI,eAAiB,CACnBhG,cAAeA,EACfE,cAAeA,EACf0F,cAAeA,EACfxF,YAAaA,EACbE,YAAaA,EACbwF,YAAaA,GAGVhI,KAEZ,CAACkC,EAAeE,EAAe0F,EAAexF,EAAaE,EAAawF,IAGvEhQ,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,aAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIqC,EAAiBrC,EAAEC,OAAOC,QAAQA,MAAOkC,EAAenI,YAAY,8BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIuC,EAAiBvC,EAAEC,OAAOC,QAAQA,MAAOoC,EAAerI,YAAY,6BAEpI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,kBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,iBAAiBoB,SAAU,SAAAoF,GAAC,OAAIiI,EAAiBjI,EAAEC,OAAOC,QAAQA,MAAO8H,EAAe/N,YAAY,8BAGxI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAIyC,EAAezC,EAAEC,OAAOC,QAAQA,MAAOsC,EAAavI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAI2C,EAAe3C,EAAEC,OAAOC,QAAQA,MAAOwC,EAAazI,YAAY,yBAErI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,IAAItD,UAAU,cAClBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,uBAAf,sBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,sBAAsBoB,SAAU,SAAAoF,GAAC,OAAImI,EAAenI,EAAEC,OAAOC,QAAQA,MAAOgI,EAAajO,YAAY,iCC2E1JgP,OAvIf,SAAuBpR,GAAO,IAAA0F,EACUC,mBAChC,CACI6O,YAAa,GACbC,KAAM,GACNkC,IAAK,CACDC,aAAc,GACdC,aAAc,GACdC,aAAc,IAElBC,MAAO,GACPC,SAAU,KAXQpR,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACnB8L,EADmB5L,EAAA,GACP6L,EADO7L,EAAA,GAuB1B,OARAgC,oBAAU,WACN5H,EAAMkW,iBAAiB,SAAA7N,GAGnB,OAFAA,EAAMqJ,oBAAsBF,EAErBnJ,KAEZ,CAACmJ,IAGAnR,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,mBAGJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,qBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAO0M,YAAcpM,EAAOC,MAErB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAc1E,oBAAsB1R,EAAMoW,cAAc1E,oBAAoB8C,YAAchD,EAAWgD,YAAapS,YAAY,wBAElJ/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK+V,KAAK,IAAIzW,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,cACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAO2M,KAAOrM,EAAOC,MAEd1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAc1E,oBAAsB1R,EAAMoW,cAAc1E,oBAAoB+C,KAAOjD,EAAWiD,KAAMrS,YAAY,2BAKhJ/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,qBAAd,OACAH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAO6O,IAAI,cAAgBvO,EAAOC,MAE3B1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAc1E,oBAAoBiF,IAAM3W,EAAMoW,cAAc1E,oBAAoBiF,IAAI,cAAgBnF,EAAWmF,IAAI,cAAevU,YAAY,wBAElK/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAO6O,IAAI,cAAgBvO,EAAOC,MAE3B1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAc1E,oBAAoBiF,IAAM3W,EAAMoW,cAAc1E,oBAAoBiF,IAAI,cAAgBnF,EAAWmF,IAAI,cAAevU,YAAY,wBAElK/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,uBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAO6O,IAAI,cAAgBvO,EAAOC,MAE3B1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAc1E,oBAAoBiF,IAAM3W,EAAMoW,cAAc1E,oBAAoBiF,IAAI,cAAgBnF,EAAWmF,IAAI,cAAevU,YAAY,2BAK9K/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKV,UAAU,eACXH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKgE,MAAI,GACL7E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKoH,KAAK,IAAI9H,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,iBAAf,eACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,gBAAgBoB,SAAU,SAAAoF,GAClD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAOiP,MAAQ3O,EAAOC,MAEf1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAc1E,oBAAsB1R,EAAMoW,cAAc1E,oBAAoBqF,MAAQvF,EAAWuF,MAAO3U,YAAY,wBAEtI/B,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK+V,KAAK,IAAIzW,UAAU,cACpBH,EAAAC,EAAAC,cAAA,SAAO4E,QAAQ,oBAAf,kBACA9E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWC,KAAK,SAASQ,GAAG,mBAAmBoB,SAAU,SAAAoF,GACrD,IAAMC,EAASD,EAAEC,OACjBqJ,EAAc,SAAA3J,GAGV,OAFAA,EAAOkP,SAAW5O,EAAOC,MAElB1J,OAAAwE,EAAA,EAAAxE,CAAA,GAAImJ,MAEhBO,MAAOrI,EAAMoW,cAAc1E,oBAAsB1R,EAAMoW,cAAc1E,oBAAoBsF,SAAWxF,EAAWwF,SAAU5U,YAAY,gCCxDjK4I,OApEf,SAAiBhL,GAKb,OAJA4H,oBAAU,WACNzH,QAAQC,IAAIJ,EAAM8H,UAIlBzH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAM+G,OAAK,EAACzH,UAAU,QAClBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAYV,UAAU,iBAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAd,YAIJH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAUV,UAAU,YAChBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAW+D,OAAK,GACZ5E,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAeV,UAAU,OACrBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,iCAAsCF,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,0CAAkCP,EAAM8H,OAAOoK,iBAAiByE,IAAI,cAAc3H,OAAO7D,QAAQ,GAAjG,QAA+G9K,EAAAC,EAAAC,cAAA,WAC/GF,EAAAC,EAAAC,cAAA,0CAAkCP,EAAM8H,OAAOoK,iBAAiByE,IAAI,cAAc3H,OAAO7D,QAAQ,GAAjG,QAA+G9K,EAAAC,EAAAC,cAAA,WAC/GF,EAAAC,EAAAC,cAAA,0CAAkCP,EAAM8H,OAAOoK,iBAAiByE,IAAI,cAAc3H,OAAO7D,QAAQ,GAAjG,QAA+G9K,EAAAC,EAAAC,cAAA,YAGnHF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,qCAA0CF,EAAAC,EAAAC,cAAA,WAChDF,EAAAC,EAAAC,cAAA,6BAAqBP,EAAM8H,OAAOoK,iBAAiBsC,YAAYxF,OAAO7D,QAAQ,GAA9E,SAA6F9K,EAAAC,EAAAC,cAAA,WAC7FF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAOoK,iBAAiBuC,KAAKzF,OAAO7D,QAAQ,GAAhE,UAA6E9K,EAAAC,EAAAC,cAAA,YAGjFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,iCAAsCF,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,iCAAyBP,EAAM8H,OAAOmD,QAAQiM,cAAcC,gBAAgBhM,QAAQ,GAApF,QAAkG9K,EAAAC,EAAAC,cAAA,WAClGF,EAAAC,EAAAC,cAAA,mCAA2BP,EAAM8H,OAAOmD,QAAQiM,cAAcE,kBAAkBjM,QAAQ,GAAxF,QAAsG9K,EAAAC,EAAAC,cAAA,WACtGF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOoK,iBAAiB8E,SAAShI,OAAO7D,QAAQ,GAAxE,YAAuF9K,EAAAC,EAAAC,cAAA,YAG3FF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,mCAAwCF,EAAAC,EAAAC,cAAA,WAC9CF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOwD,SAAS+L,SAAS9L,SAASJ,QAAQ,GAAlE,SAAiF9K,EAAAC,EAAAC,cAAA,WACjFF,EAAAC,EAAAC,cAAA,4BAAoBP,EAAM8H,OAAOwD,SAASgM,WAAW/L,SAASJ,QAAQ,GAAtE,SAAqF9K,EAAAC,EAAAC,cAAA,YAGzFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,8BAAmCF,EAAAC,EAAAC,cAAA,WACzCF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOwD,SAAS+L,SAAS1L,WAAWR,QAAQ,GAApE,QAAkF9K,EAAAC,EAAAC,cAAA,WAClFF,EAAAC,EAAAC,cAAA,4BAAoBP,EAAM8H,OAAOwD,SAASgM,WAAW3L,WAAWR,QAAQ,GAAxE,QAAsF9K,EAAAC,EAAAC,cAAA,YAG1FF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAAA,iCAAsCF,EAAAC,EAAAC,cAAA,WAC5CF,EAAAC,EAAAC,cAAA,kCAA0BP,EAAM8H,OAAOoK,iBAAiByE,IAAI,cAAc5B,MAAM5J,QAAQ,GAAxF,QAAsG9K,EAAAC,EAAAC,cAAA,WACtGF,EAAAC,EAAAC,cAAA,kCAA0BP,EAAM8H,OAAOoK,iBAAiByE,IAAI,cAAc5B,MAAM5J,QAAQ,GAAxF,QAAsG9K,EAAAC,EAAAC,cAAA,WACtGF,EAAAC,EAAAC,cAAA,kCAA0BP,EAAM8H,OAAOoK,iBAAiByE,IAAI,cAAc5B,MAAM5J,QAAQ,GAAxF,QAAsG9K,EAAAC,EAAAC,cAAA,WACtGF,EAAAC,EAAAC,cAAA,6BAAqBP,EAAM8H,OAAOoK,iBAAiBsC,YAAYO,MAAM5J,QAAQ,GAA7E,QAA2F9K,EAAAC,EAAAC,cAAA,WAC3FF,EAAAC,EAAAC,cAAA,sBAAcP,EAAM8H,OAAOoK,iBAAiBuC,KAAKM,MAAM5J,QAAQ,GAA/D,QAA6E9K,EAAAC,EAAAC,cAAA,WAC7EF,EAAAC,EAAAC,cAAA,wBAAgBP,EAAM8H,OAAOoK,iBAAiB6E,MAAMhC,MAAM5J,QAAQ,GAAlE,QAAgF9K,EAAAC,EAAAC,cAAA,WAChFF,EAAAC,EAAAC,cAAA,0BAAkBP,EAAM8H,OAAOoK,iBAAiB8E,SAASjC,MAAM5J,QAAQ,GAAvE,QAAqF9K,EAAAC,EAAAC,cAAA,mBC8d1GgX,ICphBAC,GAAA,CACb,CACEC,KAAM,IACNC,OAAO,EACP5W,OAAQmD,EACR0T,UAAW,kBAAMtX,EAAAC,EAAAC,cAACqX,EAAA,EAAD,CAAUvZ,GAAG,mBAEhC,CACEoZ,KAAM,eACN3W,OAAQmD,EACR0T,UAAWvS,GAEb,CACEqS,KAAM,mBACN3W,OAAQmD,EACR0T,UAAWnS,GAEb,CACEiS,KAAM,0BACN3W,OAAQmD,EACR0T,UAAW/L,IAEb,CACE6L,KAAM,yBACN3W,OAAQmD,EACR0T,UC1BJ,SAAmB3X,GAAO,IAAA0F,EACgBC,oBAAS,GADzBC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACfmG,EADejG,EAAA,GACFkG,EADElG,EAAA,GAAAI,EAGwBL,mBAAS,GAHjCM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAGf6R,EAHe5R,EAAA,GAGE6R,EAHF7R,EAAA,GAAAG,EAIoBT,mBAAS,GAJ7Ba,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAIf2R,EAJevR,EAAA,GAIAwR,EAJAxR,EAAA,GAAAG,EAKoBhB,mBAAS,GAL7BkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAKfsR,EALepR,EAAA,GAKAqR,EALArR,EAAA,GAAAG,EAOsBrB,mBAAS,CACjDwS,WAAY,IACZxG,OAAQ,CACJlF,YAAa,CACT2L,cAAe,GACfxG,wBAAyB,GACzBN,WAAY,IAEhB5E,SAAU,CACN0L,cAAe,GACfC,sBAAuB,GACvBC,iBAAkB,GAClBC,qBAAsB,KAG9BC,sBAAuB,CACnB7G,OAAQ,CACJ9N,KAAM,GACNkP,UAAW,GACX0F,WAAY,IAEhB5G,KAAM,CACFhO,KAAM,GACNkP,UAAW,GACX0F,WAAY,KAGpB3G,mBAAoB,CAChB/C,OAAQ,EACRa,SAAU,EACVD,WAAY,EACZkB,SAAU,GAEd6H,+BAAgC,CAC5BC,QAAS,CACL/I,SAAU,IACVD,WAAY,GACZkB,SAAU,MAEd+H,QAAS,CACLhJ,SAAU,EACVD,WAAY,MACZkB,SAAU,MAEdgI,QAAS,CACLjJ,SAAU,KACVD,WAAY,MACZkB,SAAU,QAGlBgB,KAAM,CACFiH,aAAc,EACdC,YAAa,EACbnH,wBAAyB,EACzBN,WAAY,GAEhBS,iBAAkB,CACdhD,OAAQ,EACRa,SAAU,EACVD,WAAY,GAEhBqJ,6BAA8B,CAC1BL,QAAS,CACL/I,SAAU,EACVD,WAAY,KAEhBiJ,QAAS,CACLhJ,SAAU,EACVD,WAAY,GAEhBkJ,QAAS,CACLjJ,SAAU,EACVD,WAAY,OAGpB5C,KAAM,CACFqL,cAAe,EACfxG,wBAAyB,EACzBN,WAAY,GAEhBU,iBAAkB,CACdnI,KAAM,EACN+F,SAAU,GAEdqJ,6BAA8B,CAC1BN,QAAS,CACL/I,SAAU,KAEdgJ,QAAS,CACLhJ,SAAU,KAEdiJ,QAAS,CACLjJ,SAAU,OAGlBtE,SAAU,CACNC,SAAU,CACN0G,UAAW,GAEftG,WAAY,CACRsG,UAAW,IAGnBC,iBAAkB,CACdb,QAAS,CACLc,KAAM,CAAC,EAAG,OACV+G,OAAQ,EACR9G,KAAM,GAEVC,YAAa,CACTF,KAAM,CAAC,EAAG,GACVgH,UAAW,EACX/G,KAAM,GAEVb,OAAQ,CACJ3B,SAAU,CACNuC,KAAM,CAAC,EAAG,OACVgH,UAAW,EACX/G,KAAM,GAEVzC,WAAY,CACRwC,KAAM,CAAC,EAAG,OACVgH,UAAW,EACX/G,KAAM,KAIlBgH,+BAAgC,CAC5BT,QAAS,CACLhH,OAAQ,CACJ/B,SAAU,IACVD,WAAY,GACZkB,SAAU,MAEdgB,KAAM,CACFjC,SAAU,EACVD,WAAY,KAEhB0J,cAAe,CACXzJ,SAAU,MAGlBgJ,QAAS,CACLjH,OAAQ,CACJ/B,SAAU,EACVD,WAAY,MACZkB,SAAU,MAEdgB,KAAM,CACFjC,SAAU,EACVD,WAAY,GAEhB0J,cAAe,CACXzJ,SAAU,MAGlBiJ,QAAS,CACLlH,OAAQ,CACJ/B,SAAU,KACVD,WAAY,MACZkB,SAAU,OAEdgB,KAAM,CACFjC,SAAU,EACVD,WAAY,MAEhB0J,cAAe,CACXzJ,SAAU,QAItB0J,6BAA8B,CAC1BX,QAAS,CACLhH,OAAQ,CACJ4H,aAAc,MACdC,cAAe,OAEnB3H,KAAM,CACF0H,aAAc,MACdC,cAAe,QAGvBZ,QAAS,CACLjH,OAAQ,CACJ4H,aAAc,KACdC,cAAe,OAEnB3H,KAAM,CACF0H,aAAc,KACdC,cAAe,MAI3BC,2CAA4C,CACxCC,cAAe,CACXC,iBAAkB,KAClBC,wBAAyB,CACrBC,QAAS,GACTC,QAAS,IAEbC,+BAAgC,MAEpCC,cAAe,CACXL,iBAAkB,KAClBC,wBAAyB,CACrBC,QAAS,GACTC,QAAS,IAEbC,+BAAgC,SAvNtB9S,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAOfgG,EAPe/F,EAAA,GAOCgG,EAPDhG,EAAA,GAAAG,EA4NsBzB,mBAAS,CACjD+I,oBAAqB,GACrBW,kBAAmB,GACnBY,kBAAmB,GACnBkB,uBAAwB,GACxBZ,eAAgB,GAChBmB,oBAAqB,KAlOHrK,EAAA1I,OAAAkH,EAAA,EAAAlH,CAAAyI,EAAA,GA4Nf6S,EA5Ne5S,EAAA,GA4NCoH,EA5NDpH,EAAA,GAqOhBsH,EAA2B,WAC7BmJ,EAAmB,SAAA5K,GAAK,OAAIA,EAAQ,KAGlCqC,EAAyB,WAC3ByI,EAAiB,SAAA9K,GAAK,OAAIA,EAAQ,KAGhCgD,EAAyB,WAC3BgI,EAAiB,SAAAhL,GAAK,OAAIA,EAAQ,KA6KtC,OACI7M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIpG,MAAM,YAAYuG,SAAS,aAAanE,UAAU,kBAKpEqL,EACAxL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAAC2Z,GAAD,CAASpS,OAAQkF,KAErB3M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,QAAQ1M,QAAS,SAAAyH,GACxC2D,GAAe,KADnB,UAMRzL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACKvC,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMuK,IAAkBxU,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC4Z,GAAD,CAAe3W,IAAK+J,EAAGvF,MAAOuF,EAAG0M,eAAgBA,EAAgBxL,kBAAmBA,EAAmBE,yBAA0BA,MAC3KhQ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMyK,IAAgB1U,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC6Z,GAAD,CAAa5W,IAAK+J,EAAGvF,MAAOuF,EAAG0M,eAAgBA,EAAgBxL,kBAAmBA,EAAmBc,uBAAwBA,MACrK5Q,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM2K,IAAgB5U,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC8Z,GAAD,CAAa7W,IAAK+J,EAAGvF,MAAOuF,EAAG0M,eAAgBA,EAAgBxL,kBAAmBA,EAAmByB,uBAAwBA,MACtK7P,EAAAC,EAAAC,cAAC+Z,GAAD,CAAkBL,eAAgBA,EAAgBxL,kBAAmBA,IACrEpO,EAAAC,EAAAC,cAACga,GAAD,CAAUN,eAAgBA,EAAgBxL,kBAAmBA,IAC7DpO,EAAAC,EAAAC,cAACia,GAAD,CAAeP,eAAgBA,EAAgBxL,kBAAmBA,KAEtEpO,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,QAAQ1M,QAAS,SAAAyH,GAxM5D8E,EAAkB,SAAAnF,GAEd,IAAM6J,EAASsI,EAAevL,oBACxBmD,EAAOoI,EAAe5K,kBACtBtC,EAAOkN,EAAehK,kBACtBwK,EAAmBR,EAAe9I,uBAClC7F,EAAW2O,EAAe1J,eAC1BmK,EAAgBT,EAAevI,oBA8JrC,OA3JA5J,EAAO0Q,sBAAsB7G,OAAO9N,KAAOiE,EAAO0Q,sBAAsB3G,KAAKhO,KAAO4W,EAAiBxJ,UAAUP,gBAC/G5I,EAAO0Q,sBAAsB7G,OAAOoB,UAAYjL,EAAO0Q,sBAAsB3G,KAAKkB,UAAY0H,EAAiBxJ,UAAUN,qBACzH7I,EAAO0Q,sBAAsB7G,OAAO8G,WAAa3Q,EAAOwR,6BAA6BmB,EAAiBxJ,UAAUP,iBAAiBiB,OAAO8I,EAAiBxJ,UAAUN,sBACnK7I,EAAO0Q,sBAAsB3G,KAAK4G,WAAa3Q,EAAOwR,6BAA6BmB,EAAiBxJ,UAAUP,iBAAiBmB,KAAK4I,EAAiBxJ,UAAUN,sBAG/J7I,EAAO6J,OAAOlF,YAAY2L,cAAgB,EAC1CzG,EAAO1D,QAAQ,SAAC9F,EAAGH,GACf,IAAIkG,GAAY,GAAKyD,EAAO3J,GAAOvB,kBAAkBJ,EAAM,GAAKsL,EAAO3J,GAAOvB,kBAAkBH,EAAM,GAAKwB,EAAOqQ,aAAgBxG,EAAO3J,GAAON,cAAgBiK,EAAO3J,GAAOvB,kBAAkBF,IAAKoL,EAAO3J,GAAOuG,cAEnNzG,EAAO6J,OAAOlF,YAAY2L,gBAAkBlK,EAAO/C,QAAQ,KAI/DrD,EAAO6J,OAAOlF,YAAYmF,wBAA0BzD,KAAKC,KAAKtG,EAAO6J,OAAOlF,YAAY2L,eAAiBqC,EAAiBxJ,UAAUR,gBAAgBpK,EAAIoU,EAAiBxJ,UAAUR,gBAAgBnK,IACnMwB,EAAO6J,OAAOlF,YAAY6E,WAAanD,KAAKC,KAAKtG,EAAO6J,OAAOlF,YAAYmF,wBAA0B9J,EAAO0Q,sBAAsB7G,OAAO8G,YAGzI3Q,EAAO6J,OAAOjF,SAAS0L,cAAgB,EACvCzG,EAAO1D,QAAQ,SAAC9F,EAAGH,GACf,IAAIkG,EAA2C,QAAjCyD,EAAO3J,GAAOlB,eAAeF,GAAc+K,EAAO3J,GAAON,aAAeiK,EAAO3J,GAAOuG,aAEpGzG,EAAO6J,OAAOjF,SAAS0L,gBAAkBlK,EAAO/C,QAAQ,KAI5DrD,EAAO6J,OAAOjF,SAAS2L,sBAAwBlK,KAAKC,KAAKtG,EAAO6J,OAAOjF,SAAS0L,cAAgBtQ,EAAO2R,2CAA2CgB,EAAiBxJ,UAAUH,cAAc6I,kBAE3L7R,EAAO6J,OAAOjF,SAAS4L,iBAAmBnK,KAAKC,KAAMtG,EAAO6J,OAAOjF,SAAS0L,cAAgBtQ,EAAO2R,2CAA2CgB,EAAiBxJ,UAAUH,cAAc8I,wBAAwBa,EAAiBxJ,UAAUF,2BAA4B0J,EAAiBxJ,UAAUD,qBAEjSlJ,EAAO6J,OAAOjF,SAAS6L,qBAAuBpK,KAAKC,KAAMtG,EAAO6J,OAAOjF,SAAS0L,cAAgBtQ,EAAO2R,2CAA2CM,+BAAgCU,EAAiBxJ,UAAUD,qBAG7MlJ,EAAOgK,mBAAmB/C,OAAS,EACnC4C,EAAO1D,QAAQ,SAAC9F,EAAGH,GACf,IAAIkG,GAAUyD,EAAO3J,GAAON,aAAeiK,EAAO3J,GAAOuG,aAEzDzG,EAAOgK,mBAAmB/C,QAAUb,IAIxCpG,EAAOgK,mBAAmBlC,SAAWzB,KAAKC,KAAKtG,EAAOgK,mBAAmB/C,OAASjH,EAAO4Q,+BAA+B+B,EAAiBxJ,UAAUL,YAAYhB,UAAUA,UAEzK9H,EAAOgK,mBAAmBnC,WAAaxB,KAAKC,KAAKtG,EAAOgK,mBAAmB/C,OAASjH,EAAO4Q,+BAA+B+B,EAAiBxJ,UAAUL,YAAYjB,YAAYA,YAE7K7H,EAAOgK,mBAAmBjB,SAAW1C,KAAKC,KAAKtG,EAAOgK,mBAAmB/C,OAASjH,EAAO4Q,+BAA+B+B,EAAiBxJ,UAAUL,YAAYC,UAAUA,UAGzK/I,EAAO+J,KAAKiH,aAAe,EAC3BhR,EAAOiK,iBAAiBhD,OAAS,EACjC8C,EAAK5D,QAAQ,SAAC9F,EAAGH,GACb6J,EAAK7J,GAAOiH,WAAWhB,QAAQ,SAAC0M,EAAIC,GAChC,IAAI1M,GAAU2D,EAAK7J,GAAOiH,WAAW2L,GAAI7L,QAAU8C,EAAK7J,GAAOiH,WAAW2L,GAAI5L,OAE9ElH,EAAO+J,KAAKiH,cAAgB5K,EAC5BpG,EAAOiK,iBAAiBhD,QAAUb,MAK1CpG,EAAO+J,KAAKkH,YAAc,EAC1BlH,EAAK5D,QAAQ,SAAC9F,EAAGH,GACb,IAAI8E,EAAQ,EAEZ+E,EAAK7J,GAAOiH,WAAWhB,QAAQ,SAAC0M,EAAIC,GAChC,IAAI1M,GAAU2D,EAAK7J,GAAOiH,WAAW2L,GAAI7L,QAAU8C,EAAK7J,GAAOiH,WAAW2L,GAAI5L,OAC9ElC,GAASoB,IAGb/N,QAAQC,IAAIyR,EAAK7J,IAEjB,IAAI6S,EAAM/N,GAAU,GAAK+E,EAAK7J,GAAOsH,gBAAgBhJ,IAAOuL,EAAK7J,GAAOsH,gBAAgBjJ,EAAM,EAAIyB,EAAOqQ,YACzGrQ,EAAO+J,KAAKkH,aAAe8B,IAG/B/S,EAAO+J,KAAKD,wBAA0BzD,KAAKC,KAAKtG,EAAO+J,KAAKkH,aAAe0B,EAAiBxJ,UAAUR,gBAAgBpK,EAAIoU,EAAiBxJ,UAAUR,gBAAgBnK,IACrKwB,EAAO+J,KAAKP,WAAanD,KAAKC,KAAKtG,EAAO+J,KAAKD,wBAA0B9J,EAAO0Q,sBAAsB3G,KAAK4G,YAG3G3Q,EAAOiK,iBAAiBnC,SAAWzB,KAAKC,KAAKtG,EAAOiK,iBAAiBhD,OAASjH,EAAOkR,6BAA6ByB,EAAiBxJ,UAAUL,YAAYhB,UAAUA,UACnK9H,EAAOiK,iBAAiBpC,WAAaxB,KAAKC,KAAKtG,EAAOiK,iBAAiBhD,OAASjH,EAAOkR,6BAA6ByB,EAAiBxJ,UAAUL,YAAYjB,YAAYA,YAGvK7H,EAAOiF,KAAKqL,cAAgB,EAC5BtQ,EAAOkK,iBAAiBnI,KAAO,EAC/BkD,EAAKkB,QAAQ,SAAC9F,EAAGH,GACb,IAAI8E,EAAQ,EAEZ3M,QAAQC,IAAI,cAAe2M,EAAK/E,GAAO6H,YAEvC9C,EAAK/E,GAAO6H,WAAW5B,QAAQ,SAAC0M,EAAIC,GAChC,IAAI1M,GAAUnB,EAAK/E,GAAO6H,WAAW+K,GAAIjL,YAAc5C,EAAK/E,GAAO6H,WAAW+K,GAAIhL,SAClF9C,GAASoB,IAGb/N,QAAQC,IAAIyR,EAAK7J,IAEjB,IAAI6S,EAAM/N,EACVhF,EAAOiF,KAAKqL,eAAiByC,EAC7B/S,EAAOkK,iBAAiBnI,MAAQgR,IAIpC/S,EAAOiF,KAAK6E,wBAA0BzD,KAAKC,KAAKtG,EAAOiF,KAAKqL,eAAiBqC,EAAiBxJ,UAAUR,gBAAgBpK,EAAIoU,EAAiBxJ,UAAUR,gBAAgBnK,IACvKwB,EAAOiF,KAAKuE,WAAanD,KAAKC,KAA2C,MAAtCtG,EAAOiF,KAAK6E,yBAG/C9J,EAAOkK,iBAAiBpC,SAAWzB,KAAKC,KAAKtG,EAAOkK,iBAAiBnI,KAAO/B,EAAOmR,6BAA6BwB,EAAiBxJ,UAAUL,YAAYhB,UAAUA,UAGjK9H,EAAOwD,SAASC,SAAS0G,UAAY9D,KAAKC,KAAK,IAACtG,EAAO6J,OAAOlF,YAAY2L,cAAgBtQ,EAAO+J,KAAKkH,YAAcjR,EAAOiF,KAAKqL,gBAA4B,IAAI9M,EAASf,gBAAiBe,EAAS6E,iBACnMrI,EAAOwD,SAASK,WAAWsG,WAAc3G,EAASf,eAAiBe,EAASX,YAAc7C,EAAOwD,SAASC,SAAS0G,YAAe3G,EAASb,eAAiBa,EAAST,YAAc/C,EAAOwD,SAASC,SAAS0G,YAAe3G,EAAS6E,eAAiB7E,EAAS+E,YAAcvI,EAAOwD,SAASC,SAAS0G,UAGhP,QAAjDwI,EAAiBxJ,UAAUR,gBAAgBpK,EAAayB,EAAOoK,iBAAiBb,QAAQc,KAAK,GAAK,aACjGrK,EAAOoK,iBAAiBb,QAAQc,KAAK,GAAK,aAE/CrK,EAAOoK,iBAAiBb,QAAQ6H,OAASpR,EAAO6J,OAAOlF,YAAYmF,wBAA0B9J,EAAO+J,KAAKD,wBAA0B9J,EAAOiF,KAAK6E,wBAE5F,UAA/C6I,EAAiBxJ,UAAUP,gBAA6B5I,EAAOoK,iBAAiBG,YAAYF,KAAK,GAAK,YAClD,UAA/CsI,EAAiBxJ,UAAUP,gBAA6B5I,EAAOoK,iBAAiBG,YAAYF,KAAK,GAAK,YAC1GrK,EAAOoK,iBAAiBG,YAAYF,KAAK,GAAK,IAEnDrK,EAAOoK,iBAAiBG,YAAY8G,UAAYrR,EAAO6J,OAAOlF,YAAY6E,WAAaxJ,EAAO+J,KAAKP,WAAaxJ,EAAOiF,KAAKuE,WAEpE,eAApDmJ,EAAiBxJ,UAAUN,qBAAuC7I,EAAOoK,iBAAiBG,YAAYF,KAAK,GAAK,OACvD,gBAApDsI,EAAiBxJ,UAAUN,qBAAwC7I,EAAOoK,iBAAiBG,YAAYF,KAAK,GAAK,OACrHrK,EAAOoK,iBAAiBG,YAAYF,KAAK,GAAK,IAGnDrK,EAAOoK,iBAAiBb,QAAQe,MAAQsI,EAAclJ,WAAWH,QAAUvJ,EAAOoK,iBAAiBb,QAAQ6H,OAC3GpR,EAAOoK,iBAAiBG,YAAYD,MAAQsI,EAAclJ,WAAWF,WAAaxJ,EAAOoK,iBAAiBG,YAAY8G,UAG9D,UAApDsB,EAAiBxJ,UAAUL,YAAYhB,SAAsB9H,EAAOoK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,aACtD,UAApDsI,EAAiBxJ,UAAUL,YAAYhB,SAAsB9H,EAAOoK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,YAC3D,UAApDsI,EAAiBxJ,UAAUL,YAAYhB,SAAsB9H,EAAOoK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,YACnHrK,EAAOoK,iBAAiBX,OAAO3B,SAASuC,KAAK,GAAK,IAEvDrK,EAAOoK,iBAAiBX,OAAO3B,SAASuJ,UAAYrR,EAAOgK,mBAAmBlC,SAAW9H,EAAOgK,mBAAmBjB,SAAW/I,EAAOiK,iBAAiBnC,SAAW9H,EAAOkK,iBAAiBpC,SAE/H,UAAtD6K,EAAiBxJ,UAAUL,YAAYjB,WAAwB7H,EAAOoK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,aACxD,UAAtDsI,EAAiBxJ,UAAUL,YAAYjB,WAAwB7H,EAAOoK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,YAC7D,UAAtDsI,EAAiBxJ,UAAUL,YAAYjB,WAAwB7H,EAAOoK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,YACvHrK,EAAOoK,iBAAiBX,OAAO5B,WAAWwC,KAAK,GAAK,IAEzDrK,EAAOoK,iBAAiBX,OAAO5B,WAAWwJ,UAAYrR,EAAOgK,mBAAmBnC,WAAa7H,EAAOiK,iBAAiBpC,WAGrH7H,EAAOoK,iBAAiBX,OAAO3B,SAASwC,KAAOtK,EAAOoK,iBAAiBX,OAAO3B,SAASuJ,WAAauB,EAAclJ,WAAWD,OAAO,GACpIzJ,EAAOoK,iBAAiBX,OAAO5B,WAAWyC,KAAOtK,EAAOoK,iBAAiBX,OAAO5B,WAAWwJ,WAAauB,EAAclJ,WAAWD,OAAO,GAExIpR,QAAQC,IAAI6Z,EAAgBnS,GAE5BgE,GAAe,GACRhE,MAmCK,kBD9ZtB,CACE2P,KAAM,wBACN3W,OAAQmD,EACR0T,UE3BJ,SAAkB3X,GAAO,IAAA0F,EACiBC,oBAAS,GAD1BC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACdmG,EADcjG,EAAA,GACDkG,EADClG,EAAA,GAAAI,EAGyBL,mBAAS,GAHlCM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAGd6R,EAHc5R,EAAA,GAGG6R,EAHH7R,EAAA,GAAAG,EAI+BT,mBAAS,GAJxCa,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAId0U,EAJctU,EAAA,GAIMuU,EAJNvU,EAAA,GAAAG,EAK2BhB,mBAAS,GALpCkB,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAKdqU,EALcnU,EAAA,GAKIoU,EALJpU,EAAA,GAAAG,EAMqBrB,mBAAS,GAN9BsB,EAAAtI,OAAAkH,EAAA,EAAAlH,CAAAqI,EAAA,GAMd+Q,EANc9Q,EAAA,GAMC+Q,EAND/Q,EAAA,GAAAG,EAOqBzB,mBAAS,GAP9B0B,EAAA1I,OAAAkH,EAAA,EAAAlH,CAAAyI,EAAA,GAOd6Q,EAPc5Q,EAAA,GAOC6Q,EAPD7Q,EAAA,GAAAG,EAQuC7B,mBAAS,GARhD8B,EAAA9I,OAAAkH,EAAA,EAAAlH,CAAA6I,EAAA,GAQd0T,EARczT,EAAA,GAQU0T,EARV1T,EAAA,GAAA2T,EAUuBzV,mBAAS,CACjD+I,oBAAqB,GACrB3G,oBAAqB,GACrBkB,kBAAmB,GACnBoG,kBAAmB,GACnBY,kBAAmB,GACnBvG,iBAAkB,GAClBqK,oBAAqB,GACrBO,gBAAiB,GACjB/D,eAAgB,GAChBmB,oBAAqB,KApBJ2J,EAAA1c,OAAAkH,EAAA,EAAAlH,CAAAyc,EAAA,GAUdE,EAVcD,EAAA,GAUE/I,EAVF+I,EAAA,GAAAE,EAuBuB5V,mBAAS,CACjD6V,YAAa,CACT5G,OAAQ,EACRH,KAAM,GACNC,OAAQ,GAEZ/C,OAAQ,CACJ8J,aAAc,EACd9G,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhBlI,eAAgB,CACZiP,aAAc,EACd9G,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhB/H,aAAc,CACV8O,aAAc,EACd9G,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhB7C,KAAM,CACF4J,aAAc,EACd9G,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhB3H,KAAM,CACF0O,aAAc,EACd9G,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhB3G,YAAa,CACT0N,aAAc,EACd9G,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhBG,gBAAiB,CACb6G,kBAAmB,EACnBC,sBAAuB,EACvBC,uBAAwB,EACxBC,gBAAiB,EACjBC,gBAAiB,EACjBC,gBAAiB,EACjBC,iBAAkB,EAClBC,kBAAmB,EACnBC,iBAAkB,EAClBvH,SAAU,CACNC,OAAQ,EACRH,KAAM,EACNC,OAAQ,IAGhByH,kBAAmB,CACfC,cAAe,CACXC,GAAM,CACFhI,YAAa,aACbiI,WAAY,CACRC,OAAQ,GACRC,OAAQ,KAEZ/H,KAAM,GACNC,OAAQ,GAEZ+H,EAAK,CACDpI,YAAa,WACbiI,WAAY,CACRC,OAAQ,EACRC,OAAQ,GAEZ/H,KAAM,GACNC,OAAQ,GAEZgI,EAAK,CACDrI,YAAa,aACbiI,WAAY,CACRC,OAAQ,IACRC,OAAQ,GAEZ/H,KAAM,GACNC,OAAQ,GAEZiI,EAAK,CACDtI,YAAa,WACbiI,WAAY,CACRC,OAAQ,EACRC,OAAQ,GAEZ/H,KAAM,GACNC,OAAQ,KAIpBpJ,SAAU,CACNwJ,WAAY,CACRvJ,SAAU,EACVI,WAAY,IAGpBuG,iBAAkB,CACdsC,YAAa,CACTxF,OAAQ,EACR+F,MAAO,GAEXN,KAAM,CACFzF,OAAQ,EACR+F,MAAO,GAEXL,OAAQ,CACJ1F,OAAQ,EACR+F,MAAO,MAtJE6H,EAAAje,OAAAkH,EAAA,EAAAlH,CAAA4c,EAAA,GAuBdvO,EAvBc4P,EAAA,GAuBE3P,EAvBF2P,EAAA,GA2JfjO,EAA2B,WAC7BmJ,EAAmB,SAAA5K,GAAK,OAAIA,EAAQ,KAGlC2P,EAA8B,WAChC9B,EAAsB,SAAA7N,GAAK,OAAIA,EAAQ,KAGrC4P,EAA4B,WAC9B7B,EAAoB,SAAA/N,GAAK,OAAIA,EAAQ,KAGnCqC,EAAyB,WAC3ByI,EAAiB,SAAA9K,GAAK,OAAIA,EAAQ,KAGhCgD,EAAyB,WAC3BgI,EAAiB,SAAAhL,GAAK,OAAIA,EAAQ,KAGhC6P,EAAkC,WACpC5B,EAA0B,SAAAjO,GAAK,OAAIA,EAAQ,KA2K/C,OACI7M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIpG,MAAM,WAAWuG,SAAS,aAAanE,UAAU,kBAKnEqL,EACAxL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACyc,GAAD,CAASlV,OAAQkF,KAErB3M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,QAAQ1M,QAAS,SAAAyH,GACxC2D,GAAe,KADnB,UAMRzL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACKvC,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMuK,IAAkBxU,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC0c,GAAD,CAAezZ,IAAK+J,EAAGvF,MAAOuF,EAAG+N,eAAgBA,EAAgBhJ,kBAAmBA,EAAmB3D,yBAA0BA,MAC3KhQ,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMwN,IAAqBzX,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC2c,GAAD,CAAsB1Z,IAAK+J,EAAGvF,MAAOuF,EAAG+N,eAAgBA,EAAgBhJ,kBAAmBA,EAAmB3D,yBAA0BkO,MACrLle,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM0N,IAAmB3X,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC4c,GAAD,CAAoB3Z,IAAK+J,EAAGvF,MAAOuF,EAAG+N,eAAgBA,EAAgBhJ,kBAAmBA,EAAmB3D,yBAA0BmO,MACjLne,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAMyK,IAAgB1U,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC6c,GAAD,CAAa5Z,IAAK+J,EAAGvF,MAAOuF,EAAG+N,eAAgBA,EAAgBhJ,kBAAmBA,EAAmB/C,uBAAwBA,MACrK5Q,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM2K,IAAgB5U,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC8c,GAAD,CAAa7Z,IAAK+J,EAAGvF,MAAOuF,EAAG+N,eAAgBA,EAAgBhJ,kBAAmBA,EAAmBpC,uBAAwBA,MACtK7P,EAAAC,EAAAC,cAAC+c,GAAD,CAAmBhC,eAAgBA,EAAgBhJ,kBAAmBA,IACrE3T,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM4N,IAAyB7X,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAACgd,GAAD,CAAsB/Z,IAAK+J,EAAGvF,MAAOuF,EAAG+N,eAAgBA,EAAgBhJ,kBAAmBA,EAAmByK,gCAAiCA,MACjM1c,EAAAC,EAAAC,cAACid,GAAD,CAAWlC,eAAgBA,EAAgBhJ,kBAAmBA,IAC9DjS,EAAAC,EAAAC,cAACkd,GAAD,CAAUnC,eAAgBA,EAAgBhJ,kBAAmBA,IAC7DjS,EAAAC,EAAAC,cAACmd,GAAD,CAAepC,eAAgBA,EAAgBhJ,kBAAmBA,KAEtEjS,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,QAAQ1M,QAAS,SAAAyH,GA1M5D8E,EAAkB,SAAAnF,GAEd,IAAM6J,EAAS2J,EAAe5M,oBACxBlC,EAAiB8O,EAAevT,oBAChC4E,EAAe2O,EAAerS,kBAC9B4I,EAAOyJ,EAAejM,kBACtBtC,EAAOuO,EAAerL,kBACtBlC,EAAcuN,EAAe5R,iBAC7BiU,EAAiBrC,EAAevH,oBAChC6J,EAAatC,EAAehH,gBAC5BhJ,EAAWgQ,EAAe/K,eAC1BsN,EAAWvC,EAAe5J,oBAwJhC,OArJA5J,EAAO0T,YAAY5G,OAAS9M,EAAOqU,kBAAkBC,cAAcwB,EAAWzJ,cAAcmI,WAAWsB,EAAWxJ,WAGlHtM,EAAO6J,OAAO8J,aAAe,EAC7B9J,EAAO1D,QAAQ,SAAC9F,EAAGH,GACf,IAAIkG,GAAUyD,EAAO3J,GAAOvB,kBAAkBJ,GAAKsL,EAAO3J,GAAOvB,kBAAkBH,IAAMqL,EAAO3J,GAAOvB,kBAAkBF,IAAKoL,EAAO3J,GAAOuG,eAAiBoD,EAAO3J,GAAON,YAC3KwG,KAAYyD,EAAO3J,GAAOlB,eAAeF,GAAK+K,EAAO3J,GAAOlB,eAAeF,EAAI,MAAQ+K,EAAO3J,GAAOlB,eAAeP,GAAKoL,EAAO3J,GAAOlB,eAAeP,EAAI,KAAMoL,EAAO3J,GAAOuG,eAAiBoD,EAAO3J,GAAON,YAE7MI,EAAO6J,OAAO8J,cAAgBvN,IAIlCpG,EAAO6J,OAAOgD,SAASC,OAASzG,KAAKC,KAAKtG,EAAO6J,OAAO8J,aAAe3T,EAAO0T,YAAY5G,QAC1F9M,EAAO6J,OAAOgD,SAASF,KAAO3M,EAAO6J,OAAO8J,aAAe3T,EAAO0T,YAAY/G,KAC9E3M,EAAO6J,OAAOgD,SAASD,OAAS5M,EAAO6J,OAAO8J,aAAe3T,EAAO0T,YAAY9G,OAGhF5M,EAAO0E,eAAeiP,aAAe,EACrCjP,EAAeyB,QAAQ,SAAC9F,EAAGH,GACvB,IAAIkG,GAAU1B,EAAexE,GAAOvB,kBAAkBJ,GAAKmG,EAAexE,GAAOvB,kBAAkBH,GAAKkG,EAAexE,GAAOvB,kBAAkBF,GAAKiG,EAAexE,GAAON,YAC3KwG,KAAY1B,EAAexE,GAAOlB,eAAeF,GAAK4F,EAAexE,GAAOlB,eAAeF,EAAI,KAAO4F,EAAexE,GAAOlB,eAAeP,GAAKiG,EAAexE,GAAOlB,eAAeP,EAAI,IAAMiG,EAAexE,GAAON,YAErNI,EAAO0E,eAAeiP,cAAgBvN,IAI1CpG,EAAO0E,eAAemI,SAASC,OAASzG,KAAKC,KAAKtG,EAAO0E,eAAeiP,aAAe3T,EAAO0T,YAAY5G,QAC1G9M,EAAO0E,eAAemI,SAASF,KAAO3M,EAAO0E,eAAeiP,aAAe3T,EAAO0T,YAAY/G,KAC9F3M,EAAO0E,eAAemI,SAASD,OAAS5M,EAAO0E,eAAeiP,aAAe3T,EAAO0T,YAAY9G,OAGhG5M,EAAO6E,aAAa8O,aAAe,EACnC9O,EAAasB,QAAQ,SAAC9F,EAAGH,GACrB,IAAIkG,GAAUvB,EAAa3E,GAAOuK,kBAAoB5F,EAAa3E,GAAOyK,kBAAoB9F,EAAa3E,GAAOe,cAElHjB,EAAO6E,aAAa8O,cAAgBvN,IAIxCpG,EAAO6E,aAAagI,SAASC,OAASzG,KAAKC,KAAKtG,EAAO6E,aAAa8O,aAAe3T,EAAO0T,YAAY5G,QACtG9M,EAAO6E,aAAagI,SAASF,KAAO3M,EAAO6E,aAAa8O,aAAe3T,EAAO0T,YAAY/G,KAC1F3M,EAAO6E,aAAagI,SAASD,OAAS5M,EAAO6E,aAAa8O,aAAe3T,EAAO0T,YAAY9G,OAG5F5M,EAAO+J,KAAK4J,aAAe,EAC3B5J,EAAK5D,QAAQ,SAAC9F,EAAGH,GACb,IAAI8E,EAAQ,EAEZ+E,EAAK7J,GAAOiH,WAAWhB,QAAQ,SAAC0M,EAAIC,GAChC,IAAI1M,GAAU2D,EAAK7J,GAAOiH,WAAW2L,GAAI7L,QAAU8C,EAAK7J,GAAOiH,WAAW2L,GAAI5L,OAC9ElC,GAASoB,IAGb,IAAI2M,EAAM/N,GAAS+E,EAAK7J,GAAOsH,gBAAgBhJ,GAAKuL,EAAK7J,GAAOsH,gBAAgBjJ,EAChFyB,EAAO+J,KAAK4J,cAAgBZ,IAIhC/S,EAAO+J,KAAK8C,SAASC,OAASzG,KAAKC,KAAKtG,EAAO+J,KAAK4J,aAAe3T,EAAO0T,YAAY5G,QACtF9M,EAAO+J,KAAK8C,SAASF,KAAO3M,EAAO+J,KAAK4J,aAAe3T,EAAO0T,YAAY/G,KAC1E3M,EAAO+J,KAAK8C,SAASD,OAAS5M,EAAO+J,KAAK4J,aAAe3T,EAAO0T,YAAY9G,OAG5E5M,EAAOiF,KAAK0O,aAAe,EAC3B1O,EAAKkB,QAAQ,SAAC9F,EAAGH,GACb,IAAI8E,EAAQ,EAEZC,EAAK/E,GAAO6H,WAAW5B,QAAQ,SAAC0M,EAAIC,GAChC,IAAI1M,GAAUnB,EAAK/E,GAAO6H,WAAW+K,GAAIjL,YAAc5C,EAAK/E,GAAO6H,WAAW+K,GAAIhL,SAClF9C,GAASoB,IAGb/N,QAAQC,IAAI0M,GAEZ,IAAI+N,EAAM/N,IAAUC,EAAK/E,GAAO2K,cAAgB,KAEhDxS,QAAQC,IAAI2M,EAAK/E,IAEjBF,EAAOiF,KAAK0O,cAAgBZ,IAIhC/S,EAAOiF,KAAK4H,SAASC,OAASzG,KAAKC,KAAKtG,EAAOiF,KAAK0O,aAAe3T,EAAO0T,YAAY5G,QACtF9M,EAAOiF,KAAK4H,SAASF,KAAO3M,EAAOiF,KAAK0O,aAAe3T,EAAO0T,YAAY/G,KAC1E3M,EAAOiF,KAAK4H,SAASD,OAAS5M,EAAOiF,KAAK0O,aAAe3T,EAAO0T,YAAY9G,OAG5E5M,EAAOiG,YAAY0N,cAAgB1N,EAAYiF,eAAejE,QAAUhB,EAAYiF,eAAeH,OAAS9E,EAAYiF,eAAeD,UACvIjL,EAAOiG,YAAY0N,eAAiB1N,EAAYmF,kBAAkBnE,QAAUhB,EAAYmF,kBAAkBL,OAAS9E,EAAYmF,kBAAkBH,UAGjJjL,EAAOiG,YAAY4G,SAASC,OAASzG,KAAKC,KAAKtG,EAAOiG,YAAY0N,aAAe3T,EAAO0T,YAAY5G,QACpG9M,EAAOiG,YAAY4G,SAASF,KAAO3M,EAAOiG,YAAY0N,aAAe3T,EAAO0T,YAAY/G,KACxF3M,EAAOiG,YAAY4G,SAASD,OAAS5M,EAAOiG,YAAY0N,aAAe3T,EAAO0T,YAAY9G,OAG1F5M,EAAO+M,gBAAgB6G,kBAAoB,EAC3C5T,EAAO+M,gBAAgB8G,sBAAwB,EAC/C7T,EAAO+M,gBAAgB+G,uBAAyB,EAChD9T,EAAO+M,gBAAgBgH,gBAAkB,EACzC/T,EAAO+M,gBAAgBiH,gBAAkB,EACzChU,EAAO+M,gBAAgBoH,kBAAoB,EAC3CnU,EAAO+M,gBAAgBqH,iBAAmB,EAC1CyB,EAAe1P,QAAQ,SAAC9F,EAAGH,GACvB,IAAI8E,EAAQ,EAEZ6Q,EAAe3V,GAAO+L,oBAAoBJ,QAAQ1F,QAAQ,SAAC0M,EAAIC,GAC3D,IAAI1M,IAAWyP,EAAe3V,GAAO+L,oBAAoBJ,QAAQiH,GAAI9G,gBAAkB6J,EAAe3V,GAAO+L,oBAAoBT,aAAeqK,EAAe3V,GAAO+L,oBAAoBJ,QAAQiH,GAAI/G,eAAiB8J,EAAe3V,GAAO+L,oBAAoBJ,QAAQiH,GAAIhH,qBAC7Q9G,GAASoB,IAGbpG,EAAO+M,gBAAgB6G,kBAAoB5O,EAC3ChF,EAAO+M,gBAAgB8G,sBAAyB,GAAKgC,EAAe3V,GAAO+L,oBAAoBT,YAAeqK,EAAe3V,GAAO+L,oBAAoBP,gBAAkBmK,EAAe3V,GAAO+L,oBAAoBJ,QAAQ,GAAGC,qBAC/N9L,EAAO+M,gBAAgB+G,wBAA0B+B,EAAe3V,GAAO+L,oBAAoBT,aAAeqK,EAAe3V,GAAO+L,oBAAoBJ,QAAQ,GAAGG,gBAAkB6J,EAAe3V,GAAO+L,oBAAoBT,aAAeqK,EAAe3V,GAAO+L,oBAAoBJ,QAAQ,GAAGC,qBAE/R9L,EAAO+M,gBAAgBgH,gBAAkB1N,KAAK2P,KAAK3P,KAAK4P,KAAKJ,EAAe3V,GAAO+L,oBAAoBN,gBAAmB,GAAKkK,EAAe3V,GAAO+L,oBAAoBT,aAAgBqK,EAAe3V,GAAO+L,oBAAoBT,YAAcqK,EAAe3V,GAAO+L,oBAAoBJ,QAAQ,GAAGG,gBAAiB,GAAK3F,KAAK4P,KAAMJ,EAAe3V,GAAO+L,oBAAoBR,iBAAmBoK,EAAe3V,GAAO+L,oBAAoBJ,QAAQ,GAAGC,qBAAuB,IAChd9L,EAAO+M,gBAAgBiH,gBAAkBhU,EAAO+M,gBAAgBgH,iBAAmB8B,EAAe3V,GAAO+L,oBAAoBJ,QAAQ,GAAGG,gBAAkB6J,EAAe3V,GAAO+L,oBAAoBJ,QAAQ,GAAGE,cAE/M/L,EAAO+M,gBAAgBkH,gBAAkB5N,KAAKC,MAAOuP,EAAe3V,GAAO+L,oBAAoBR,iBAAiBoK,EAAe3V,GAAO+L,oBAAoBV,YAAe,GACzKvL,EAAOkU,iBAAmB,IAAO2B,EAAe3V,GAAO+L,oBAAoBV,aAAesK,EAAe3V,GAAO+L,oBAAoBT,WACpIxL,EAAOmU,kBAAoBnU,EAAO+M,gBAAgBkH,gBAAkBjU,EAAOkU,iBAE3ElU,EAAO+M,gBAAgBqH,kBAAqBpU,EAAO+M,gBAAgB6G,kBAAoB5T,EAAO+M,gBAAgB8G,sBAAwB7T,EAAO+M,gBAAgB+G,uBAAyB9T,EAAO+M,gBAAgBiH,gBAAkBhU,EAAOmU,oBAI1OnU,EAAO+M,gBAAgBF,SAASC,OAASzG,KAAKC,KAAKtG,EAAO+M,gBAAgBqH,iBAAmBpU,EAAO0T,YAAY5G,QAChH9M,EAAO+M,gBAAgBF,SAASF,KAAO3M,EAAO+M,gBAAgBqH,iBAAmBpU,EAAO0T,YAAY/G,KACpG3M,EAAO+M,gBAAgBF,SAASD,OAAS5M,EAAO+M,gBAAgBqH,iBAAmBpU,EAAO0T,YAAY9G,OAGtG5M,EAAOwD,SAASwJ,WAAWvJ,SAAW4C,KAAKC,MAAMtG,EAAO6J,OAAO8J,aAAe3T,EAAO0E,eAAeiP,aAAe3T,EAAO6E,aAAa8O,aAAe3T,EAAO+J,KAAK4J,aAAe3T,EAAOiF,KAAK0O,aAAe3T,EAAO+M,gBAAgBqH,mBAAqB,EAAE,KAAQ,IAAI5Q,EAASf,gBAAiBe,EAASb,gBAAiBa,EAAS6E,iBAGnUrI,EAAOwD,SAASwJ,WAAWnJ,YAAeL,EAASf,eAAiBe,EAASX,YAAc7C,EAAOwD,SAASwJ,WAAWvJ,WAAcD,EAASb,eAAiBa,EAAST,YAAc/C,EAAOwD,SAASwJ,WAAWvJ,WAAcD,EAAS6E,eAAiB7E,EAAS+E,YAAcvI,EAAOwD,SAASwJ,WAAWvJ,SAG1SzD,EAAOoK,iBAAiBsC,YAAYxF,OAASlH,EAAO6J,OAAOgD,SAASC,OAAS9M,EAAO0E,eAAemI,SAASC,OAAS9M,EAAO6E,aAAagI,SAASC,OAAS9M,EAAO+J,KAAK8C,SAASC,OAAS9M,EAAOiF,KAAK4H,SAASC,OAAS9M,EAAOiG,YAAY4G,SAASC,OAAS9M,EAAO+M,gBAAgBF,SAASC,OAC5R9M,EAAOoK,iBAAiBuC,KAAKzF,OAASlH,EAAO6J,OAAOgD,SAASF,KAAO3M,EAAO0E,eAAemI,SAASF,KAAO3M,EAAO6E,aAAagI,SAASF,KAAO3M,EAAO+J,KAAK8C,SAASF,KAAO3M,EAAOiF,KAAK4H,SAASF,KAAO3M,EAAOiG,YAAY4G,SAASF,KAAO3M,EAAO+M,gBAAgBF,SAASF,KACzQ3M,EAAOoK,iBAAiBwC,OAAO1F,OAASlH,EAAO6J,OAAOgD,SAASD,OAAS5M,EAAO0E,eAAemI,SAASD,OAAS5M,EAAO6E,aAAagI,SAASD,OAAS5M,EAAO+J,KAAK8C,SAASD,OAAS5M,EAAOiF,KAAK4H,SAASD,OAAS5M,EAAOiG,YAAY4G,SAASD,OAAS5M,EAAO+M,gBAAgBF,SAASD,OAGvR5M,EAAOoK,iBAAiBsC,YAAYO,MAAQjN,EAAOoK,iBAAiBsC,YAAYxF,QAAU6O,EAASrM,WAAWgD,YAC9G1M,EAAOoK,iBAAiBuC,KAAKM,MAAQjN,EAAOoK,iBAAiBuC,KAAKzF,QAAU6O,EAASrM,WAAWiD,KAChG3M,EAAOoK,iBAAiBwC,OAAOK,MAAQjN,EAAOoK,iBAAiBwC,OAAO1F,QAAU6O,EAASrM,WAAWkD,OAEpGvU,QAAQC,IAAIkb,EAAgBxT,GAE5BgE,GAAe,GACRhE,MAuCK,kBFjWtB,CACE2P,KAAM,uBACN3W,OAAQmD,EACR0T,UDtCJ,SAAiB3X,GAAO,IAAA0F,EACkBC,oBAAS,GAD3BC,EAAAjH,OAAAkH,EAAA,EAAAlH,CAAA+G,EAAA,GACbmG,EADajG,EAAA,GACAkG,EADAlG,EAAA,GAAAI,EAGsBL,mBAAS,GAH/BM,EAAAtH,OAAAkH,EAAA,EAAAlH,CAAAqH,EAAA,GAGbgY,EAHa/X,EAAA,GAGEgY,EAHFhY,EAAA,GAAAG,EAKsBT,mBAAS,CAC/CwQ,YAAa,GACbO,iBAAkB,GAClBnG,eAAgB,GAChBmB,oBAAqB,KATLlL,EAAA7H,OAAAkH,EAAA,EAAAlH,CAAAyH,EAAA,GAKbgQ,EALa5P,EAAA,GAKE0P,EALF1P,EAAA,GAAAG,EAYwBhB,mBAAS,CACjDuY,gBAAiB,CACbC,MAAO,GACPC,OAAQ,GACRtR,MAAO,IAEXuR,oBAAqB,CACjBF,MAAO,GACPC,OAAQ,GACRtR,MAAO,IAEXwR,uBAAwB,CACpB1H,aAAc,CACVuH,MAAO,GACPC,OAAQ,GACRtR,MAAO,IAEX+J,aAAc,CACVsH,MAAO,GACPC,OAAQ,GACRtR,MAAO,IAEXgK,aAAc,CACVqH,MAAO,GACPC,OAAQ,GACRtR,MAAO,KAGfyR,mDAAoD,CAChDC,eAAiB,CACbC,sBAAuB,OACvBC,eAAgB,CACZjC,EAAK,QACLC,EAAK,QACLC,EAAK,QACLgC,EAAK,SAETlK,KAAM,UAEVmK,eAAgB,CACZH,sBAAuB,OACvBC,eAAgB,CACZjC,EAAK,QACLC,EAAK,QACLC,EAAK,QACLgC,EAAK,SAETlK,KAAM,UAEVoK,eAAgB,CACZJ,sBAAuB,OACvBC,eAAgB,CACZjC,EAAK,OACLC,EAAK,MACLC,EAAK,QACLgC,EAAK,SAETlK,KAAM,UAGdqK,mDAAoD,CAChDrC,EAAK,CACDsC,wBAAyB,CACrBC,EAAK,QACLC,GAAM,QACNC,GAAM,QACNC,GAAM,OACNC,GAAM,SAGd1C,EAAK,CACDqC,wBAAyB,CACrBC,EAAK,QACLC,GAAM,QACNC,GAAM,QACNC,GAAM,OACNC,GAAM,QAGdzC,EAAK,CACDoC,wBAAyB,CACrBC,EAAK,QACLC,GAAM,QACNC,GAAM,QACNC,GAAM,OACNC,GAAM,UAGdT,EAAK,CACDI,wBAAyB,CACrBC,EAAK,OACLC,GAAM,OACNC,GAAM,OACNC,GAAM,OACNC,GAAM,UAGdC,KAAQ,CACJN,wBAAyB,CACrBC,EAAK,QACLC,GAAM,QACNC,GAAM,QACNC,GAAM,OACNC,GAAM,WAIlBE,mCAAoC,CAChCC,uBAAwB,CACpBC,GAAM,CACFC,eAAgB,CACZC,UAAW,QACXC,QAAS,SAGjBC,GAAM,CACFH,eAAgB,CACZC,UAAW,QACXC,QAAS,SAGjBE,GAAM,CACFJ,eAAgB,CACZC,UAAW,QACXC,QAAS,SAIrBG,yBAA0B,CACtBC,EAAK,CACDN,eAAgB,CACZC,UAAW,QACXC,QAAS,QAGjBK,EAAK,CACDP,eAAgB,CACZC,UAAW,QACXC,QAAS,SAGjBM,EAAK,CACDR,eAAgB,CACZC,UAAW,QACXC,QAAS,WAKzBO,iBAAkB,CACdV,GAAM,CACFO,EAAK,CACDX,GAAM,KACNe,GAAM,KACNX,GAAM,MAEVQ,EAAK,CACDZ,GAAM,KACNe,GAAM,KACNX,GAAM,MAEVS,EAAK,CACDb,GAAM,KACNe,GAAM,KACNX,GAAM,OAGdI,GAAM,CACFG,EAAK,CACDX,GAAM,KACNe,GAAM,KACNX,GAAM,MAEVQ,EAAK,CACDZ,GAAM,KACNe,GAAM,KACNX,GAAM,MAEVS,EAAK,CACDb,GAAM,IACNe,GAAM,KACNX,GAAM,OAGdK,GAAM,CACFE,EAAK,CACDX,GAAM,KACNe,GAAM,KACNX,GAAM,MAEVQ,EAAK,CACDZ,GAAM,IACNe,GAAM,KACNX,GAAM,MAEVS,EAAK,CACDb,GAAM,KACNe,GAAM,KACNX,GAAM,QAIlBY,WAAY,CACRC,sBAAuB,CACnBlC,MAAO,GACPC,OAAQ,IAEZkC,oBAAqB,CACjBnC,MAAO,GACPC,OAAQ,IAEZmC,mBAAoB,CAChBpC,MAAO,IAEXqC,wBAAyB,CACrBrC,MAAO,IAEXvI,eAAgB,CACZuI,MAAO,GACPC,OAAQ,IAEZqC,qBAAsB,CAClBtC,MAAO,KAGfuC,4BAA6B,CACzB9Q,SAAU,CACNuO,MAAO,GACPC,OAAQ,IAEZzO,WAAY,CACRwO,MAAO,GACPC,OAAQ,IAEZpH,SAAU,CACNmH,MAAO,GACPC,OAAQ,KAGhBuC,WAAY,CACR/L,OAAQ,CACJuJ,MAAO,GACPC,OAAQ,IAEZ3J,KAAM,CACF0J,MAAO,GACPC,OAAQ,KAGhBwC,YAAa,CACThM,OAAQ,CACJuJ,MAAO,GACPC,OAAQ,IAEZ3J,KAAM,CACF0J,MAAO,GACPC,OAAQ,KAGhBlH,cAAe,CACXqI,uBAAwB,CACpBxQ,OAAQ,CACJoP,MAAO,GACPC,OAAQ,IAEZyC,iBAAkB,CACd1C,MAAO,GACPC,OAAQ,KAGhB0B,yBAA0B,CACtB/Q,OAAQ,CACJoP,MAAO,GACPC,OAAQ,IAEZyC,iBAAkB,CACd1C,MAAO,GACPC,OAAQ,KAGhB0C,aAAc,CACV3C,MAAO,GACPC,OAAQ,KAGhB9S,SAAU,CACN+L,SAAU,CACN9L,SAAU,GACVI,WAAY,IAEhB2L,WAAY,CACR/L,SAAU,GACVI,WAAY,KAGpBuG,iBAAkB,CACdsC,YAAa,CACTxF,OAAQ,GACR+F,MAAO,IAEXN,KAAM,CACFzF,OAAQ,GACR+F,MAAO,IAEX4B,IAAK,CACDC,aAAc,CACV5H,OAAQ,GACR+F,MAAO,IAEX8B,aAAc,CACV7H,OAAQ,GACR+F,MAAO,IAEX+B,aAAc,CACV9H,OAAQ,GACR+F,MAAO,KAGfgC,MAAO,CACH/H,OAAQ,GACR+F,MAAO,IAEXiC,SAAU,CACNhI,OAAQ,GACR+F,MAAO,KAGf9J,QAAS,CACLiM,cAAe,CACXC,gBAAiB,GACjBC,kBAAmB,GACnBJ,SAAU,OAvVFnQ,EAAAlI,OAAAkH,EAAA,EAAAlH,CAAAgI,EAAA,GAYbqG,EAZanG,EAAA,GAYGoG,EAZHpG,EAAA,GA4Vdka,EAAyB,WAC3B9C,EAAiB,SAAA/Q,GAAK,OAAIA,EAAQ,KAmJtC,OACI7M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAWmD,OAAK,EAAC7D,UAAU,oCAEvBH,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAKmE,WAAS,EAAC7E,UAAU,oBACrBH,EAAAC,EAAAC,cAAC+E,EAAD,CAAWd,GAAG,IAAIpG,MAAM,UAAUuG,SAAS,aAAanE,UAAU,kBAKlEqL,EACAxL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACygB,GAAD,CAASlZ,OAAQkF,KAErB3M,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,QAAQ1M,QAAS,SAAAyH,GACxC2D,GAAe,KADnB,UAMRzL,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACIb,EAAAC,EAAAC,cAACW,EAAA,EAAD,KACKvC,OAAA0O,EAAA,EAAA1O,CAAI2O,MAAM0Q,IAAgB3a,IAAI,SAAC8E,EAAGoF,GAAJ,OAAUlN,EAAAC,EAAAC,cAAC0gB,GAAD,CAAOzd,IAAK+J,EAAGvF,MAAOuF,EAAG6I,cAAeA,EAAeF,iBAAkBA,EAAkB6K,uBAAwBA,MAC5J1gB,EAAAC,EAAAC,cAAC2gB,GAAD,CAAa9K,cAAeA,EAAeF,iBAAkBA,IAC7D7V,EAAAC,EAAAC,cAAC4gB,GAAD,CAAU/K,cAAeA,EAAeF,iBAAkBA,IAC1D7V,EAAAC,EAAAC,cAAC6gB,GAAD,CAAehL,cAAeA,EAAeF,iBAAkBA,KAEnE7V,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAK4C,GAAG,MACJzD,EAAAC,EAAAC,cAACW,EAAA,EAAD,CAAQC,KAAK,SAASiM,KAAK,QAAQ1M,QAAS,SAAAyH,GA5K5D8E,EAAkB,SAAAnF,GAEd,IAAMuZ,EAAOjL,EAAcD,YACrBiI,EAAShI,EAAcM,iBACvBpL,EAAW8K,EAAc7F,eACzBsN,EAAWzH,EAAc1E,oBAsI/B,OAnIA5J,EAAOoW,gBAAgBpR,MAAQ,EAC/BhF,EAAOuW,oBAAoBvR,MAAQ,EACnChF,EAAOwW,uBAAuB,cAAcxR,MAAQ,EACpDhF,EAAOwW,uBAAuB,cAAcxR,MAAQ,EACpDhF,EAAOwW,uBAAuB,cAAcxR,MAAQ,EAEpDuU,EAAKpT,QAAQ,SAAC9F,EAAGH,GACb,IAAIsZ,GAAaD,EAAKrZ,GAAOiN,YAAcoM,EAAKrZ,GAAOe,cACnDwY,EAAmB,EAEvBF,EAAKrZ,GAAO6N,uBAAuBC,MAAM7H,QAAQ,SAAC0M,EAAIC,GAClD,IAAI/Q,GAAQwX,EAAKrZ,GAAO6N,uBAAuBC,MAAM8E,GAAI/Q,MAAQwX,EAAKrZ,GAAO6N,uBAAuBC,MAAM8E,GAAI1N,MAE9GqU,GAAoB1X,IAGxB/B,EAAOoW,gBAAgBC,MAAMnW,GAASsZ,EAAYC,EAClDzZ,EAAOuW,oBAAoBF,MAAMnW,GAASmG,KAAKC,KAA2C,KAAtCtG,EAAOoW,gBAAgBC,MAAMnW,IACjFF,EAAOoW,gBAAgBpR,OAAShF,EAAOoW,gBAAgBC,MAAMnW,GAC7DF,EAAOuW,oBAAoBvR,OAASqB,KAAKC,KAA+C,KAA1CtG,EAAOuW,oBAAoBF,MAAMnW,IAE/EF,EAAOwW,uBAAuB+C,EAAKrZ,GAAOkN,YAAYE,QAAQ+I,MAAMnW,GAASmG,KAAKC,KAA+C,KAA1CtG,EAAOuW,oBAAoBF,MAAMnW,IACxHF,EAAOwW,uBAAuB+C,EAAKrZ,GAAOkN,YAAYE,QAAQtI,OAAShF,EAAOwW,uBAAuB+C,EAAKrZ,GAAOkN,YAAYE,QAAQ+I,MAAMnW,GAE3IF,EAAOsY,WAAWC,sBAAsBlC,MAAMnW,GAASF,EAAOyW,mDAAmD8C,EAAKrZ,GAAOkN,YAAYC,IAAIuJ,eAAe2C,EAAKrZ,GAAOmM,cACxKrM,EAAOsY,WAAWE,oBAAoBnC,MAAMnW,GAASF,EAAOyW,mDAAmD8C,EAAKrZ,GAAOkN,YAAYC,IAAIV,KAC3I3M,EAAOsY,WAAWG,mBAAmBpC,MAAMnW,GAASF,EAAOgX,mDAAmDuC,EAAKrZ,GAAOmM,cAAc4K,wBAAwBsC,EAAKrZ,GAAOqN,kBAC5KvN,EAAOsY,WAAWI,wBAAwBrC,MAAMnW,GAASF,EAAOgX,mDAAP,KAAkEC,wBAAwBsC,EAAKrZ,GAAOqN,kBAC/JvN,EAAOsY,WAAWxK,eAAeuI,MAAMnW,IAAUqZ,EAAKrZ,GAAOuN,iBAAiBK,eAE9C,QAA5ByL,EAAKrZ,GAAOsN,YAAuBxN,EAAOsY,WAAWK,qBAAqBtC,MAAMnW,GAAS,EACxD,OAA5BqZ,EAAKrZ,GAAOsN,cAAsBxN,EAAOsY,WAAWK,qBAAqBtC,MAAMnW,GAAS,GAEjGF,EAAO4Y,4BAA4B9Q,SAASuO,MAAMnW,GAASF,EAAOwX,mCAAmCC,uBAAuB8B,EAAKrZ,GAAOuN,iBAAiBC,kBAAkBiK,eAAeE,QAC1L7X,EAAO4Y,4BAA4B/Q,WAAWwO,MAAMnW,GAASF,EAAOwX,mCAAmCQ,yBAAyBuB,EAAKrZ,GAAOuN,iBAAiBE,oBAAoBgK,eAAeE,QAChM7X,EAAO4Y,4BAA4B1J,SAASmH,MAAMnW,GAASF,EAAOoY,iBAAiBmB,EAAKrZ,GAAOuN,iBAAiBC,kBAAkB6L,EAAKrZ,GAAOuN,iBAAiBE,oBAAoB4L,EAAKrZ,GAAOuN,iBAAiBI,iBAEhN7N,EAAO6Y,WAAW/L,OAAOuJ,MAAMnW,GAASmG,KAAKC,MAAMtG,EAAOoW,gBAAgBC,MAAMnW,IAAUF,EAAOsY,WAAWC,sBAAsBlC,MAAMnW,IACxIF,EAAO6Y,WAAWlM,KAAK0J,MAAMnW,IAAUF,EAAOoW,gBAAgBC,MAAMnW,IAAUF,EAAOsY,WAAWE,oBAAoBnC,MAAMnW,GAE1HF,EAAO8Y,YAAYhM,OAAOuJ,MAAMnW,GAASmG,KAAKC,MAAMtG,EAAOoW,gBAAgBC,MAAMnW,IAAUF,EAAOsY,WAAWG,mBAAmBpC,MAAMnW,IAAUF,EAAOsY,WAAWK,qBAAqBtC,MAAMnW,IAC7LF,EAAO8Y,YAAYnM,KAAK0J,MAAMnW,IAAUF,EAAOoW,gBAAgBC,MAAMnW,IAAUF,EAAOsY,WAAWI,wBAAwBrC,MAAMnW,IAAUF,EAAOsY,WAAWK,qBAAqBtC,MAAMnW,GAEtLF,EAAOoP,cAAcqI,uBAAuBxQ,OAAOoP,MAAMnW,IAAUF,EAAOoW,gBAAgBC,MAAMnW,IAAUF,EAAO4Y,4BAA4B9Q,SAASuO,MAAMnW,GAC5JF,EAAOoP,cAAcqI,uBAAuBsB,iBAAiB1C,MAAMnW,GAASmG,KAAKC,KAAKtG,EAAOoP,cAAcqI,uBAAuBxQ,OAAOoP,MAAMnW,IAAQqZ,EAAKrZ,GAAOuN,iBAAiBG,cAEpL5N,EAAOoP,cAAc4I,yBAAyB/Q,OAAOoP,MAAMnW,IAAUF,EAAOoW,gBAAgBC,MAAMnW,IAAUF,EAAO4Y,4BAA4B/Q,WAAWwO,MAAMnW,GAChKF,EAAOoP,cAAc4I,yBAAyBe,iBAAiB1C,MAAMnW,GAASmG,KAAKC,KAAKtG,EAAOoP,cAAc4I,yBAAyB/Q,OAAOoP,MAAMnW,IAAQqZ,EAAKrZ,GAAOuN,iBAAiBG,cAExL5N,EAAOoP,cAAc4J,aAAa3C,MAAMnW,IAAUF,EAAOoW,gBAAgBC,MAAMnW,GAASF,EAAO4Y,4BAA4B1J,SAASmH,MAAMnW,KAG9IF,EAAOoW,gBAAgBE,QAAkC,GAAtBA,EAAO7H,aAA2C,GAArB6H,EAAO5H,cAAqB4H,EAAO9H,cAAgB8H,EAAO5H,aAAe4H,EAAO9H,cAAiB8H,EAAO3H,iBAAmB,GAC3L3O,EAAOoW,gBAAgBpR,OAAShF,EAAOoW,gBAAgBE,OACvDtW,EAAOuW,oBAAoBD,OAAyC,KAAhCtW,EAAOoW,gBAAgBE,OAC3DtW,EAAOuW,oBAAoBvR,OAASqB,KAAKC,KAAyC,KAApCtG,EAAOuW,oBAAoBD,QAEzEtW,EAAOwW,uBAAuBF,EAAOlJ,YAAYE,QAAQgJ,OAASjQ,KAAKC,KAAyC,KAApCtG,EAAOuW,oBAAoBD,QACvGtW,EAAOwW,uBAAuBF,EAAOlJ,YAAYE,QAAQtI,OAAShF,EAAOwW,uBAAuBF,EAAOlJ,YAAYE,QAAQgJ,OAE3HtW,EAAOsY,WAAWC,sBAAsBjC,OAAStW,EAAOyW,mDAAmDH,EAAOlJ,YAAYC,IAAIuJ,eAAeN,EAAOjK,cACxJrM,EAAOsY,WAAWE,oBAAoBlC,OAAStW,EAAOyW,mDAAmDH,EAAOlJ,YAAYC,IAAIV,KAChI3M,EAAOsY,WAAWxK,eAAewI,QAAUA,EAAO7I,iBAAiBK,eAEnE9N,EAAO4Y,4BAA4B9Q,SAASwO,OAAStW,EAAOwX,mCAAmCC,uBAAuBnB,EAAO7I,iBAAiBC,kBAAkBiK,eAAeE,QAC/K7X,EAAO4Y,4BAA4B/Q,WAAWyO,OAAStW,EAAOwX,mCAAmCQ,yBAAyB1B,EAAO7I,iBAAiBE,oBAAoBgK,eAAeE,QACrL7X,EAAO4Y,4BAA4B1J,SAASoH,OAAStW,EAAOoY,iBAAiB9B,EAAO7I,iBAAiBC,kBAAkB4I,EAAO7I,iBAAiBE,oBAAoB2I,EAAO7I,iBAAiBI,iBAE3L7N,EAAO6Y,WAAW/L,OAAOwJ,OAASjQ,KAAKC,MAAMtG,EAAOoW,gBAAgBE,QAAUtW,EAAOsY,WAAWC,sBAAsBjC,QACtHtW,EAAO6Y,WAAWlM,KAAK2J,QAAUtW,EAAOoW,gBAAgBE,QAAUtW,EAAOsY,WAAWE,oBAAoBlC,OAExGtW,EAAOoP,cAAcqI,uBAAuBxQ,OAAOqP,QAAUtW,EAAOoW,gBAAgBE,QAAUtW,EAAO4Y,4BAA4B9Q,SAASwO,OAC1ItW,EAAOoP,cAAcqI,uBAAuBsB,iBAAiBzC,OAASjQ,KAAKC,KAAKtG,EAAOoP,cAAcqI,uBAAuBxQ,OAAOqP,QAAQA,EAAO7I,iBAAiBG,cAEnK5N,EAAOoP,cAAc4I,yBAAyB/Q,OAAOqP,QAAUtW,EAAOoW,gBAAgBE,QAAUtW,EAAO4Y,4BAA4B/Q,WAAWyO,OAC9ItW,EAAOoP,cAAc4I,yBAAyBe,iBAAiBzC,OAASjQ,KAAKC,KAAKtG,EAAOoP,cAAc4I,yBAAyB/Q,OAAOqP,QAAQA,EAAO7I,iBAAiBG,cAEvK5N,EAAOoP,cAAc4J,aAAa1C,QAAUtW,EAAOoW,gBAAgBE,OAAStW,EAAO4Y,4BAA4B1J,SAASoH,OAExHtW,EAAOwD,SAAS+L,SAAS9L,SAAW4C,KAAKC,KAAK,IAACtG,EAAOuW,oBAAoBvR,OAAoB,IAAIxB,EAASf,gBAAiBe,EAASb,gBAAiBa,EAAS6E,iBAC/JrI,EAAOwD,SAASgM,WAAW/L,SAAW4C,KAAKC,KAAK,IAACtG,EAAOoW,gBAAgBpR,OAAkB,IAAIxB,EAASf,gBAAiBe,EAASb,gBAAiBa,EAAS6E,iBAE3JrI,EAAOwD,SAAS+L,SAAS1L,WAAc7D,EAAOwD,SAAS+L,SAAS9L,UAAYD,EAASf,eAAiBe,EAASX,YAAgB7C,EAAOwD,SAAS+L,SAAS9L,UAAYD,EAASb,eAAiBa,EAAST,YAAgB/C,EAAOwD,SAAS+L,SAAS9L,UAAYD,EAAS6E,eAAiB7E,EAAS+E,YAC/RvI,EAAOwD,SAASgM,WAAW3L,WAAc7D,EAAOwD,SAASgM,WAAW/L,UAAYD,EAASf,eAAiBe,EAASX,YAAgB7C,EAAOwD,SAASgM,WAAW/L,UAAYD,EAASb,eAAiBa,EAAST,YAAgB/C,EAAOwD,SAASgM,WAAW/L,UAAYD,EAAS6E,eAAiB7E,EAAS+E,YAEvSvI,EAAOoK,iBAAiBsC,YAAYxF,OAAS,EAC7ClH,EAAOoK,iBAAiBuC,KAAKzF,OAAS,EACtClH,EAAO6Y,WAAW/L,OAAOuJ,MAAMlQ,QAAQ,SAAC9F,EAAGH,GACvCF,EAAOoK,iBAAiBsC,YAAYxF,QAAUlH,EAAO6Y,WAAW/L,OAAOuJ,MAAMnW,GAC7EF,EAAOoK,iBAAiBuC,KAAKzF,QAAUlH,EAAO6Y,WAAWlM,KAAK0J,MAAMnW,KAExEF,EAAOoK,iBAAiBsC,YAAYxF,QAAUlH,EAAO6Y,WAAW/L,OAAOwJ,OACvEtW,EAAOoK,iBAAiBuC,KAAKzF,QAAUlH,EAAO6Y,WAAWlM,KAAK2J,OAC9DtW,EAAO8Y,YAAYhM,OAAOuJ,MAAMlQ,QAAQ,SAAC9F,EAAGH,GACxCF,EAAOoK,iBAAiBsC,YAAYxF,QAAUlH,EAAO8Y,YAAYhM,OAAOuJ,MAAMnW,GAC9EF,EAAOoK,iBAAiBuC,KAAKzF,QAAUlH,EAAO8Y,YAAYnM,KAAK0J,MAAMnW,KAGzEF,EAAOoK,iBAAiByE,IAAI,cAAc3H,OAASlH,EAAOwW,uBAAuB,cAAcxR,MAC/FhF,EAAOoK,iBAAiByE,IAAI,cAAc3H,OAASlH,EAAOwW,uBAAuB,cAAcxR,MAC/FhF,EAAOoK,iBAAiByE,IAAI,cAAc3H,OAASlH,EAAOwW,uBAAuB,cAAcxR,MAE/FhF,EAAOmD,QAAQiM,cAAcC,gBAAkB,EAC/CrP,EAAOmD,QAAQiM,cAAcE,kBAAoB,EACjDtP,EAAOoP,cAAcqI,uBAAuBsB,iBAAiB1C,MAAMlQ,QAAQ,SAAC9F,EAAGH,GAC3EF,EAAOmD,QAAQiM,cAAcC,iBAAmBrP,EAAOoP,cAAcqI,uBAAuBsB,iBAAiB1C,MAAMnW,GACnHF,EAAOmD,QAAQiM,cAAcE,mBAAqBtP,EAAOoP,cAAc4I,yBAAyBe,iBAAiB1C,MAAMnW,KAE3HF,EAAOmD,QAAQiM,cAAcC,iBAAmBrP,EAAOoP,cAAcqI,uBAAuBsB,iBAAiBzC,OAC7GtW,EAAOmD,QAAQiM,cAAcE,mBAAqBtP,EAAOoP,cAAc4I,yBAAyBe,iBAAiBzC,OAEjHtW,EAAOoK,iBAAiB6E,MAAM/H,OAASlH,EAAOmD,QAAQiM,cAAcC,gBAAkBrP,EAAOmD,QAAQiM,cAAcE,kBACnHtP,EAAOoK,iBAAiB8E,SAAShI,OAAS,EAE1ClH,EAAOoP,cAAc4J,aAAa3C,MAAMlQ,QAAQ,SAAC9F,EAAGH,GAChDF,EAAOoK,iBAAiB8E,SAAShI,QAAUlH,EAAOoP,cAAc4J,aAAa3C,MAAMnW,KAEvFF,EAAOoK,iBAAiB8E,SAAShI,QAAUlH,EAAOoP,cAAc4J,aAAa1C,OAG7EtW,EAAOoK,iBAAiBsC,YAAYO,MAAQjN,EAAOoK,iBAAiBsC,YAAYxF,QAAU6O,EAASrJ,YACnG1M,EAAOoK,iBAAiBuC,KAAKM,MAAQjN,EAAOoK,iBAAiBuC,KAAKzF,QAAU6O,EAASpJ,KACrF3M,EAAOoK,iBAAiByE,IAAI,cAAc5B,MAAQjN,EAAOoK,iBAAiByE,IAAI,cAAc3H,QAAU6O,EAASlH,IAAI,cACnH7O,EAAOoK,iBAAiByE,IAAI,cAAc5B,MAAQjN,EAAOoK,iBAAiByE,IAAI,cAAc3H,QAAU6O,EAASlH,IAAI,cACnH7O,EAAOoK,iBAAiByE,IAAI,cAAc5B,MAAQjN,EAAOoK,iBAAiByE,IAAI,cAAc3H,QAAU6O,EAASlH,IAAI,cACnH7O,EAAOoK,iBAAiB6E,MAAMhC,MAAQjN,EAAOoK,iBAAiB6E,MAAM/H,QAAU6O,EAAS9G,MACvFjP,EAAOoK,iBAAiB8E,SAASjC,MAAQjN,EAAOoK,iBAAiB8E,SAAShI,QAAU6O,EAAS7G,SAE7F7W,QAAQC,IAAIgW,EAAetO,GAE3BgE,GAAe,GACRhE,MAiCK,kBCretB,CACE2P,KAAM,0BACN3W,OAAQmD,EACR0T,UAAW/L,cGnDf4V,KAAgBC,WAAWC,+CAAYC,gBAAkB,kBAEzD,IA0CeC,GA1CK,SAACC,GAAmC,IAAjBC,EAAiBC,UAAAhT,OAAA,QAAAT,IAAAyT,UAAA,GAAAA,UAAA,GAAP,GACzCC,EAAY,SAAAC,GAKhBT,KAAgBU,IAAhBvjB,OAAAwE,EAAA,EAAAxE,CAAA,CACEsjB,QACGH,IAELN,KAAgBW,SAASF,IAGrBG,EAAWV,+CAAYW,oBAAsB,GA0BnD,OAvBS,SAAAC,GAAA,SAAAC,IAAA,OAAA5jB,OAAAC,EAAA,EAAAD,CAAAE,KAAA0jB,GAAA5jB,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA4jB,GAAAC,MAAA3jB,KAAAkjB,YAAA,OAAApjB,OAAA8jB,EAAA,EAAA9jB,CAAA4jB,EAAAD,GAAA3jB,OAAA+jB,EAAA,EAAA/jB,CAAA4jB,EAAA,EAAA/e,IAAA,oBAAA6E,MAAA,WAGL,IAAM4Z,EAAOpjB,KAAKmB,MAAM2iB,SAASC,SAAW/jB,KAAKmB,MAAM2iB,SAASE,OAChEb,EAAS,GAAAc,OAAIV,GAAJU,OAAeb,MAJnB,CAAAze,IAAA,qBAAA6E,MAAA,SAOY0a,GACjB,IAAMC,EACJD,EAAUJ,SAASC,SAAWG,EAAUJ,SAASE,OAC7CI,EACJpkB,KAAKmB,MAAM2iB,SAASC,SAAW/jB,KAAKmB,MAAM2iB,SAASE,OAEjDG,IAAgBC,GAClBjB,EAAS,GAAAc,OAAIV,GAAJU,OAAeG,MAdrB,CAAAzf,IAAA,SAAA6E,MAAA,WAmBL,OAAOhI,EAAAC,EAAAC,cAACshB,EAAqBhjB,KAAKmB,WAnB7BuiB,EAAA,CAAiB3hB,cCXbsiB,yBAAA,kBACb7iB,EAAAC,EAAAC,cAAC4iB,EAAA,EAAD,CAAQC,SAAU1B,+CAAYW,oBAAsB,IAClDhiB,EAAAC,EAAAC,cAAA,WACGiX,GAAOnU,IAAI,SAACggB,EAAOrb,GAClB,OACE3H,EAAAC,EAAAC,cAAC+iB,EAAA,EAAD,CACE9f,IAAKwE,EACLyP,KAAM4L,EAAM5L,KACZC,MAAO2L,EAAM3L,MACbC,UAAWiK,GAAY,SAAA5hB,GACrB,OACEK,EAAAC,EAAAC,cAAC8iB,EAAMviB,OAAWd,EAChBK,EAAAC,EAAAC,cAAC8iB,EAAM1L,UAAc3X,cCVnBujB,QACW,cAA7BC,OAAOb,SAASc,UAEe,UAA7BD,OAAOb,SAASc,UAEhBD,OAAOb,SAASc,SAASC,MACvB,2DCZN,IAAMC,GAAiB,WACnBC,IAASC,OAAOxjB,EAAAC,EAAAC,cAAC2iB,GAAD,MAASY,SAASC,eAAe,UAGjDP,OAAOQ,QACPF,SAASG,iBAAiB,cAAe,WACrCN,OACD,GAEHA,KDkHE,kBAAmBO,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.accdf352.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.60a85991.svg\";","export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    {\n      title: \"Estimations\",\n      to: \"/\",\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Estimation\",\n      to: \"/estimations-add\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Earthworks Estimation\",\n      to: \"/estimations-earthworks\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Formworks Estimation\",\n      to: \"/estimations-formworks\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Concrete Estimation\",\n      to: \"/estimations-concrete\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Masonry Estimation\",\n      to: \"/estimations-masonry\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    }\n  ];\n}\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n    console.log('toggle open');\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top mr-1\"\n                style={{ maxWidth: \"25px\" }}\n                src={require(\"../../../images/shards-dashboards-logo.svg\")}\n                alt=\"Estimato\"\n              />\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                  Estimato\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\n\nconst SidebarNavItem = ({ item }) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.htmlBefore && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n        />\n      )}\n      {item.title && <span>{item.title}</span>}\n      {item.htmlAfter && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n        />\n      )}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"../../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: true,\n      sidebarNavItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible ? \"open\" : \"\"\n    );\n\n    console.log(this.state.menuVisible, classes);\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        <SidebarSearch />\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nMainSidebar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nMainSidebar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default MainSidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import React from \"react\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"../../assets/quill.css\";\r\n\r\nconst AddNewEstimationForm = () => (\r\n  <ListGroup flush>\r\n    <ListGroupItem className=\"p-3\">\r\n      <Row>\r\n        <Col>\r\n          <Form>\r\n            <Row form>\r\n              <Col md=\"12\" className=\"form-group\">\r\n                <label htmlFor=\"es-estimation-label\">Estimation Label</label>\r\n                <FormInput\r\n                  id=\"es-estimation-label\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Estimation Label\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Button type=\"submit\">Create New Estimation</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </ListGroupItem>\r\n  </ListGroup>\r\n);\r\n\r\nexport default AddNewEstimationForm;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AddNewEstimation from \"../components/add-new-estimation/AddNewEstimationForm\";\r\n\r\nfunction Estimations(props) {\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Estimations\" subtitle=\"All Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            <Row>\r\n                <Col>\r\n                    <AddNewEstimation/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Estimations;","import React from \"react\";\r\nimport { Container, Row, Col } from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AddNewEstimationForm from '../components/add-new-estimation/AddNewEstimationForm';\r\n\r\nconst AddNewEstimation = () => (\r\n  <Container fluid className=\"main-content-container px-4 pb-4\">\r\n    {/* Page Header */}\r\n    <Row noGutters className=\"page-header py-4\">\r\n      <PageTitle sm=\"4\" title=\"Add New Estimation\" subtitle=\"Estimations\" className=\"text-sm-left\" />\r\n    </Row>\r\n\r\n    <Row>\r\n      {/* Editor */}\r\n      <Col lg=\"12\" md=\"12\">\r\n        <AddNewEstimationForm />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default AddNewEstimation;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnFootingDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n    const [footingType, setFootingType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: '', y: '', z: ''});\r\n    const [columnCircular, setColumnCircular] = useState({d: '', z: ''});\r\n\r\n    const [footingRectangular, setFootingReactangular] = useState({x: '', y: '', z: ''});\r\n    const [footingCircular, setFootingCircular] = useState({d: '', z: ''});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.columnFootingValues[props.index] = {\r\n                columnType: columnType,\r\n                footingType: footingType,\r\n                columnRectangular: columnRectangular,\r\n                columnCircular: columnCircular,\r\n                footingRectangular: footingRectangular,\r\n                footingCircular: footingCircular,\r\n                columnCount: columnCount\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [columnType, footingType, columnRectangular, columnCircular, footingRectangular, footingCircular, columnCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Column Footing Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"ew-cfd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.x = e.target.value; return object;})} id=\"ew-cfd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.y = e.target.value; return object;})} id=\"ew-cfd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.z = e.target.value; return object;})} id=\"ew-cfd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"ew-cfd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"ew-cfd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-type-of-footing\">Type of Footing</label>\r\n                                        <FormSelect onChange={e => setFootingType(e.target.value)} id=\"ew-cfd-type-of-footing\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { footingType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.x = e.target.value; return object;})} id=\"ew-cfd-footing-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.y = e.target.value; return object;})} id=\"ew-cfd-footing-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.z = e.target.value; return object;})} id=\"ew-cfd-footing-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { footingType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setFootingCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"ew-cfd-footing-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setFootingCircular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"ew-cfd-footing-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Columns</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnFootingDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction WallFootingDetails(props) {\r\n    const [depthCHB, setDepthCHB] = useState('');\r\n    const [depthWallFooting, setDepthWallFooting] = useState('');\r\n    const [widthFooting, setWidthFooting] = useState('');\r\n    const [wallPerimeter, setWallPerimeter] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.wallFootingValues[props.index] = {\r\n                depthCHB: depthCHB,\r\n                depthWallFooting: depthWallFooting,\r\n                widthFooting: widthFooting,\r\n                wallPerimeter: wallPerimeter\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [depthCHB, depthWallFooting, widthFooting, wallPerimeter]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Wall Footing Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementWallFootingFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-depth-chb\">Depth of CHB from NGL (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-depth-chb\" onChange={e => setDepthCHB(e.target.value)} placeholder=\"Enter depth in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-depth-wall-footing\">Depth of Wall Footing (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-depth-wall-footing\" onChange={e => setDepthWallFooting(e.target.value)} placeholder=\"Enter depth in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-width-footing\">Width of Footing (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-width-footing\" onChange={e => setWidthFooting(e.target.value)} placeholder=\"Enter width in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-wall-perimiter\">Wall Perimiter (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-wall-perimiter\" onChange={e => setWallPerimeter(e.target.value)} placeholder=\"Enter perimeter in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WallFootingDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction GravelBedding(props) {\r\n    const [gravelBeddingDepth, setGravelBeddingDepth] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.gravelBeddingValues = {\r\n                gravelBeddingDepth: gravelBeddingDepth\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [gravelBeddingDepth]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Gravel Bedding</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-gravel-bedding-depth\">Gravel Bedding (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-gravel-bedding-depth\" onChange={e => setGravelBeddingDepth(e.target.value)} placeholder=\"Enter gravel bedding in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default GravelBedding;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticTankDetails(props) {\r\n    const [septicTank, setSepticTank] = useState({x: '', y: '', z: ''});\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.septicTankValues[props.index] = {\r\n                septicTank: septicTank\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [septicTank]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Septic Tank Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementSepticTankFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.x = e.target.value; return object;})} id=\"ew-septic-tank-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.y = e.target.value; return object;})} id=\"ew-septic-tank-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.z = e.target.value; return object;})} id=\"ew-septic-tank-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticTankDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticTankDetails(props) {\r\n    const [onFill, setOnFill] = useState({height: '', area: ''});\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.onFillValues[props.index] = {\r\n                onFill: onFill\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [onFill]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">On-Fill</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementOnFillFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-on-fill-height\">On-Fill Height (m)</label>\r\n                                        <FormInput onChange={e => setOnFill(object => {object.height = e.target.value; return object;})} id=\"ew-on-fill-height\" placeholder=\"Enter Height in meters\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-on-fill-area\">Area to be Filled (m²)</label>\r\n                                        <FormInput onChange={e => setOnFill(object => {object.area = e.target.value; return object;})} id=\"ew-on-fill-area\" placeholder=\"Enter area in meter squared\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticTankDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SlabDetail(props) {\r\n    const [slabDetailArea, setSlabDetailArea] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.slabDetailValues= {\r\n                slabDetailArea: slabDetailArea\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [slabDetailArea]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Slab Detail</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-slab-detail-area\">Area Used for Ground Slab (m²)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-slab-detail-area\" onChange={e => setSlabDetailArea(e.target.value)} placeholder=\"Enter gravel bedding in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SlabDetail;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState();\r\n    const [numberForeman, setNumberForeman] = useState();\r\n    const [laborerWage, setLaborerWage] = useState();\r\n    const [foremanWage, setForemanWage] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setEarthworkValues(values => {\r\n            values.manPowerValues= {\r\n                numberLaborer: numberLaborer,\r\n                numberForeman: numberForeman,\r\n                laborerWage: laborerWage,\r\n                foremanWage: foremanWage\r\n            }\r\n\r\n            return values;\r\n        });\r\n    }, [numberLaborer, numberForeman, laborerWage, foremanWage]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-foreman\" onChange={e => setNumberForeman(e.target.value)} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, { useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Summary(props) {\r\n    useEffect(() => {\r\n        console.log(props.values);\r\n    });\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Summary</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <span>Volume for Excavation: {+props.values.summary.volume_for_excavation.toFixed(3)} m³</span><br/>\r\n                                <span>Volume for Backfill: {+props.values.summary.volume_for_backfill.toFixed(3)} m³</span><br/>\r\n                                <span>Volume for Gravel Bedding: {+props.values.summary.volume_for_gravel_bedding.toFixed(3)} m³</span><br/>\r\n                                <span>Duration of Work: </span><br/>\r\n                                <div className=\"p-2\">\r\n                                    <span>Excavation: {+props.values.manpower.duration.excavation.toFixed(3)} days</span><br/>\r\n                                    <span>Backfill: {+props.values.manpower.duration.backfill.toFixed(3)} days</span><br/>\r\n                                    <span>Gravel Bedding: {+props.values.manpower.duration.gravel_bedding.toFixed(3)} days</span><br/>\r\n                                </div>\r\n                                <span>Labor Costs: </span><br/>\r\n                                <div className=\"p-2\">\r\n                                    <span>Excavation: {+props.values.manpower.labor_cost.excavation.toFixed(3)} PHP</span><br/>\r\n                                    <span>Backfill: {+props.values.manpower.labor_cost.backfill.toFixed(3)} PHP</span><br/>\r\n                                    <span>Gravel Bedding: {+props.values.manpower.labor_cost.gravel_bedding.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col, Button } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport ColumnFootingDetails from \"../../components/earthworks-estimation/ColumnFootingDetails\";\r\nimport WallFootingDetails from \"../../components/earthworks-estimation/WallFootingDetails\";\r\nimport GravelBedding from \"../../components/earthworks-estimation/GravelBedding\";\r\nimport SepticTankDetails from \"../../components/earthworks-estimation/SepticTankDetails\";\r\nimport OnFill from \"../../components/earthworks-estimation/OnFill\";\r\nimport SlabDetail from '../../components/earthworks-estimation/SlabDetail';\r\nimport Manpower from '../../components/earthworks-estimation/Manpower';\r\nimport Summary from '../../components/earthworks-estimation/Summary';\r\n\r\nfunction Earthworks(props) {\r\n    const [summaryView, setSummaryView] = useState(false);\r\n\r\n    const [columnFootingFormCount, setColumnFootingFormCount] = useState(1);\r\n    const [wallFootingFormCount, setWallFootingFormCount] = useState(1);\r\n    const [septicTankFormCount, setSpeticTankFormCount] = useState(1);\r\n    const [onFillFormCount, setOnFillFormCount] = useState(1);\r\n\r\n    const [earthworksValues, setEarthworkValues] = useState({\r\n        columnFootingValues: [],\r\n        wallFootingValues: [],\r\n        gravelBeddingValues: {},\r\n        septicTankValues: [],\r\n        onFillValues: [],\r\n        slabDetailValues: {},\r\n        manPowerValues: {}\r\n    });\r\n\r\n    const [solutionValues, setSolutionValues] = useState({\r\n        column_footing: {\r\n            excavation: {\r\n                rectangular: 0,\r\n                circular: 0\r\n            },\r\n            backfill: {\r\n                rectangular: 0,\r\n                circular: 0\r\n            },\r\n            gravel_bedding: {\r\n                rectangular: 0,\r\n                circular: 0\r\n            }\r\n        },\r\n        wall_footing: {\r\n            excavation: 0,\r\n            gravel_bedding: 0,\r\n            backfill: 0\r\n        },\r\n        plumbing: {\r\n            excavation: 0\r\n        },\r\n        on_fill: {\r\n            total: 0\r\n        },\r\n        slab: {\r\n            gravel_bedding: 0\r\n        },\r\n        manpower: {\r\n            duration: {\r\n                excavation: 0,\r\n                backfill: 0,\r\n                gravel_bedding: 0\r\n            },\r\n            labor_cost: {\r\n                excavation: 0,\r\n                backfill: 0,\r\n                gravel_bedding: 0\r\n            }\r\n        },\r\n        summary: {\r\n            volume_for_excavation: 0,\r\n            volume_for_backfill: 0,\r\n            volume_for_gravel_bedding: 0\r\n        }\r\n    });\r\n\r\n    const incrementColumnFootingFormCount = () => {\r\n        setColumnFootingFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementWallFootingFormCount = () => {\r\n        setWallFootingFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementSepticTankFormCount = () => {\r\n        setSpeticTankFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementOnFillFormCount = () => {\r\n        setOnFillFormCount(count => count + 1);\r\n    }\r\n\r\n    const calculate = () => {\r\n        setSolutionValues(values => {\r\n            // Establish variables\r\n            const column_footing = earthworksValues.columnFootingValues;\r\n            const wall_footing = earthworksValues.wallFootingValues;\r\n            const gravel_bedding = earthworksValues.gravelBeddingValues;\r\n            const septic_tank = earthworksValues.septicTankValues;\r\n            const on_fill = earthworksValues.onFillValues;\r\n            const slab_detail = earthworksValues.slabDetailValues;\r\n            const manpower = earthworksValues.manPowerValues;\r\n\r\n            // Column Footing Excavation Rectangular\r\n            values.column_footing.excavation.rectangular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingRectangular.x * +column_footing[index].footingRectangular.y * (+column_footing[index].columnRectangular.z + +column_footing[index].footingRectangular.z + +gravel_bedding.gravelBeddingDepth) * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.excavation.rectangular += result;\r\n            });\r\n\r\n            // Column Footing Excavation Circular\r\n            values.column_footing.excavation.circular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingCircular.d * (+column_footing[index].columnCircular.z + +column_footing[index].footingCircular.z + +gravel_bedding.gravelBeddingDepth) * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.excavation.circular += result;\r\n            });\r\n\r\n            // Column Footing Backfill Rectangular\r\n            values.column_footing.backfill.rectangular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = ((+column_footing[index].footingRectangular.x * +column_footing[index].footingRectangular.y) - (+column_footing[index].columnRectangular.x * +column_footing[index].columnRectangular.y)) * +column_footing[index].footingRectangular.z * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.backfill.rectangular += result;\r\n            });\r\n\r\n            // Column Footing Backfill Circular\r\n            values.column_footing.backfill.circular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingCircular.z * (+column_footing[index].footingCircular.d - +column_footing[index].columnCircular.d) * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.backfill.circular += result;\r\n            });\r\n\r\n            // Gravel Bedding Rectangular\r\n            values.column_footing.gravel_bedding.rectangular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingRectangular.x * +column_footing[index].footingRectangular.y * +column_footing[index].columnCount * +gravel_bedding.gravelBeddingDepth;\r\n\r\n                values.column_footing.gravel_bedding.rectangular += result;\r\n            });\r\n\r\n            // Gravel Bedding Circular\r\n            values.column_footing.gravel_bedding.circular = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].footingCircular.d * +column_footing[index].columnCount * +gravel_bedding.gravelBeddingDepth;\r\n\r\n                values.column_footing.gravel_bedding.circular += result;\r\n            });\r\n\r\n            // Wall Footing Excavation\r\n            values.wall_footing.excavation = 0;\r\n            wall_footing.forEach((e, index) => {\r\n                let result = +wall_footing[index].widthFooting * (+wall_footing[index].depthCHB + +wall_footing[index].depthWallFooting + +gravel_bedding.gravelBeddingDepth) * +wall_footing[index].wallPerimeter;\r\n\r\n                values.wall_footing.excavation += result;\r\n            });\r\n\r\n            // Wall Footing Gravel Bedding\r\n            values.wall_footing.gravel_bedding = 0;\r\n            wall_footing.forEach((e, index) => {\r\n                let result = +wall_footing[index].widthFooting * +gravel_bedding.gravelBeddingDepth * +wall_footing[index].wallPerimeter;\r\n\r\n                values.wall_footing.gravel_bedding += result;\r\n            });\r\n\r\n            // Wall Footing Backfill\r\n            values.wall_footing.backfill = 0;\r\n            wall_footing.forEach((e, index) => {\r\n                let result = (+wall_footing[index].widthFooting - +wall_footing[index].depthWallFooting) * +wall_footing[index].depthCHB * +wall_footing[index].wallPerimeter;\r\n\r\n                values.wall_footing.backfill += result;\r\n            });\r\n\r\n            // Plumbing\r\n            values.plumbing.excavation = 0;\r\n            septic_tank.forEach((e, index) => {\r\n                let result = +septic_tank[index].septicTank.x * +septic_tank[index].septicTank.y * +septic_tank[index].septicTank.z;\r\n\r\n                values.plumbing.excavation += result;\r\n            });\r\n\r\n            // On Fill\r\n            values.on_fill.total = 0;\r\n            on_fill.forEach((e, index) => {\r\n                let result = +on_fill[index].onFill.height * +on_fill[index].onFill.area;\r\n\r\n                values.on_fill.total += result;\r\n            });\r\n\r\n            // Slab Detail\r\n            values.slab.gravel_bedding = +slab_detail.slabDetailArea * +gravel_bedding.gravelBeddingDepth;\r\n\r\n            // Presummary\r\n            values.summary.volume_for_excavation = values.column_footing.excavation.rectangular + values.wall_footing.excavation + values.plumbing.excavation;\r\n            values.summary.volume_for_backfill = values.column_footing.backfill.rectangular + values.wall_footing.backfill + values.on_fill.total;\r\n            values.summary.volume_for_gravel_bedding = values.column_footing.gravel_bedding.rectangular + values.wall_footing.gravel_bedding + values.slab.gravel_bedding;\r\n\r\n            // Manpower Duration\r\n            values.manpower.duration.excavation = Math.ceil(values.summary.volume_for_excavation * (1/1.35) * (1/(+manpower.numberLaborer + +manpower.numberForeman)));\r\n            values.manpower.duration.backfill = Math.ceil(values.summary.volume_for_backfill * (1/3.87) * (1/(+manpower.numberLaborer + +manpower.numberForeman)));\r\n            values.manpower.duration.gravel_bedding = Math.ceil(values.summary.volume_for_gravel_bedding * (1/3.87) * (1/(+manpower.numberLaborer + +manpower.numberForeman)));\r\n\r\n            // Manpower Labor Costs\r\n            values.manpower.labor_cost.excavation = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.duration.excavation) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.duration.excavation);\r\n            values.manpower.labor_cost.backfill = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.duration.backfill) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.duration.backfill);\r\n            values.manpower.labor_cost.gravel_bedding = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.duration.gravel_bedding) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.duration.gravel_bedding);\r\n\r\n            console.log(earthworksValues, values);\r\n            // Go to Summary View\r\n            setSummaryView(true);\r\n            return values;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Earthworks\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            {\r\n                summaryView ?\r\n                <Row>\r\n                    <Col>\r\n                        <Summary values={solutionValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"close\" onClick={e => {\r\n                            setSummaryView(false);\r\n                        }}>Back</Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Row>\r\n                    <Col>\r\n                        {[...Array(columnFootingFormCount)].map((e, i) => <ColumnFootingDetails key={i} index={i} incrementColumnFootingFormCount={incrementColumnFootingFormCount} setEarthworkValues={setEarthworkValues} />)}\r\n                        {[...Array(wallFootingFormCount)].map((e, i) => <WallFootingDetails key={i} index={i} incrementWallFootingFormCount={incrementWallFootingFormCount} setEarthworkValues={setEarthworkValues} />)}\r\n                        <GravelBedding setEarthworkValues={setEarthworkValues} />\r\n                        {[...Array(septicTankFormCount)].map((e, i) => <SepticTankDetails key={i} index={i} incrementSepticTankFormCount={incrementSepticTankFormCount} setEarthworkValues={setEarthworkValues} />)}\r\n                        {[...Array(onFillFormCount)].map((e, i) => <OnFill key={i} index={i} incrementOnFillFormCount={incrementOnFillFormCount} setEarthworkValues={setEarthworkValues} />)}\r\n                        <SlabDetail setEarthworkValues={setEarthworkValues} />\r\n                        <Manpower setEarthworkValues={setEarthworkValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"check\" onClick={e => {\r\n                            calculate();\r\n                        }}>Summarize</Button>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n            \r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Earthworks;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: undefined, y: undefined, z: undefined});\r\n    const [columnCircular, setColumnCircular] = useState({d: undefined, z: undefined});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n    const [columnHeight, setColumnHeight] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.columnDetailsValues[props.index] = {\r\n                columnType: columnType,\r\n                columnRectangular: columnRectangular,\r\n                columnCircular: columnCircular,\r\n                columnCount: columnCount,\r\n                columnHeight: columnHeight\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [columnType, columnRectangular, columnCircular, columnCount, columnHeight]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Column Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementColumnFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"fw-cd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.x = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.y = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Columns</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-height\">Column Height (m)</label>\r\n                                        <FormInput onChange={e => setColumnHeight(e.target.value)} type=\"number\" id=\"ew-cfd-column-height\" placeholder=\"Enter height in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction BeamDetails(props) {\r\n    const [beamDimensions, setBeamDimensions] = useState({x: '', y: ''});\r\n    const [beamValues, setBeamValues] = useState([{length: '', amount: ''}]);\r\n    const [beamCount, setBeamCount] = useState(1);\r\n    \r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.beamDetailsValues[props.index] = {\r\n                beamsDimensions: beamDimensions,\r\n                beamValues: beamValues,\r\n                beamCount: beamCount\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [beamDimensions, beamValues, beamCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Beam Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementBeamFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3 pb-0\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col xxs=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-length\">Length (x)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-length\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.x = e.target.value;\r\n                                            return dimensions;\r\n                                        })} placeholder=\"Enter length in meters\" />\r\n                                    </Col>\r\n\r\n                                    <Col xxs=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-width\">Width (y)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-width\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.y = e.target.value;\r\n                                            return dimensions;\r\n                                        })} placeholder=\"Enter width in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"subdivision\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"subdivision-title\">Beams</h2>\r\n                                {[...Array(beamCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col xxs=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-length\">Beam Length (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-length\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: '', amount: ''};\r\n\r\n                                                    value[i].length = target.value;\r\n\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter length in meters\" />\r\n                                        </Col>\r\n                                        <Col xxs=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-amount\">Beam Amount</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-amount\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: '', amount: ''};\r\n\r\n                                                    value[i].amount = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter amount\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(beamValues);\r\n                                    \r\n                                    setBeamCount(e => e + 1);\r\n                                }}>Add a Beam</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default BeamDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction SlabDetails(props) {\r\n    const [slabValues, setSlabValues] = useState([{horizontal: '', vertical: ''}]);\r\n    const [slabCount, setSlabCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.slabDetailsValues[props.index] = {\r\n                slabValues: slabValues,\r\n                slabCount: slabCount\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [slabValues, slabCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom card-add-header\">\r\n                <h6 className=\"m-0\">Slab Details</h6>\r\n\r\n                <button className=\"btn btn-primary btn-pill btn-add-header\" onClick={() => {props.incrementSlabFormCount()}}><i className=\"material-icons\">add</i></button>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row className=\"subdivision\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"subdivision-title\">Slabs</h2>\r\n                                {[...Array(slabCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col xxs=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-sd-slab-horizontal\">Slab Horizontal (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-sd-slab-horizontal\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setSlabValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {horizontal: '', vertical: ''};\r\n\r\n                                                    value[i].horizontal = target.value;\r\n\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter horizontal in meters\" />\r\n                                        </Col>\r\n                                        <Col xxs=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-sd-slab-vertical\">Slab Vertical (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-sd-slab-vertical\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setSlabValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {horizontal: '', vertical: ''};\r\n\r\n                                                    value[i].vertical = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter vertical\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(slabValues);\r\n                                    \r\n                                    setSlabCount(e => e + 1);\r\n                                }}>Add a Slab</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SlabDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState('');\r\n    const [numberForeman, setNumberForeman] = useState('');\r\n    const [numberSkilled, setNumberSkilled] = useState('');\r\n    const [laborerWage, setLaborerWage] = useState('');\r\n    const [foremanWage, setForemanWage] = useState('');\r\n    const [skilledWage, setSkilledWage] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.manpowerValues = {\r\n                numberLaborer: numberLaborer,\r\n                numberForeman: numberForeman,\r\n                numberSkilled: numberSkilled,\r\n                laborerWage: laborerWage,\r\n                foremanWage: foremanWage,\r\n                skilledWage: skilledWage,\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [numberLaborer, numberForeman, numberSkilled, laborerWage, foremanWage, skilledWage]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} value={numberLaborer} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman\" onChange={e => setNumberForeman(e.target.value)} value={numberForeman} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled\">Number of Skilled</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled\" onChange={e => setNumberSkilled(e.target.value)} value={numberSkilled} placeholder=\"Enter number of Skilled\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} value={laborerWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} value={foremanWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled-wage\">Skilled Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled-wage\" onChange={e => setSkilledWage(e.target.value)} value={skilledWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction PlywoodAndLumber(props) {\r\n    const [palValues, setPalValues] = useState(\r\n        {\r\n            size_of_plywood: {\r\n                x: '',\r\n                y: ''\r\n            },\r\n            wood_frame_size: '',\r\n            wood_frame_thickness: '',\r\n            lumber_size: {\r\n                vertical: '',\r\n                horizontal: '',\r\n                diagonal: ''\r\n            },\r\n            metal_sheets: '',\r\n            spacing_for_vertical_ribs: '',\r\n            length_of_steel_bar: ''\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.plywoodAndLumberValues = {\r\n                palValues: palValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [palValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Plywood and Lumber</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-size-of-plywood-x\">Size of Plywood (x)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-pal-size-of-plywood-x\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.size_of_plywood.x = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Size of plywood x\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-size-of-plywood-y\">Slab Vertical (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-pal-size-of-plywood-y\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.size_of_plywood.y = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Size of plywood y\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-wood-frame-size\">Wood Frame Size</label>\r\n                                        <FormSelect id=\"fw-pal-wood-frame-size\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.wood_frame_size = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Wood frame size\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value='2\"x2\"'>2\"x2\"</option>\r\n                                            <option value='2\"x3\"'>2\"x3\"</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-wood-frame-thickness\">Wood Frame Thickness</label>\r\n                                        <FormSelect id=\"fw-pal-wood-frame-thickness\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.wood_frame_thickness = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Wood frame thickness\">\r\n                                            <option value=\"\"></option>\r\n                                            <option value='1/4\" (6mm)'>1/4\" (6mm)</option>\r\n                                            <option value='1/2\" (12mm)'>1/2\" (12mm)</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-lumber-size-vertical\">Lumber Size Vertical</label>\r\n                                        <FormSelect id=\"fw-pal-lumber-size-vertical\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.lumber_size.vertical = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value='2\"x2\"'>2\"x2\"</option>\r\n                                            <option value='2\"x3\"'>2\"x3\"</option>\r\n                                            <option value='2\"x4\"'>2\"x4\"</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-lumber-size-horizontal\">Lumber Size Horizontal</label>\r\n                                        <FormSelect id=\"fw-pal-lumber-size-horizontal\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.lumber_size.horizontal = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value='2\"x2\"'>2\"x2\"</option>\r\n                                            <option value='2\"x3\"'>2\"x3\"</option>\r\n                                            <option value='2\"x4\"'>2\"x4\"</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-lumber-size-diagonal\">Lumber Size Diagonal</label>\r\n                                        <FormSelect id=\"fw-pal-lumber-size-diagonal\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.lumber_size.diagonal = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value='2\"x2\"'>2\"x2\"</option>\r\n                                            <option value='2\"x3\"'>2\"x3\"</option>\r\n                                            <option value='2\"x4\"'>2\"x4\"</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-metal-sheets\">Metal Sheets for Circular Column</label>\r\n                                        <FormSelect id=\"fw-pal-metal-sheets\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.metal_sheets = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value='0.90 x 2.40'>0.90 x 2.40</option>\r\n                                            <option value='0.90 x 2.40'>1.20 x 2.40</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-spacing-vertical-ribs\">Spacing for Vertical Ribs (cm)</label>\r\n                                        <FormSelect id=\"fw-pal-spacing-vertical-ribs\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.spacing_for_vertical_ribs = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }}>\r\n                                            <option value=\"\"></option>\r\n                                            <option value=\"15\">15 cm</option>\r\n                                            <option value=\"20\">20 cm</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-pal-length-steel-bar\">Length of Steel Bar (m)</label>\r\n                                        <FormInput id=\"fw-pal-length-steel-bar\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setPalValues(values => {\r\n                                                values.length_of_steel_bar = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Length in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default PlywoodAndLumber;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction MaterialCosts(props) {\r\n    const [costValues, setCostValues] = useState(\r\n        {\r\n            plywood: '',\r\n            wood_frame: '',\r\n            lumber: ['', '']\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.setFormWorkValues(value => {\r\n            value.materialCostsValues = {\r\n                costValues: costValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [costValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Material Costs</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Plywood (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.plywood = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Wood Frame (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.wood_frame = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-lumber-0\">Lumber (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-lumber-0\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.lumber[0] = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-lumber-1\">Lumber (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-lumber-1\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.lumber[1] = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MaterialCosts;","import React, { useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Summary(props) {\r\n    useEffect(() => {\r\n        console.log(props.values);\r\n    });\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Summary</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <h6 className=\"font-weight-bold\">Formworks</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Column</strong></span><br/>\r\n                                    <span>Total Number of Plywood: {+props.values.column.rectangular.total_number_of_plywood.toFixed(3)} pcs</span><br/>\r\n                                    <span>Wood Frames (Board Feet): {+props.values.column.rectangular.wood_frame.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Beam</strong></span><br/>\r\n                                    <span>Total Number of Plywood: {+props.values.beam.total_number_of_plywood.toFixed(3)} pcs</span><br/>\r\n                                    <span>Wood Frames (Board Feet): {+props.values.beam.wood_frame.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Slab</strong></span><br/>\r\n                                    <span>Total Number of Plywood: {+props.values.slab.total_number_of_plywood.toFixed(3)} pcs</span><br/>\r\n                                    <span>Wood Frames (Board Feet): {+props.values.slab.wood_frame.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Scaffolding</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Column</strong></span><br/>\r\n                                    <span>Vertical: {+props.values.column_scaffolding.vertical.toFixed(3)} bd'ft</span><br/>\r\n                                    <span>Horizontal: {+props.values.column_scaffolding.horizontal.toFixed(3)} bd'ft</span><br/>\r\n                                    <span>Diagonal: {+props.values.column_scaffolding.diagonal.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Beam</strong></span><br/>\r\n                                    <span>Vertical: {+props.values.beam_scaffolding.vertical.toFixed(3)} bd'ft</span><br/>\r\n                                    <span>Horizontal: {+props.values.beam_scaffolding.horizontal.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Slab</strong></span><br/>\r\n                                    <span>Vertical: {+props.values.slab_scaffolding.vertical.toFixed(3)} bd'ft</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Duration of Work</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Formworks: {+props.values.manpower.duration.formworks.toFixed(3)} days</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Labor Costs</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Formworks: {+props.values.manpower.labor_cost.formworks.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Material Costs</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Plywood ({props.values.material_summary.plywood.data[0] + ' ' + props.values.material_summary.plywood.data[1]}): {+props.values.material_summary.plywood.cost.toFixed(3)} PHP</span><br/>\r\n                                    <span>Wood Frame ({props.values.material_summary.wood_frames.data[0] + ' ' + props.values.material_summary.wood_frames.data[1]}): {+props.values.material_summary.wood_frames.cost.toFixed(3)} PHP</span><br/>\r\n                                    <span>Lumber ({props.values.material_summary.lumber.vertical.data[0] + ' ' + props.values.material_summary.lumber.vertical.data[1]}): {+props.values.material_summary.lumber.vertical.cost.toFixed(3)} PHP</span><br/>\r\n                                    <span>Lumber ({props.values.material_summary.lumber.horizontal.data[0] + ' ' + props.values.material_summary.lumber.horizontal.data[1]}): {+props.values.material_summary.lumber.horizontal.cost.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: undefined, y: undefined, z: undefined});\r\n    const [columnCircular, setColumnCircular] = useState({d: undefined, z: undefined});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n    const [columnHeight, setColumnHeight] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.columnDetailsValues[props.index] = {\r\n                columnType: columnType,\r\n                columnRectangular: columnRectangular,\r\n                columnCircular: columnCircular,\r\n                columnCount: columnCount,\r\n                columnHeight: columnHeight\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [columnType, columnRectangular, columnCircular, columnCount, columnHeight]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Column Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"fw-cd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.x = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.y = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Columns</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-height\">Column Height (m)</label>\r\n                                        <FormInput onChange={e => setColumnHeight(e.target.value)} type=\"number\" id=\"ew-cfd-column-height\" placeholder=\"Enter height in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnFootingDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: undefined, y: undefined, z: undefined});\r\n    const [columnCircular, setColumnCircular] = useState({d: undefined, z: undefined});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.columnFootingValues[props.index] = {\r\n                columnType: columnType,\r\n                columnRectangular: columnRectangular,\r\n                columnCircular: columnCircular,\r\n                columnCount: columnCount,\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [columnType, columnRectangular, columnCircular, columnCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Column Footing Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cfd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"fw-cfd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cfd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.x = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cfd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.y = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cfd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnRectangular(object => {\r\n                                                    object.z = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cfd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cfd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setColumnCircular(object => {\r\n                                                    object.d = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                            }} id=\"fw-cfd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Column-Footing</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnFootingDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction WallFootingDetails(props) {\r\n    const [wallFootingDepth, setWallFootingDepth] = useState('');\r\n    const [wallFootingWidth, setWallFootingWidth] = useState('');\r\n    const [wallPerimeter, setWallPerimeter] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.wallFootingValues[props.index] = {\r\n                wallFootingDepth: wallFootingDepth,\r\n                wallFootingWidth: wallFootingWidth,\r\n                wallPerimeter: wallPerimeter\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [wallFootingDepth, wallFootingWidth, wallPerimeter]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Wall Footing Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Depth of Wall Footing</label>\r\n                                        <FormInput onChange={e => setWallFootingDepth(e.target.value)} type=\"number\" id=\"ew-wf-depth\" placeholder=\"Enter footing\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Width of Footing (Base)</label>\r\n                                        <FormInput onChange={e => setWallFootingWidth(e.target.value)} type=\"number\" id=\"ew-wf-width\" placeholder=\"Enter width\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Wall Perimeter</label>\r\n                                        <FormInput onChange={e => setWallPerimeter(e.target.value)} type=\"number\" id=\"ew-wf-perimeter\" placeholder=\"Enter perimeter\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WallFootingDetails;","import React, { useEffect, useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction BeamDetails(props) {\r\n    const [beamDimensions, setBeamDimensions] = useState({x: '', y: ''});\r\n    const [beamValues, setBeamValues] = useState([{length: '', amount: ''}]);\r\n    const [beamCount, setBeamCount] = useState(1);\r\n    \r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.beamDetailsValues[props.index] = {\r\n                beamsDimensions: beamDimensions,\r\n                beamValues: beamValues,\r\n                beamCount: beamCount\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [beamDimensions, beamValues, beamCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Beam Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3 pb-0\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-length\">Length (x)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-length\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.x = e.target.value;\r\n                                            return dimensions;\r\n                                        })} placeholder=\"Enter length in meters\" />\r\n                                    </Col>\r\n\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-width\">Width (y)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-width\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.y = e.target.value;\r\n                                            return dimensions;\r\n                                        })} placeholder=\"Enter width in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row className=\"subdivision\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"subdivision-title\">Beams</h2>\r\n                                {[...Array(beamCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-length\">Beam Length (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-length\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: '', amount: ''};\r\n\r\n                                                    value[i].length = target.value;\r\n\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter length in meters\" />\r\n                                        </Col>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-amount\">Beam Amount</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-amount\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: '', amount: ''};\r\n\r\n                                                    value[i].amount = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter amount\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(beamValues);\r\n                                    \r\n                                    setBeamCount(e => e + 1);\r\n                                }}>Add a Beam</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default BeamDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction SlabDetails(props) {\r\n    const [slabValues, setSlabValues] = useState([{horizontal: '', vertical: ''}]);\r\n    const [slabThickness, setSlabThickness] = useState('');\r\n    const [slabCount, setSlabCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            \r\n            value.slabDetailsValues[props.index] = {\r\n                slabValues: slabValues,\r\n                slabThickness: slabThickness,\r\n                slabCount: slabCount\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [slabValues, slabThickness, slabCount]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Slab Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row form>\r\n                            <Col md=\"6\" className=\"form-group\">\r\n                                <label htmlFor=\"fw-sd-slab-vertical\">Slab Thickness (cm)</label>\r\n                                <FormInput type=\"number\" id=\"fw-sd-slab-vertical\" onChange={e => {\r\n                                    var target = e.target;\r\n\r\n                                    setSlabThickness(slabThickness => {\r\n                                        slabThickness = target.value;\r\n\r\n                                        return slabThickness;\r\n                                    });\r\n                                }} placeholder=\"Enter slab vertical\" />\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"subdivision\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"subdivision-title\">Slabs</h2>\r\n                                {[...Array(slabCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col xxs=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-sd-slab-horizontal\">Slab Horizontal (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-sd-slab-horizontal\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setSlabValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {horizontal: '', vertical: ''};\r\n\r\n                                                    value[i].horizontal = target.value;\r\n\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter horizontal in meters\" />\r\n                                        </Col>\r\n                                        <Col xxs=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-sd-slab-vertical\">Slab Vertical (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-sd-slab-vertical\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setSlabValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {horizontal: '', vertical: ''};\r\n\r\n                                                    value[i].vertical = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} placeholder=\"Enter vertical\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                                <Row className=\"pb-3\">\r\n                                    <Col>\r\n                                        <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                            console.log(slabValues);\r\n                                            \r\n                                            setSlabCount(e => e + 1);\r\n                                        }}>Add a Slab</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SlabDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticTankDetails(props) {\r\n    const [topSlabDetails, setTopSlabDetails] = useState({length: '', width: '', depth: '', thickness: ''});\r\n    const [bottomSlabDetails, setBottomSlabDetails] = useState({length: '', width: '', thickness: ''});\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.septicTankValues = {\r\n                topSlabDetails: topSlabDetails,\r\n                bottomSlabDetails: bottomSlabDetails\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [topSlabDetails, bottomSlabDetails]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Septic Tank Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Top Slab Details</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-x\">Length (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setTopSlabDetails(object => {\r\n                                                object.length = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-x\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-y\">Width (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setTopSlabDetails(object => {\r\n                                                object.width = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-y\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-z\">Depth (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setTopSlabDetails(object => {\r\n                                                object.depth = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-z\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col xxsm=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-z\">Thickness (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setTopSlabDetails(object => {\r\n                                                object.thickness = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-z\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Bottom Slab Details</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-x\">Length (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setBottomSlabDetails(object => {\r\n                                                object.length = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-x\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-y\">Width (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setBottomSlabDetails(object => {\r\n                                                object.width = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-y\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row>\r\n                                    <Col xxsm=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"cc-septic-tank-z\">Thickness (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n                                            setBottomSlabDetails(object => {\r\n                                                object.thickness = target.value;\r\n                                                return object;\r\n                                            })\r\n                                        }} id=\"cc-septic-tank-z\" placeholder=\"Enter the value\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticTankDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Button,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ConcreteStairDetails(props) {\r\n    const [concreteStairValues, setConcreteStairValues] = useState(\r\n        {\r\n            rise_length: '',\r\n            run_length: '',\r\n            height_of_stair: '',\r\n            width_of_stair: '',\r\n            length_of_stair: '',\r\n            waistlength_thickness: '',\r\n            landing: [\r\n                {\r\n                    thickness_of_landing: '',\r\n                    landing_width: '',\r\n                    landing_length: ''\r\n                }\r\n            ]\r\n        }\r\n    );\r\n    const [landingCount, setLandingCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.concreteStairValues[props.index] = {\r\n                concreteStairValues: concreteStairValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [concreteStairValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Concrete Stair Details</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Rise Length (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.rise_length = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Run Length (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.run_length = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Height of Stairs (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.height_of_stair = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Width of Stairs (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.width_of_stair = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Length of Stairs (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.length_of_stair = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Waistlength Thickness (m)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setConcreteStairValues(values => {\r\n                                                values.waistlength_thickness = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row className=\"subdivision\">\r\n                                    <Col>\r\n                                        <h2 className=\"subdivision-title\">Landing</h2>\r\n                                        {[...Array(landingCount)].map((e, i) => \r\n                                            <Row form key={i}>\r\n                                                <Col xxs=\"4\" className=\"form-group\">\r\n                                                    <label htmlFor=\"fw-mc-lumber-0\">Thickness of Landing (m)</label>\r\n                                                    <FormInput type=\"number\" id=\"fw-mc-lumber-0\" onChange={e => {\r\n                                                        const target = e.target;\r\n                                                        setConcreteStairValues(values => {\r\n                                                            // Push into the value to define it\r\n                                                            if (!values.landing[i]) values.landing[i] = {thickness_of_landing: '', landing_width: '', landing_length: ''};\r\n\r\n                                                            values.landing[i].thickness_of_landing = target.value;\r\n\r\n                                                            return values;\r\n                                                        });\r\n                                                    }} placeholder=\"Enter value in meters\" />\r\n                                                </Col>\r\n                                                <Col xxs=\"4\" className=\"form-group\">\r\n                                                    <label htmlFor=\"fw-mc-lumber-1\">Landing Width (m)</label>\r\n                                                    <FormInput type=\"number\" id=\"fw-mc-lumber-1\" onChange={e => {\r\n                                                        const target = e.target;\r\n                                                        setConcreteStairValues(values => {\r\n                                                            // Push into the value to define it\r\n                                                            if (!values.landing[i]) values.landing[i] = {thickness_of_landing: '', landing_width: '', landing_length: ''};\r\n                                                            \r\n                                                            values.landing[i].landing_width = target.value;\r\n\r\n                                                            return values;\r\n                                                        });\r\n                                                    }} placeholder=\"Enter value in meters\" />\r\n                                                </Col>\r\n                                                <Col md=\"4\" className=\"form-group\">\r\n                                                    <label htmlFor=\"fw-mc-lumber-1\">Landing Length (m)</label>\r\n                                                    <FormInput type=\"number\" id=\"fw-mc-lumber-1\" onChange={e => {\r\n                                                        const target = e.target;\r\n                                                        setConcreteStairValues(values => {\r\n                                                            // Push into the value to define it\r\n                                                            if (!values.landing[i]) values.landing[i] = {thickness_of_landing: '', landing_width: '', landing_length: ''};\r\n                                                            \r\n                                                            values.landing[i].landing_length = target.value;\r\n\r\n                                                            return values;\r\n                                                        });\r\n                                                    }} placeholder=\"Enter value in meters\" />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )}\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(landingCount);\r\n                                    \r\n                                    setLandingCount(e => e + 1);\r\n                                }}>Add a Landing</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ConcreteStairDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction WallFootingDetails(props) {\r\n    const [cementMixValues, setCementMixValues] = useState({\r\n        classMixture: 'AA',\r\n        cementBag: '40kg',\r\n        proportions: ''\r\n    });\r\n\r\n    useEffect(() => {\r\n        setCementMixValues(object => {\r\n            if ( object.classMixture === 'AA' ) object.proportions = '1 : 1.5 : 3';\r\n            else if ( object.classMixture === 'A' ) object.proportions = '1 : 2 : 4';\r\n            else if ( object.classMixture === 'B' ) object.proportions = '1 : 2.5 : 53';\r\n            else if ( object.classMixture === 'C' ) object.proportions = '1 : 3 : 6';\r\n\r\n            return {...object};\r\n        })\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.cementMixValues = cementMixValues\r\n\r\n            return value;\r\n        });\r\n    }, [cementMixValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Cement Mix</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Class Mixture</label>\r\n                                        <FormSelect onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setCementMixValues(object => {\r\n                                                    object.classMixture = target.value;\r\n\r\n                                                    if ( object.classMixture === 'AA' ) object.proportions = '1 : 1.5 : 3';\r\n                                                    else if ( object.classMixture === 'A' ) object.proportions = '1 : 2 : 4';\r\n                                                    else if ( object.classMixture === 'B' ) object.proportions = '1 : 2.5 : 53';\r\n                                                    else if ( object.classMixture === 'C' ) object.proportions = '1 : 3 : 6';\r\n\r\n                                                    return {...object};\r\n                                                })\r\n                                        }} type=\"number\" id=\"ew-wf-depth\" >\r\n                                            <option value=\"AA\">AA</option>\r\n                                            <option value=\"A\">A</option>\r\n                                            <option value=\"B\">B</option>\r\n                                            <option value=\"C\">C</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Cement Bag</label>\r\n                                        <FormSelect onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setCementMixValues(object => {\r\n                                                    object.cementBag = target.value;\r\n                                                    return object;\r\n                                                })\r\n                                        }} type=\"number\" id=\"ew-wf-width\">\r\n                                            <option value=\"40kg\">40kg</option>\r\n                                            <option value=\"50kg\">50kg</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wf-column-count\">Proportions</label>\r\n                                        <p>{cementMixValues.proportions}</p>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WallFootingDetails;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState('');\r\n    const [numberForeman, setNumberForeman] = useState('');\r\n    const [numberSkilled, setNumberSkilled] = useState('');\r\n    const [laborerWage, setLaborerWage] = useState('');\r\n    const [foremanWage, setForemanWage] = useState('');\r\n    const [skilledWage, setSkilledWage] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.manpowerValues = {\r\n                numberLaborer: numberLaborer,\r\n                numberForeman: numberForeman,\r\n                numberSkilled: numberSkilled,\r\n                laborerWage: laborerWage,\r\n                foremanWage: foremanWage,\r\n                skilledWage: skilledWage,\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [numberLaborer, numberForeman, numberSkilled, laborerWage, foremanWage, skilledWage]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} value={numberLaborer} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman\" onChange={e => setNumberForeman(e.target.value)} value={numberForeman} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled\">Number of Skilled</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled\" onChange={e => setNumberSkilled(e.target.value)} value={numberSkilled} placeholder=\"Enter number of Skilled\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} value={laborerWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} value={foremanWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled-wage\">Skilled Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled-wage\" onChange={e => setSkilledWage(e.target.value)} value={skilledWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction MaterialCosts(props) {\r\n    const [costValues, setCostValues] = useState(\r\n        {\r\n            cement_bags: '',\r\n            sand: '',\r\n            gravel: ''\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.setConcreteValues(value => {\r\n            value.materialCostsValues = {\r\n                costValues: costValues\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [costValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Material Costs</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Cement Bags (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.cement_bags = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Sand (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.sand = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Gravel (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.gravel = target.value;\r\n\r\n                                                return values;\r\n                                            });\r\n                                        }} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MaterialCosts;","import React, { useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Summary(props) {\r\n    useEffect(() => {\r\n        console.log(props.values);\r\n    });\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Summary</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Columns</strong></span><br/>\r\n                                    <span>Cement: {+props.values.column.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.column.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.column.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Column Footing</strong></span><br/>\r\n                                    <span>Cement: {+props.values.column_footing.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.column_footing.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.column_footing.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Wall Footing</strong></span><br/>\r\n                                    <span>Cement: {+props.values.wall_footing.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.wall_footing.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.wall_footing.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Beams</strong></span><br/>\r\n                                    <span>Cement: {+props.values.beam.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.beam.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.beam.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Slab</strong></span><br/>\r\n                                    <span>Cement: {+props.values.slab.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.slab.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.slab.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Septic Tank</strong></span><br/>\r\n                                    <span>Cement: {+props.values.septic_tank.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.septic_tank.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.septic_tank.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Concrete Stairs</strong></span><br/>\r\n                                    <span>Cement: {+props.values.concrete_stairs.required.cement.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.concrete_stairs.required.sand.toFixed(3)} m³</span><br/>\r\n                                    <span>Gravel: {+props.values.concrete_stairs.required.gravel.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Duration of Work</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Concreting: {+props.values.manpower.concreting.duration.toFixed(3)} days</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Labor Costs</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Concreting: {+props.values.manpower.concreting.labor_cost.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n\r\n                                <h6 className=\"mt-3 font-weight-bold\">Material Costs</h6>\r\n                                <div className=\"p-2\">\r\n                                    <span>Cement Bags: {+props.values.material_summary.cement_bags.price.toFixed(3)} PHP</span><br/>\r\n                                    <span>Sand: {+props.values.material_summary.sand.price.toFixed(3)} PHP</span><br/>\r\n                                    <span>Gravel: {+props.values.material_summary.gravel.price.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Walls(props) {\r\n    const [values, setValues] = useState({\r\n        wallHeight: '',\r\n        wallPerimeter: '',\r\n        size_of_CHB: {\r\n            cm: '10 x 20 x 40',\r\n            inches: '4 x 8 x 16'\r\n        },\r\n        classMixture: 'A',\r\n        plasterThickness: '8',\r\n        doubleSided: 'Yes',\r\n        reinforcing_bars: {\r\n            vertical_spacing: '40',\r\n            horizontal_spacing: '2',\r\n            rebar_length: '5',\r\n            tie_wire_length: '25',\r\n            rebar_diameter: '8'\r\n        },\r\n        door_window_gross_area: {\r\n            doors: [\r\n                {\r\n                    area: '',\r\n                    count: ''\r\n                }\r\n            ]\r\n        }\r\n    });\r\n\r\n    const [doorCount, setDoorCount] = useState(1);\r\n\r\n    useEffect(() => {\r\n        props.setMasonryValues(value => {\r\n            value.wallsValues[props.index] = values\r\n\r\n            return value;\r\n        });\r\n\r\n        console.log(props.masonryValues.wallsValues);\r\n    }, [values]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Walls</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Specifications</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Wall Height (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.wallHeight = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].wallHeight : values.wallHeight} type=\"number\" id=\"\" placeholder=\"\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Wall Perimeter (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.wallPerimeter = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].wallPerimeter : values.wallPerimeter} type=\"number\" id=\"\" placeholder=\"\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Size of CHB (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.size_of_CHB.cm = target.value;\r\n\r\n                                                if (target.value === '10 x 20 x 40') values.size_of_CHB.inches = '4 x 8 x 16';\r\n                                                else if (target.value === '15 x 20 x 40') values.size_of_CHB.inches = '6 x 8 x 16';\r\n                                                else if (target.value === '20 x 20 x 40') values.size_of_CHB.inches = '8 x 8 x 16';\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].size_of_CHB.cm : values.size_of_CHB.cm} id=\"\">\r\n                                            <option value='10 x 20 x 40'>10 x 20 x 40</option>\r\n                                            <option value='15 x 20 x 40'>15 x 20 x 40</option>\r\n                                            <option value='20 x 20 x 40'>20 x 20 x 40</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Size of CHB (inches)</label>\r\n                                        <p>{props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].size_of_CHB.inches : values.size_of_CHB.inches}</p>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Class Mixture</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.classMixture = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].classMixture : values.classMixture} id=\"\">\r\n                                            <option value='A'>A</option>\r\n                                            <option value='B'>B</option>\r\n                                            <option value='C'>C</option>\r\n                                            <option value='D'>D</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Plaster Thickness (mm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.plasterThickness = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].plasterThickness : values.plasterThickness} id=\"\">\r\n                                            <option value='8'>8</option>\r\n                                            <option value='12'>12</option>\r\n                                            <option value='16'>16</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Double Sided?</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.doubleSided = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].doubleSided : values.doubleSided} id=\"\">\r\n                                            <option value='Yes'>Yes</option>\r\n                                            <option value='No'>No</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Reinforcing Bars</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Vertical Spacing (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.vertical_spacing = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.vertical_spacing : values.reinforcing_bars.vertical_spacing} id=\"\">\r\n                                            <option value='40'>40</option>\r\n                                            <option value='60'>60</option>\r\n                                            <option value='80'>80</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Horizontal Spacing (layer)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.horizontal_spacing = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.horizontal_spacing : values.reinforcing_bars.horizontal_spacing} id=\"\">\r\n                                            <option value='2'>2</option>\r\n                                            <option value='3'>3</option>\r\n                                            <option value='4'>4</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Rebar Length (m)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.rebar_length = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.rebar_length : values.reinforcing_bars.rebar_length} id=\"\">\r\n                                            <option value='5'>5</option>\r\n                                            <option value='6'>6</option>\r\n                                            <option value='7.5'>7.5</option>\r\n                                            <option value='9'>9</option>\r\n                                            <option value='12'>12</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Tie Wire Length (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.tie_wire_length = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.tie_wire_length : values.reinforcing_bars.tie_wire_length} id=\"\">\r\n                                            <option value='25'>25</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='40'>40</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Rebar Diameter (mm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.rebar_diameter = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.wallsValues[props.index] ? props.masonryValues.wallsValues[props.index].reinforcing_bars.rebar_diameter : values.reinforcing_bars.rebar_diameter} id=\"\">\r\n                                            <option value='8'>8</option>\r\n                                            <option value='10'>10</option>\r\n                                            <option value='12'>12</option>\r\n                                            <option value='13'>13</option>\r\n                                            <option value='15'>15</option>\r\n                                            <option value='16'>16</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                            <option value='28'>28</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='32'>32</option>\r\n                                            <option value='36'>36</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Door/Window Gross Area</h2>\r\n                                <Row form>\r\n                                    <Col md=\"12\">\r\n                                        {[...Array(doorCount)].map((e, i) => \r\n                                            <Row form key={i} id={i}>\r\n                                                <Col xxs=\"6\" className=\"form-group\">\r\n                                                    <label htmlFor=\"fw-sd-slab-horizontal\">Area (m²)</label>\r\n                                                    <FormInput type=\"number\" id=\"fw-sd-slab-horizontal\" onChange={e => {\r\n                                                        const target = e.target;\r\n\r\n                                                        setValues(value => {\r\n                                                            // Push into the value to define it\r\n                                                            if (! value.door_window_gross_area.doors[i]) value.door_window_gross_area.doors[i] = {area: '', count: ''};\r\n\r\n                                                            value.door_window_gross_area.doors[i].area = target.value;\r\n                                                            return value;\r\n                                                        })\r\n                                                    }} placeholder=\"Enter horizontal in meters\" />\r\n                                                </Col>\r\n                                                <Col xxs=\"6\" className=\"form-group\">\r\n                                                    <label htmlFor=\"fw-sd-slab-vertical\">Number</label>\r\n                                                    <FormInput type=\"number\" id=\"fw-sd-slab-vertical\" onChange={e => {\r\n                                                        const target = e.target;\r\n\r\n                                                        setValues(value => {\r\n                                                            // Push into the value to define it\r\n                                                            if (! value.door_window_gross_area.doors[i]) value.door_window_gross_area.doors[i] = {area: '', count: ''};\r\n\r\n                                                            value.door_window_gross_area.doors[i].count = target.value;\r\n                                                            return value;\r\n                                                        })\r\n                                                    }} placeholder=\"Enter vertical\" />\r\n                                                </Col>\r\n                                            </Row>\r\n                                        )}\r\n                                        <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                            setDoorCount(e => e + 1);\r\n                                        }}>Add a Door/Window</Button>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Walls;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticWalls(props) {\r\n    const [values, setValues] = useState({\r\n        septicDepth: '',\r\n        septicLength: '',\r\n        septicWidth: '',\r\n        size_of_CHB: {\r\n            cm: '10 x 20 x 40',\r\n            inches: '4 x 8 x 16'\r\n        },\r\n        classMixture: 'A',\r\n        numberOfChambers: '',\r\n        reinforcing_bars: {\r\n            vertical_spacing: '40',\r\n            horizontal_spacing: '2',\r\n            rebar_length: '5',\r\n            tie_wire_length: '25',\r\n            rebar_diameter: '8'\r\n        }\r\n    });\r\n\r\n    useEffect(() => {\r\n        props.setMasonryValues(value => {\r\n            value.septicWallValues = values\r\n\r\n            return value;\r\n        });\r\n\r\n        console.log(props.masonryValues.septicWallValues);\r\n    }, [values]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Septic Walls</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Specifications</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Depth (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.septicDepth = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].septicDepth : values.septicDepth} type=\"number\" id=\"\" placeholder=\"\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Length (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.septicLength = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].septicLength : values.septicLength} type=\"number\" id=\"\" placeholder=\"\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Width (m)</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.septicWidth = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].septicWidth : values.septicWidth} type=\"number\" id=\"\" placeholder=\"\" />\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Size of CHB (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.size_of_CHB.cm = target.value;\r\n\r\n                                                if (target.value === '10 x 20 x 40') values.size_of_CHB.inches = '4 x 8 x 16';\r\n                                                else if (target.value === '15 x 20 x 40') values.size_of_CHB.inches = '6 x 8 x 16';\r\n                                                else if (target.value === '20 x 20 x 40') values.size_of_CHB.inches = '8 x 8 x 16';\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].size_of_CHB.cm : values.size_of_CHB.cm} id=\"\">\r\n                                            <option value='10 x 20 x 40'>10 x 20 x 40</option>\r\n                                            <option value='15 x 20 x 40'>15 x 20 x 40</option>\r\n                                            <option value='20 x 20 x 40'>20 x 20 x 40</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Size of CHB (inches)</label>\r\n                                        <p>{props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].size_of_CHB.inches : values.size_of_CHB.inches}</p>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Class Mixture</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.classMixture = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].classMixture : values.classMixture} id=\"\">\r\n                                            <option value='A'>A</option>\r\n                                            <option value='B'>B</option>\r\n                                            <option value='C'>C</option>\r\n                                            <option value='D'>D</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Number of Chambers</label>\r\n                                        <FormInput onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.numberOfChambers = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].numberOfChambers : values.numberOfChambers} id=\"\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n\r\n                        <Row className=\"subdivision\">\r\n                            <Col>\r\n                                <h2 className=\"subdivision-title\">Reinforcing Bars</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Vertical Spacing (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.vertical_spacing = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].reinforcing_bars.vertical_spacing : values.reinforcing_bars.vertical_spacing} id=\"\">\r\n                                            <option value='40'>40</option>\r\n                                            <option value='60'>60</option>\r\n                                            <option value='80'>80</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Horizontal Spacing (layer)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.horizontal_spacing = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].reinforcing_bars.horizontal_spacing : values.reinforcing_bars.horizontal_spacing} id=\"\">\r\n                                            <option value='2'>2</option>\r\n                                            <option value='3'>3</option>\r\n                                            <option value='4'>4</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Rebar Length (m)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.rebar_length = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].reinforcing_bars.rebar_length : values.reinforcing_bars.rebar_length} id=\"\">\r\n                                            <option value='5'>5</option>\r\n                                            <option value='6'>6</option>\r\n                                            <option value='7.5'>7.5</option>\r\n                                            <option value='9'>9</option>\r\n                                            <option value='12'>12</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Tie Wire Length (cm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.tie_wire_length = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].reinforcing_bars.tie_wire_length : values.reinforcing_bars.tie_wire_length} id=\"\">\r\n                                            <option value='25'>25</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='40'>40</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"\">Rebar Diameter (mm)</label>\r\n                                        <FormSelect onChange={e => {\r\n                                            const target = e.target;\r\n\r\n                                            setValues(values => {\r\n                                                values.reinforcing_bars.rebar_diameter = target.value;\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.septicWallValues[props.index] ? props.masonryValues.septicWallValues[props.index].reinforcing_bars.rebar_diameter : values.reinforcing_bars.rebar_diameter} id=\"\">\r\n                                            <option value='8'>8</option>\r\n                                            <option value='10'>10</option>\r\n                                            <option value='12'>12</option>\r\n                                            <option value='13'>13</option>\r\n                                            <option value='15'>15</option>\r\n                                            <option value='16'>16</option>\r\n                                            <option value='20'>20</option>\r\n                                            <option value='25'>25</option>\r\n                                            <option value='28'>28</option>\r\n                                            <option value='30'>30</option>\r\n                                            <option value='32'>32</option>\r\n                                            <option value='36'>36</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticWalls;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState('');\r\n    const [numberForeman, setNumberForeman] = useState('');\r\n    const [numberSkilled, setNumberSkilled] = useState('');\r\n    const [laborerWage, setLaborerWage] = useState('');\r\n    const [foremanWage, setForemanWage] = useState('');\r\n    const [skilledWage, setSkilledWage] = useState('');\r\n\r\n    useEffect(() => {\r\n        props.setMasonryValues(value => {\r\n            value.manpowerValues = {\r\n                numberLaborer: numberLaborer,\r\n                numberForeman: numberForeman,\r\n                numberSkilled: numberSkilled,\r\n                laborerWage: laborerWage,\r\n                foremanWage: foremanWage,\r\n                skilledWage: skilledWage,\r\n            }\r\n\r\n            return value;\r\n        });\r\n    }, [numberLaborer, numberForeman, numberSkilled, laborerWage, foremanWage, skilledWage]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} value={numberLaborer} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman\" onChange={e => setNumberForeman(e.target.value)} value={numberForeman} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled\">Number of Skilled</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled\" onChange={e => setNumberSkilled(e.target.value)} value={numberSkilled} placeholder=\"Enter number of Skilled\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} value={laborerWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} value={foremanWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled-wage\">Skilled Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled-wage\" onChange={e => setSkilledWage(e.target.value)} value={skilledWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, { useState, useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction MaterialCosts(props) {\r\n    const [costValues, setCostValues] = useState(\r\n        {\r\n            cement_bags: '',\r\n            sand: '',\r\n            CHB: {\r\n                '4 x 8 x 16': '',\r\n                '6 x 8 x 16': '',\r\n                '8 x 8 x 16': ''\r\n            },\r\n            rebar: '',\r\n            tie_wire: ''\r\n        }\r\n    );\r\n\r\n    useEffect(() => {\r\n        props.setMasonryValues(value => {\r\n            value.materialCostsValues = costValues;\r\n\r\n            return value;\r\n        });\r\n    }, [costValues]);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Material Costs</h6>\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row className=\"subdivision\">\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Cement Bags (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.cement_bags = target.value;\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.materialCostsValues ? props.masonryValues.materialCostsValues.cement_bags : costValues.cement_bags} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col xxsn=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Sand (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.sand = target.value;\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.materialCostsValues ? props.masonryValues.materialCostsValues.sand : costValues.sand} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"subdivision\">\r\n                            <Col md=\"12\">\r\n                                <h2 className=\"subdivision-title\">CHB</h2>\r\n                                <Row form>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">4 x 8 x 16 in (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.CHB['4 x 8 x 16'] = target.value;\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.materialCostsValues.CHB ? props.masonryValues.materialCostsValues.CHB['4 x 8 x 16'] : costValues.CHB['4 x 8 x 16']} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">6 x 8 x 16 in (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.CHB['6 x 8 x 16'] = target.value;\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.materialCostsValues.CHB ? props.masonryValues.materialCostsValues.CHB['6 x 8 x 16'] : costValues.CHB['4 x 8 x 16']} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">8 x 8 x 16 in (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.CHB['8 x 8 x 16'] = target.value;\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.materialCostsValues.CHB ? props.masonryValues.materialCostsValues.CHB['8 x 8 x 16'] : costValues.CHB['4 x 8 x 16']} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"subdivision\">\r\n                            <Col md=\"12\">\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-plywood\">Rebar (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-plywood\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.rebar = target.value;\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.materialCostsValues ? props.masonryValues.materialCostsValues.rebar : costValues.rebar} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                    <Col xxsn=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-mc-wood-frame\">Tie Wire (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-mc-wood-frame\" onChange={e => {\r\n                                            const target = e.target;\r\n                                            setCostValues(values => {\r\n                                                values.tie_wire = target.value;\r\n\r\n                                                return {...values};\r\n                                            });\r\n                                        }} value={props.masonryValues.materialCostsValues ? props.masonryValues.materialCostsValues.tie_wire : costValues.tie_wire} placeholder=\"Enter value in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default MaterialCosts;","import React, { useEffect } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Summary(props) {\r\n    useEffect(() => {\r\n        console.log(props.values);\r\n    });\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Summary</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Number of CHBs</strong></span><br/>\r\n                                    <span>4 x 8 x 16 Hollow Blocks: {+props.values.material_summary.CHB['4 x 8 x 16'].amount.toFixed(3)} pcs</span><br/>\r\n                                    <span>6 x 8 x 16 Hollow Blocks: {+props.values.material_summary.CHB['6 x 8 x 16'].amount.toFixed(3)} pcs</span><br/>\r\n                                    <span>8 x 8 x 16 Hollow Blocks: {+props.values.material_summary.CHB['8 x 8 x 16'].amount.toFixed(3)} pcs</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Cement Bags & Sand</strong></span><br/>\r\n                                    <span>Cement Bags: {+props.values.material_summary.cement_bags.amount.toFixed(3)} bags</span><br/>\r\n                                    <span>Sand: {+props.values.material_summary.sand.amount.toFixed(3)} m³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Reinforcements</strong></span><br/>\r\n                                    <span>Vertical Rebars: {+props.values.summary.reinforcement.vertical_rebars.toFixed(3)} pcs</span><br/>\r\n                                    <span>Horizontal Rebars: {+props.values.summary.reinforcement.horizontal_rebars.toFixed(3)} pcs</span><br/>\r\n                                    <span>Tie Wire: {+props.values.material_summary.tie_wire.amount.toFixed(3)} kgs³</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Duration of Work</strong></span><br/>\r\n                                    <span>Layering: {+props.values.manpower.layering.duration.toFixed(3)} days</span><br/>\r\n                                    <span>Plastering: {+props.values.manpower.plastering.duration.toFixed(3)} days</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Labor Costs</strong></span><br/>\r\n                                    <span>Layering: {+props.values.manpower.layering.labor_cost.toFixed(3)} PHP</span><br/>\r\n                                    <span>Plastering: {+props.values.manpower.plastering.labor_cost.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n\r\n                                <div className=\"p-2\">\r\n                                    <span><strong>Material Costs</strong></span><br/>\r\n                                    <span>CHB (4 x 8 x 16): {+props.values.material_summary.CHB['4 x 8 x 16'].price.toFixed(3)} PHP</span><br/>\r\n                                    <span>CHB (6 x 8 x 16): {+props.values.material_summary.CHB['6 x 8 x 16'].price.toFixed(3)} PHP</span><br/>\r\n                                    <span>CHB (8 x 8 x 16): {+props.values.material_summary.CHB['8 x 8 x 16'].price.toFixed(3)} PHP</span><br/>\r\n                                    <span>Cement Bags: {+props.values.material_summary.cement_bags.price.toFixed(3)} PHP</span><br/>\r\n                                    <span>Sand: {+props.values.material_summary.sand.price.toFixed(3)} PHP</span><br/>\r\n                                    <span>Rebars: {+props.values.material_summary.rebar.price.toFixed(3)} PHP</span><br/>\r\n                                    <span>Tie Wire: {+props.values.material_summary.tie_wire.price.toFixed(3)} PHP</span><br/>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Summary;","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col, Button } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport Walls from '../../components/masonry-estimation/Walls';\r\nimport SepticWalls from '../../components/masonry-estimation/SepticWalls';\r\nimport Manpower from '../../components/masonry-estimation/Manpower';\r\nimport MaterialCosts from '../../components/masonry-estimation/MaterialCosts';\r\nimport Summary from '../../components/masonry-estimation/Summary';\r\n\r\nfunction Masonry(props) {\r\n    const [summaryView, setSummaryView] = useState(false);\r\n\r\n    const [wallFormCount, setWallFormCount] = useState(1);\r\n\r\n    const [masonryValues, setMasonryValues] = useState({\r\n        wallsValues: [],\r\n        septicWallValues: {},\r\n        manpowerValues: {},\r\n        materialCostsValues: {}\r\n    });\r\n\r\n    const [solutionValues, setSolutionValues] = useState({\r\n        total_wall_area: {\r\n            walls: [],\r\n            septic: '',\r\n            total: ''\r\n        },\r\n        total_number_of_chb: {\r\n            walls: [],\r\n            septic: '',\r\n            total: ''\r\n        },\r\n        number_of_chb_per_type: {\r\n            '4 x 8 x 16': {\r\n                walls: [],\r\n                septic: '',\r\n                total: ''\r\n            },\r\n            '6 x 8 x 16': {\r\n                walls: [],\r\n                septic: '',\r\n                total: ''\r\n            },\r\n            '8 x 8 x 16': {\r\n                walls: [],\r\n                septic: '',\r\n                total: ''\r\n            }\r\n        },\r\n        quantity_of_cement_and_sand_for_CHB_mortar_per_sqm: {\r\n            '10 x 20 x 40' : {\r\n                number_of_CHB_per_sqm: '12.5',\r\n                bags_of_cement: {\r\n                    'A': '0.792',\r\n                    'B': '0.522',\r\n                    'C': '0.394',\r\n                    'D': '0.328'\r\n                },\r\n                sand: '0.0435'\r\n            },\r\n            '15 x 20 x 40': {\r\n                number_of_CHB_per_sqm: '12.5',\r\n                bags_of_cement: {\r\n                    'A': '1.526',\r\n                    'B': '1.018',\r\n                    'C': '0.763',\r\n                    'D': '0.633'\r\n                },\r\n                sand: '0.0844'\r\n            },\r\n            '20 x 20 x 40': {\r\n                number_of_CHB_per_sqm: '12.5',\r\n                bags_of_cement: {\r\n                    'A': '2.26',\r\n                    'B': '1.5',\r\n                    'C': '1.125',\r\n                    'D': '0.938'\r\n                },\r\n                sand: '0.125'\r\n            }\r\n        },\r\n        quantity_of_cement_and_sand_for_plastering_per_sqm: {\r\n            'A': {\r\n                thickness_of_plastering: {\r\n                    '8': '0.144',\r\n                    '12': '0.216',\r\n                    '16': '0.288',\r\n                    '20': '0.36',\r\n                    '25': '0.45'\r\n                }\r\n            },\r\n            'B': {\r\n                thickness_of_plastering: {\r\n                    '8': '0.096',\r\n                    '12': '0.144',\r\n                    '16': '0.192',\r\n                    '20': '0.24',\r\n                    '25': '0.3'\r\n                }\r\n            },\r\n            'C': {\r\n                thickness_of_plastering: {\r\n                    '8': '0.072',\r\n                    '12': '0.108',\r\n                    '16': '0.144',\r\n                    '20': '0.18',\r\n                    '25': '0.225'\r\n                }\r\n            },\r\n            'D': {\r\n                thickness_of_plastering: {\r\n                    '8': '0.06',\r\n                    '12': '0.09',\r\n                    '16': '0.12',\r\n                    '20': '0.15',\r\n                    '25': '0.188'\r\n                }\r\n            },\r\n            'Sand': {\r\n                thickness_of_plastering: {\r\n                    '8': '0.008',\r\n                    '12': '0.012',\r\n                    '16': '0.016',\r\n                    '20': '0.02',\r\n                    '25': '0.025'\r\n                }\r\n            }   \r\n        },\r\n        length_of_reinforcing_bars_for_CHB: {\r\n            vertical_reinforcement: {\r\n                '40': {\r\n                    length_of_bars: {\r\n                        per_block: '0.235',\r\n                        per_sqm: '2.93'\r\n                    }\r\n                },\r\n                '60': {\r\n                    length_of_bars: {\r\n                        per_block: '0.171',\r\n                        per_sqm: '2.12'\r\n                    }\r\n                },\r\n                '80': {\r\n                    length_of_bars: {\r\n                        per_block: '0.128',\r\n                        per_sqm: '1.6'\r\n                    }\r\n                }\r\n            },\r\n            horizontal_reinforcement: {\r\n                '2': {\r\n                    length_of_bars: {\r\n                        per_block: '0.264',\r\n                        per_sqm: '3.3'\r\n                    }\r\n                },\r\n                '3': {\r\n                    length_of_bars: {\r\n                        per_block: '0.172',\r\n                        per_sqm: '2.15'\r\n                    }\r\n                },\r\n                '4': {\r\n                    length_of_bars: {\r\n                        per_block: '0.138',\r\n                        per_sqm: '1.72'\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        tie_wire_for_CHB: {\r\n            '40': {\r\n                '2': {\r\n                    '25': 0.054,\r\n                    '30': 0.065,\r\n                    '40': 0.086\r\n                },\r\n                '3': {\r\n                    '25': 0.039,\r\n                    '30': 0.047,\r\n                    '40': 0.063\r\n                },\r\n                '4': {\r\n                    '25': 0.024,\r\n                    '30': 0.029,\r\n                    '40': 0.039\r\n                }\r\n            },\r\n            '60': {\r\n                '2': {\r\n                    '25': 0.036,\r\n                    '30': 0.044,\r\n                    '40': 0.057\r\n                },\r\n                '3': {\r\n                    '25': 0.026,\r\n                    '30': 0.032,\r\n                    '40': 0.042\r\n                },\r\n                '4': {\r\n                    '25': 0.020,\r\n                    '30': 0.024,\r\n                    '40': 0.032\r\n                }\r\n            },\r\n            '80': {\r\n                '2': {\r\n                    '25': 0.027,\r\n                    '30': 0.033,\r\n                    '40': 0.044\r\n                },\r\n                '3': {\r\n                    '25': 0.020,\r\n                    '30': 0.024,\r\n                    '40': 0.032\r\n                },\r\n                '4': {\r\n                    '25': 0.015,\r\n                    '30': 0.018,\r\n                    '40': 0.024\r\n                }\r\n            }\r\n        },\r\n        parameters: {\r\n            CHB_cement_multiplier: {\r\n                walls: [],\r\n                septic: ''\r\n            },\r\n            CHB_sand_multiplier: {\r\n                walls: [],\r\n                septic: ''\r\n            },\r\n            plaster_multiplier: {\r\n                walls: []\r\n            },\r\n            sand_plaster_multiplier: {\r\n                walls: []\r\n            },\r\n            rebar_diameter: {\r\n                walls: [],\r\n                septic: ''\r\n            },\r\n            double_sided_plaster: {\r\n                walls: []\r\n            }\r\n        },\r\n        reinforcing_bars_multiplier: {\r\n            vertical: {\r\n                walls: [],\r\n                septic: ''\r\n            },\r\n            horizontal: {\r\n                walls: [],\r\n                septic: ''\r\n            },\r\n            tie_wire: {\r\n                walls: [],\r\n                septic: ''\r\n            }\r\n        },\r\n        CHB_mortar: {\r\n            cement: {\r\n                walls: [],\r\n                septic: ''\r\n            },\r\n            sand: {\r\n                walls: [],\r\n                septic: ''\r\n            }\r\n        },\r\n        for_plaster: {\r\n            cement: {\r\n                walls: [],\r\n                septic: ''\r\n            },\r\n            sand: {\r\n                walls: [],\r\n                septic: ''\r\n            }\r\n        },\r\n        reinforcement: {\r\n            vertical_reinforcement: {\r\n                length: {\r\n                    walls: [],\r\n                    septic: ''\r\n                },\r\n                number_of_rebars: {\r\n                    walls: [],\r\n                    septic: ''\r\n                }\r\n            },\r\n            horizontal_reinforcement: {\r\n                length: {\r\n                    walls: [],\r\n                    septic: ''\r\n                },\r\n                number_of_rebars: {\r\n                    walls: [],\r\n                    septic: ''\r\n                }\r\n            },\r\n            tie_wire_kgs: {\r\n                walls: [],\r\n                septic: ''\r\n            } \r\n        },\r\n        manpower: {\r\n            layering: {\r\n                duration: '',\r\n                labor_cost: ''\r\n            },\r\n            plastering: {\r\n                duration: '',\r\n                labor_cost: ''\r\n            }\r\n        },\r\n        material_summary: {\r\n            cement_bags: {\r\n                amount: '',\r\n                price: ''\r\n            },\r\n            sand: {\r\n                amount: '',\r\n                price: ''\r\n            },\r\n            CHB: {\r\n                '4 x 8 x 16': {\r\n                    amount: '',\r\n                    price: ''\r\n                },\r\n                '6 x 8 x 16': {\r\n                    amount: '',\r\n                    price: ''\r\n                },\r\n                '8 x 8 x 16': {\r\n                    amount: '',\r\n                    price: ''\r\n                }\r\n            },\r\n            rebar: {\r\n                amount: '',\r\n                price: ''\r\n            },\r\n            tie_wire: {\r\n                amount: '',\r\n                price: ''\r\n            }\r\n        },\r\n        summary: {\r\n            reinforcement: {\r\n                vertical_rebars: '',\r\n                horizontal_rebars: '',\r\n                tie_wire: ''\r\n            }\r\n        }\r\n    });\r\n\r\n    const incrementWallFormCount = () => {\r\n        setWallFormCount(count => count + 1);\r\n    }\r\n\r\n    const calculate = () => {\r\n        setSolutionValues(values => {\r\n            // Establish variables\r\n            const wall = masonryValues.wallsValues;\r\n            const septic = masonryValues.septicWallValues;\r\n            const manpower = masonryValues.manpowerValues;\r\n            const material = masonryValues.materialCostsValues;\r\n\r\n            // Total Wall Area\r\n            values.total_wall_area.total = 0;\r\n            values.total_number_of_chb.total = 0;\r\n            values.number_of_chb_per_type['4 x 8 x 16'].total = 0;\r\n            values.number_of_chb_per_type['6 x 8 x 16'].total = 0;\r\n            values.number_of_chb_per_type['8 x 8 x 16'].total = 0;\r\n\r\n            wall.forEach((e, index) => {\r\n                let wall_area = +wall[index].wallHeight * +wall[index].wallPerimeter;\r\n                let door_window_area = 0;\r\n\r\n                wall[index].door_window_gross_area.doors.forEach((ee, ii) => {\r\n                    let area = +wall[index].door_window_gross_area.doors[ii].area * +wall[index].door_window_gross_area.doors[ii].count;\r\n\r\n                    door_window_area += area;\r\n                });\r\n\r\n                values.total_wall_area.walls[index] = wall_area - door_window_area;\r\n                values.total_number_of_chb.walls[index] = Math.ceil(values.total_wall_area.walls[index] * 12.5);\r\n                values.total_wall_area.total += values.total_wall_area.walls[index];\r\n                values.total_number_of_chb.total += Math.ceil(values.total_number_of_chb.walls[index] * 1.05);\r\n\r\n                values.number_of_chb_per_type[wall[index].size_of_CHB.inches].walls[index] = Math.ceil(values.total_number_of_chb.walls[index] * 1.05);\r\n                values.number_of_chb_per_type[wall[index].size_of_CHB.inches].total += values.number_of_chb_per_type[wall[index].size_of_CHB.inches].walls[index];\r\n            \r\n                values.parameters.CHB_cement_multiplier.walls[index] = values.quantity_of_cement_and_sand_for_CHB_mortar_per_sqm[wall[index].size_of_CHB.cm].bags_of_cement[wall[index].classMixture];\r\n                values.parameters.CHB_sand_multiplier.walls[index] = values.quantity_of_cement_and_sand_for_CHB_mortar_per_sqm[wall[index].size_of_CHB.cm].sand;\r\n                values.parameters.plaster_multiplier.walls[index] = values.quantity_of_cement_and_sand_for_plastering_per_sqm[wall[index].classMixture].thickness_of_plastering[wall[index].plasterThickness];\r\n                values.parameters.sand_plaster_multiplier.walls[index] = values.quantity_of_cement_and_sand_for_plastering_per_sqm['Sand'].thickness_of_plastering[wall[index].plasterThickness];\r\n                values.parameters.rebar_diameter.walls[index] = +wall[index].reinforcing_bars.rebar_diameter;\r\n                \r\n                if (wall[index].doubleSided === 'Yes') values.parameters.double_sided_plaster.walls[index] = 2;\r\n                else if (wall[index].doubleSided === 'No') values.parameters.double_sided_plaster.walls[index] = 1;\r\n\r\n                values.reinforcing_bars_multiplier.vertical.walls[index] = values.length_of_reinforcing_bars_for_CHB.vertical_reinforcement[wall[index].reinforcing_bars.vertical_spacing].length_of_bars.per_sqm;\r\n                values.reinforcing_bars_multiplier.horizontal.walls[index] = values.length_of_reinforcing_bars_for_CHB.horizontal_reinforcement[wall[index].reinforcing_bars.horizontal_spacing].length_of_bars.per_sqm;\r\n                values.reinforcing_bars_multiplier.tie_wire.walls[index] = values.tie_wire_for_CHB[wall[index].reinforcing_bars.vertical_spacing][wall[index].reinforcing_bars.horizontal_spacing][wall[index].reinforcing_bars.tie_wire_length];\r\n\r\n                values.CHB_mortar.cement.walls[index] = Math.ceil(+values.total_wall_area.walls[index] * +values.parameters.CHB_cement_multiplier.walls[index]);\r\n                values.CHB_mortar.sand.walls[index] = +values.total_wall_area.walls[index] * +values.parameters.CHB_sand_multiplier.walls[index];\r\n\r\n                values.for_plaster.cement.walls[index] = Math.ceil(+values.total_wall_area.walls[index] * +values.parameters.plaster_multiplier.walls[index] * +values.parameters.double_sided_plaster.walls[index]);\r\n                values.for_plaster.sand.walls[index] = +values.total_wall_area.walls[index] * +values.parameters.sand_plaster_multiplier.walls[index] * +values.parameters.double_sided_plaster.walls[index];\r\n            \r\n                values.reinforcement.vertical_reinforcement.length.walls[index] = +values.total_wall_area.walls[index] * +values.reinforcing_bars_multiplier.vertical.walls[index];\r\n                values.reinforcement.vertical_reinforcement.number_of_rebars.walls[index] = Math.ceil(values.reinforcement.vertical_reinforcement.length.walls[index]/+wall[index].reinforcing_bars.rebar_length);\r\n\r\n                values.reinforcement.horizontal_reinforcement.length.walls[index] = +values.total_wall_area.walls[index] * +values.reinforcing_bars_multiplier.horizontal.walls[index];\r\n                values.reinforcement.horizontal_reinforcement.number_of_rebars.walls[index] = Math.ceil(values.reinforcement.horizontal_reinforcement.length.walls[index]/+wall[index].reinforcing_bars.rebar_length);\r\n\r\n                values.reinforcement.tie_wire_kgs.walls[index] = +values.total_wall_area.walls[index] * values.reinforcing_bars_multiplier.tie_wire.walls[index];\r\n            });\r\n\r\n            values.total_wall_area.septic = ((+septic.septicLength * 2) + (+septic.septicWidth * 2)) * +septic.septicDepth + (+septic.septicWidth * +septic.septicDepth) * (+septic.numberOfChambers - 1);\r\n            values.total_wall_area.total += values.total_wall_area.septic;\r\n            values.total_number_of_chb.septic = values.total_wall_area.septic * 12.5;\r\n            values.total_number_of_chb.total += Math.ceil(values.total_number_of_chb.septic * 1.05);\r\n\r\n            values.number_of_chb_per_type[septic.size_of_CHB.inches].septic = Math.ceil(values.total_number_of_chb.septic * 1.05);\r\n            values.number_of_chb_per_type[septic.size_of_CHB.inches].total += values.number_of_chb_per_type[septic.size_of_CHB.inches].septic;\r\n\r\n            values.parameters.CHB_cement_multiplier.septic = values.quantity_of_cement_and_sand_for_CHB_mortar_per_sqm[septic.size_of_CHB.cm].bags_of_cement[septic.classMixture];\r\n            values.parameters.CHB_sand_multiplier.septic = values.quantity_of_cement_and_sand_for_CHB_mortar_per_sqm[septic.size_of_CHB.cm].sand;\r\n            values.parameters.rebar_diameter.septic = +septic.reinforcing_bars.rebar_diameter;\r\n\r\n            values.reinforcing_bars_multiplier.vertical.septic = values.length_of_reinforcing_bars_for_CHB.vertical_reinforcement[septic.reinforcing_bars.vertical_spacing].length_of_bars.per_sqm;\r\n            values.reinforcing_bars_multiplier.horizontal.septic = values.length_of_reinforcing_bars_for_CHB.horizontal_reinforcement[septic.reinforcing_bars.horizontal_spacing].length_of_bars.per_sqm;\r\n            values.reinforcing_bars_multiplier.tie_wire.septic = values.tie_wire_for_CHB[septic.reinforcing_bars.vertical_spacing][septic.reinforcing_bars.horizontal_spacing][septic.reinforcing_bars.tie_wire_length];\r\n            \r\n            values.CHB_mortar.cement.septic = Math.ceil(+values.total_wall_area.septic * +values.parameters.CHB_cement_multiplier.septic);\r\n            values.CHB_mortar.sand.septic = +values.total_wall_area.septic * +values.parameters.CHB_sand_multiplier.septic;\r\n\r\n            values.reinforcement.vertical_reinforcement.length.septic = +values.total_wall_area.septic * +values.reinforcing_bars_multiplier.vertical.septic;\r\n            values.reinforcement.vertical_reinforcement.number_of_rebars.septic = Math.ceil(values.reinforcement.vertical_reinforcement.length.septic/+septic.reinforcing_bars.rebar_length);\r\n\r\n            values.reinforcement.horizontal_reinforcement.length.septic = +values.total_wall_area.septic * +values.reinforcing_bars_multiplier.horizontal.septic;\r\n            values.reinforcement.horizontal_reinforcement.number_of_rebars.septic = Math.ceil(values.reinforcement.horizontal_reinforcement.length.septic/+septic.reinforcing_bars.rebar_length);\r\n\r\n            values.reinforcement.tie_wire_kgs.septic = +values.total_wall_area.septic * values.reinforcing_bars_multiplier.tie_wire.septic;\r\n\r\n            values.manpower.layering.duration = Math.ceil((values.total_number_of_chb.total) * (2/100) * (1/(+manpower.numberLaborer + +manpower.numberForeman + +manpower.numberSkilled)));\r\n            values.manpower.plastering.duration = Math.ceil((values.total_wall_area.total) * (2/8) * (1/(+manpower.numberLaborer + +manpower.numberForeman + +manpower.numberSkilled)));\r\n\r\n            values.manpower.layering.labor_cost = (values.manpower.layering.duration * +manpower.numberLaborer * +manpower.laborerWage) + (values.manpower.layering.duration * +manpower.numberForeman * +manpower.foremanWage) + (values.manpower.layering.duration * +manpower.numberSkilled * +manpower.skilledWage);\r\n            values.manpower.plastering.labor_cost = (values.manpower.plastering.duration * +manpower.numberLaborer * +manpower.laborerWage) + (values.manpower.plastering.duration * +manpower.numberForeman * +manpower.foremanWage) + (values.manpower.plastering.duration * +manpower.numberSkilled * +manpower.skilledWage);\r\n\r\n            values.material_summary.cement_bags.amount = 0;\r\n            values.material_summary.sand.amount = 0;\r\n            values.CHB_mortar.cement.walls.forEach((e, index) => {\r\n                values.material_summary.cement_bags.amount += values.CHB_mortar.cement.walls[index];\r\n                values.material_summary.sand.amount += values.CHB_mortar.sand.walls[index];\r\n            });\r\n            values.material_summary.cement_bags.amount += values.CHB_mortar.cement.septic;\r\n            values.material_summary.sand.amount += values.CHB_mortar.sand.septic;\r\n            values.for_plaster.cement.walls.forEach((e, index) => {\r\n                values.material_summary.cement_bags.amount += values.for_plaster.cement.walls[index];\r\n                values.material_summary.sand.amount += values.for_plaster.sand.walls[index];\r\n            });\r\n\r\n            values.material_summary.CHB['4 x 8 x 16'].amount = values.number_of_chb_per_type['4 x 8 x 16'].total;\r\n            values.material_summary.CHB['6 x 8 x 16'].amount = values.number_of_chb_per_type['6 x 8 x 16'].total;\r\n            values.material_summary.CHB['8 x 8 x 16'].amount = values.number_of_chb_per_type['8 x 8 x 16'].total;\r\n\r\n            values.summary.reinforcement.vertical_rebars = 0;\r\n            values.summary.reinforcement.horizontal_rebars = 0;\r\n            values.reinforcement.vertical_reinforcement.number_of_rebars.walls.forEach((e, index) => {\r\n                values.summary.reinforcement.vertical_rebars += values.reinforcement.vertical_reinforcement.number_of_rebars.walls[index];\r\n                values.summary.reinforcement.horizontal_rebars += values.reinforcement.horizontal_reinforcement.number_of_rebars.walls[index];\r\n            });\r\n            values.summary.reinforcement.vertical_rebars += values.reinforcement.vertical_reinforcement.number_of_rebars.septic;\r\n            values.summary.reinforcement.horizontal_rebars += values.reinforcement.horizontal_reinforcement.number_of_rebars.septic;\r\n\r\n            values.material_summary.rebar.amount = values.summary.reinforcement.vertical_rebars + values.summary.reinforcement.horizontal_rebars;\r\n            values.material_summary.tie_wire.amount = 0;\r\n\r\n            values.reinforcement.tie_wire_kgs.walls.forEach((e, index) => {\r\n                values.material_summary.tie_wire.amount += values.reinforcement.tie_wire_kgs.walls[index];\r\n            });\r\n            values.material_summary.tie_wire.amount += values.reinforcement.tie_wire_kgs.septic;\r\n\r\n            // Price\r\n            values.material_summary.cement_bags.price = values.material_summary.cement_bags.amount * +material.cement_bags;\r\n            values.material_summary.sand.price = values.material_summary.sand.amount * +material.sand;\r\n            values.material_summary.CHB['4 x 8 x 16'].price = values.material_summary.CHB['4 x 8 x 16'].amount * +material.CHB['4 x 8 x 16'];\r\n            values.material_summary.CHB['6 x 8 x 16'].price = values.material_summary.CHB['6 x 8 x 16'].amount * +material.CHB['6 x 8 x 16'];\r\n            values.material_summary.CHB['8 x 8 x 16'].price = values.material_summary.CHB['8 x 8 x 16'].amount * +material.CHB['8 x 8 x 16'];\r\n            values.material_summary.rebar.price = values.material_summary.rebar.amount * +material.rebar;\r\n            values.material_summary.tie_wire.price = values.material_summary.tie_wire.amount * +material.tie_wire;\r\n\r\n            console.log(masonryValues, values);\r\n            // Go to Summary View\r\n            setSummaryView(true);\r\n            return values;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Masonry\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            {\r\n                summaryView ?\r\n                <Row>\r\n                    <Col>\r\n                        <Summary values={solutionValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"close\" onClick={e => {\r\n                            setSummaryView(false);\r\n                        }}>Back</Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Row>\r\n                    <Col>\r\n                        {[...Array(wallFormCount)].map((e, i) => <Walls key={i} index={i} masonryValues={masonryValues} setMasonryValues={setMasonryValues} incrementWallFormCount={incrementWallFormCount} />)}\r\n                        <SepticWalls masonryValues={masonryValues} setMasonryValues={setMasonryValues} />\r\n                        <Manpower masonryValues={masonryValues} setMasonryValues={setMasonryValues} />\r\n                        <MaterialCosts masonryValues={masonryValues} setMasonryValues={setMasonryValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"check\" onClick={e => {\r\n                            calculate();\r\n                        }}>Summarize</Button>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Masonry;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout } from \"./layouts\";\n\n// Route Views\nimport Estimations from \"./views/Estimations\";\nimport AddNewEstimation from \"./views/AddNewEstimation\";\nimport Earthworks from \"./views/Estimations/Earthworks\";\nimport Formworks from \"./views/Estimations/Formworks\";\nimport Concrete from \"./views/Estimations/Concrete\";\nimport Masonry from \"./views/Estimations/Masonry\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/estimations\" />\n  },\n  {\n    path: \"/estimations\",\n    layout: DefaultLayout,\n    component: Estimations\n  },\n  {\n    path: \"/estimations-add\",\n    layout: DefaultLayout,\n    component: AddNewEstimation\n  },\n  {\n    path: \"/estimations-earthworks\",\n    layout: DefaultLayout,\n    component: Earthworks\n  },\n  {\n    path: \"/estimations-formworks\",\n    layout: DefaultLayout,\n    component: Formworks\n  },\n  {\n    path: \"/estimations-concrete\",\n    layout: DefaultLayout,\n    component: Concrete\n  },\n  {\n    path: \"/estimations-masonry\",\n    layout: DefaultLayout,\n    component: Masonry\n  },\n  {\n    path: \"/estimations-steelworks\",\n    layout: DefaultLayout,\n    component: Earthworks\n  }\n];","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col, Button } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport ColumnDetails from '../../components/formworks-estimation/ColumnDetails';\r\nimport BeamDetails from '../../components/formworks-estimation/BeamDetails';\r\nimport SlabDetails from '../../components/formworks-estimation/SlabDetails';\r\nimport Manpower from '../../components/formworks-estimation/Manpower';\r\nimport PlywoodAndLumber from '../../components/formworks-estimation/PlywoodAndLumber';\r\nimport MaterialCosts from '../../components/formworks-estimation/MaterialCosts';\r\nimport Summary from '../../components/formworks-estimation/Summary';\r\n\r\nfunction Formworks(props) {\r\n    const [summaryView, setSummaryView] = useState(false);\r\n\r\n    const [columnFormCount, setColumnFormCount] = useState(1);\r\n    const [beamFormCount, setBeamFormCount] = useState(1);\r\n    const [slabFormCount, setSlabFormCount] = useState(1);\r\n\r\n    const [solutionValues, setSolutionValues] = useState({\r\n        frame_size: 0.05,\r\n        column: {\r\n            rectangular: {\r\n                formworksArea: '',\r\n                total_number_of_plywood: '',\r\n                wood_frame: ''\r\n            },\r\n            circular: {\r\n                formworksArea: '',\r\n                total_number_of_sheet: '',\r\n                vertical_support: '',\r\n                circumferential_ties: ''\r\n            }\r\n        },\r\n        wood_frame_multiplier: {\r\n            column: {\r\n                size: '',\r\n                thickness: '',\r\n                multiplier: ''\r\n            },\r\n            beam: {\r\n                size: '',\r\n                thickness: '',\r\n                multiplier: ''\r\n            }\r\n        },\r\n        column_scaffolding: {\r\n            length: 0,\r\n            vertical: 0,\r\n            horizontal: 0,\r\n            diagonal: 0\r\n        },\r\n        column_scaffolding_multipliers: {\r\n            '2\"x2\"': {\r\n                vertical: 4.7,\r\n                horizontal: 21.0,\r\n                diagonal: 11.7\r\n            },\r\n            '2\"x3\"': {\r\n                vertical: 7.0,\r\n                horizontal: 31.67,\r\n                diagonal: 17.5\r\n            },\r\n            '2\"x4\"': {\r\n                vertical: 9.35,\r\n                horizontal: 42.25,\r\n                diagonal: 23.35\r\n            }\r\n        },\r\n        beam: {\r\n            total_length: 0,\r\n            area_needed: 0,\r\n            total_number_of_plywood: 0,\r\n            wood_frame: 0\r\n        },\r\n        beam_scaffolding: {\r\n            length: 0,\r\n            vertical: 0,\r\n            horizontal: 0\r\n        },\r\n        beam_scaffolding_multipliers: {\r\n            '2\"x2\"': {\r\n                vertical: 4.0,\r\n                horizontal: 4.7\r\n            },\r\n            '2\"x3\"': {\r\n                vertical: 6.0,\r\n                horizontal: 7.0\r\n            },\r\n            '2\"x4\"': {\r\n                vertical: 8.0,\r\n                horizontal: 9.35\r\n            }\r\n        },\r\n        slab: {\r\n            formworksArea: 0,\r\n            total_number_of_plywood: 0,\r\n            wood_frame: 0\r\n        },\r\n        slab_scaffolding: {\r\n            area: 0,\r\n            vertical: 0\r\n        },\r\n        slab_scaffolding_multipliers: {\r\n            '2\"x2\"': {\r\n                vertical: 6.1\r\n            },\r\n            '2\"x3\"': {\r\n                vertical: 9.1\r\n            },\r\n            '2\"x4\"': {\r\n                vertical: 12.1\r\n            }\r\n        },\r\n        manpower: {\r\n            duration: {\r\n                formworks: 0\r\n            },\r\n            labor_cost: {\r\n                formworks: 0\r\n            }\r\n        },\r\n        material_summary: {\r\n            plywood: {\r\n                data: [0, '12\"'],\r\n                pieces: 0,\r\n                cost: 0\r\n            },\r\n            wood_frames: {\r\n                data: [0, 0],\r\n                boardfoot: 0,\r\n                cost: 0\r\n            },\r\n            lumber: {\r\n                vertical: {\r\n                    data: [0, '12\"'],\r\n                    boardfoot: 0,\r\n                    cost: 0\r\n                },\r\n                horizontal: {\r\n                    data: [0, '12\"'],\r\n                    boardfoot: 0,\r\n                    cost: 0\r\n                }\r\n            }\r\n        },\r\n        quantity_of_lumber_scaffolding: {\r\n            '2\"x2\"': {\r\n                column: {\r\n                    vertical: 4.7,\r\n                    horizontal: 21.0,\r\n                    diagonal: 11.7\r\n                },\r\n                beam: {\r\n                    vertical: 4.0,\r\n                    horizontal: 4.7\r\n                },\r\n                flooring_slab: {\r\n                    vertical: 6.1\r\n                }\r\n            },\r\n            '2\"x3\"': {\r\n                column: {\r\n                    vertical: 7.0,\r\n                    horizontal: 31.67,\r\n                    diagonal: 17.5\r\n                },\r\n                beam: {\r\n                    vertical: 6.0,\r\n                    horizontal: 7.0\r\n                },\r\n                flooring_slab: {\r\n                    vertical: 9.1\r\n                }\r\n            },\r\n            '2\"x4\"': {\r\n                column: {\r\n                    vertical: 9.35,\r\n                    horizontal: 42.25,\r\n                    diagonal: 23.35\r\n                },\r\n                beam: {\r\n                    vertical: 8.0,\r\n                    horizontal: 9.35\r\n                },\r\n                flooring_slab: {\r\n                    vertical: 12.1\r\n                }\r\n            }\r\n        },\r\n        boardfoot_of_wood_for_column :{\r\n            '2\"x2\"': {\r\n                column: {\r\n                    '1/4\" (6mm)': 29.67,\r\n                    '1/2\" (12mm)': 20.33\r\n                },\r\n                beam: {\r\n                    '1/4\" (6mm)': 25.06,\r\n                    '1/2\" (12mm)': 18.66\r\n                }\r\n            },\r\n            '2\"x3\"': {\r\n                column: {\r\n                    '1/4\" (6mm)': 44.5,\r\n                    '1/2\" (12mm)': 30.55\r\n                },\r\n                beam: {\r\n                    '1/4\" (6mm)': 37.6,\r\n                    '1/2\" (12mm)': 28.0\r\n                }\r\n            },\r\n        },\r\n        quantity_of_metal_form_for_circular_column: {\r\n            \"0.90 x 2.40\": {\r\n                number_of_sheets: 0.462,\r\n                length_of_vertical_ribs: {\r\n                    '15 cm': 25,\r\n                    '20 cm': 18\r\n                },\r\n                length_of_circumferential_ties: 9.52\r\n            },\r\n            \"1.20 x 2.40\": {\r\n                number_of_sheets: 0.347,\r\n                length_of_vertical_ribs: {\r\n                    '15 cm': 25,\r\n                    '20 cm': 18\r\n                },\r\n                length_of_circumferential_ties: 9.52\r\n            }\r\n        }\r\n    });\r\n\r\n    const [formworkValues, setFormWorkValues] = useState({\r\n        columnDetailsValues: [],\r\n        beamDetailsValues: [],\r\n        slabDetailsValues: [],\r\n        plywoodAndLumberValues: {},\r\n        manpowerValues: {},\r\n        materialCostsValues: {}\r\n    });\r\n\r\n    const incrementColumnFormCount = () => {\r\n        setColumnFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementBeamFormCount = () => {\r\n        setBeamFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementSlabFormCount = () => {\r\n        setSlabFormCount(count => count + 1);\r\n    }\r\n\r\n    const calculate = () => {\r\n        setSolutionValues(values => {\r\n            // Establish variables\r\n            const column = formworkValues.columnDetailsValues;\r\n            const beam = formworkValues.beamDetailsValues;\r\n            const slab = formworkValues.slabDetailsValues;\r\n            const plywoodAndLumber = formworkValues.plywoodAndLumberValues;\r\n            const manpower = formworkValues.manpowerValues;\r\n            const materialCosts = formworkValues.materialCostsValues;\r\n\r\n            // Woodframe Multiplier\r\n            values.wood_frame_multiplier.column.size = values.wood_frame_multiplier.beam.size = plywoodAndLumber.palValues.wood_frame_size;\r\n            values.wood_frame_multiplier.column.thickness = values.wood_frame_multiplier.beam.thickness = plywoodAndLumber.palValues.wood_frame_thickness;\r\n            values.wood_frame_multiplier.column.multiplier = values.boardfoot_of_wood_for_column[plywoodAndLumber.palValues.wood_frame_size].column[plywoodAndLumber.palValues.wood_frame_thickness];\r\n            values.wood_frame_multiplier.beam.multiplier = values.boardfoot_of_wood_for_column[plywoodAndLumber.palValues.wood_frame_size].beam[plywoodAndLumber.palValues.wood_frame_thickness];\r\n\r\n            // Column Rectangular Form Works Area\r\n            values.column.rectangular.formworksArea = 0;\r\n            column.forEach((e, index) => {\r\n                let result = (((2 * +column[index].columnRectangular.x) + (2 * +column[index].columnRectangular.y) + (4 * +values.frame_size)) * +column[index].columnCount * (+column[index].columnRectangular.z + +column[index].columnHeight));\r\n\r\n                values.column.rectangular.formworksArea += +result.toFixed(2);\r\n            });\r\n\r\n            // Column Rectangular Total Number of Plywood\r\n            values.column.rectangular.total_number_of_plywood = Math.ceil(values.column.rectangular.formworksArea / (plywoodAndLumber.palValues.size_of_plywood.x * plywoodAndLumber.palValues.size_of_plywood.y));\r\n            values.column.rectangular.wood_frame = Math.ceil(values.column.rectangular.total_number_of_plywood * values.wood_frame_multiplier.column.multiplier);\r\n\r\n            // Column Circular Form Works Area\r\n            values.column.circular.formworksArea = 0;\r\n            column.forEach((e, index) => {\r\n                let result = +column[index].columnCircular.d * 3.1416 * +column[index].columnCount * +column[index].columnHeight;\r\n\r\n                values.column.circular.formworksArea += +result.toFixed(2);\r\n            });\r\n\r\n            // Column Circular Total Number of Sheet\r\n            values.column.circular.total_number_of_sheet = Math.ceil(values.column.circular.formworksArea * values.quantity_of_metal_form_for_circular_column[plywoodAndLumber.palValues.metal_sheets].number_of_sheets);\r\n            // Column Circular Vertical Support\r\n            values.column.circular.vertical_support = Math.ceil((values.column.circular.formworksArea * values.quantity_of_metal_form_for_circular_column[plywoodAndLumber.palValues.metal_sheets].length_of_vertical_ribs[plywoodAndLumber.palValues.spacing_for_vertical_ribs])/plywoodAndLumber.palValues.length_of_steel_bar);\r\n            // Column Circular Circumferential Ties\r\n            values.column.circular.circumferential_ties = Math.ceil((values.column.circular.formworksArea * values.quantity_of_metal_form_for_circular_column.length_of_circumferential_ties)/plywoodAndLumber.palValues.length_of_steel_bar);\r\n\r\n            // Column Scaffolding Length\r\n            values.column_scaffolding.length = 0;\r\n            column.forEach((e, index) => {\r\n                let result = +column[index].columnCount * +column[index].columnHeight;\r\n\r\n                values.column_scaffolding.length += result;\r\n            });\r\n\r\n            // Column Scaffolding Vertical\r\n            values.column_scaffolding.vertical = Math.ceil(values.column_scaffolding.length * values.column_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.vertical].vertical);\r\n            // Column Scaffolding Horizontal\r\n            values.column_scaffolding.horizontal = Math.ceil(values.column_scaffolding.length * values.column_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.horizontal].horizontal);\r\n            // Column Scaffolding Diagonal\r\n            values.column_scaffolding.diagonal = Math.ceil(values.column_scaffolding.length * values.column_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.diagonal].diagonal);\r\n\r\n            // Beam Total Length\r\n            values.beam.total_length = 0;\r\n            values.beam_scaffolding.length = 0;\r\n            beam.forEach((e, index) => {\r\n                beam[index].beamValues.forEach((ee, ii) => {\r\n                    let result = +beam[index].beamValues[ii].length * +beam[index].beamValues[ii].amount;\r\n\r\n                    values.beam.total_length += result;\r\n                    values.beam_scaffolding.length += result;\r\n                })\r\n            });\r\n\r\n            // Beam Area Needed\r\n            values.beam.area_needed = 0;\r\n            beam.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                beam[index].beamValues.forEach((ee, ii) => {\r\n                    let result = +beam[index].beamValues[ii].length * +beam[index].beamValues[ii].amount;\r\n                    total += result;\r\n                });\r\n\r\n                console.log(beam[index]);\r\n\r\n                let res = total * ((2 * +beam[index].beamsDimensions.y) + (+beam[index].beamsDimensions.x) + (2 * values.frame_size));\r\n                values.beam.area_needed += res;\r\n            });\r\n\r\n            values.beam.total_number_of_plywood = Math.ceil(values.beam.area_needed / (plywoodAndLumber.palValues.size_of_plywood.x * plywoodAndLumber.palValues.size_of_plywood.y));\r\n            values.beam.wood_frame = Math.ceil(values.beam.total_number_of_plywood * values.wood_frame_multiplier.beam.multiplier);\r\n\r\n            // Beam Scaffolding Vertical\r\n            values.beam_scaffolding.vertical = Math.ceil(values.beam_scaffolding.length * values.beam_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.vertical].vertical);\r\n            values.beam_scaffolding.horizontal = Math.ceil(values.beam_scaffolding.length * values.beam_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.horizontal].horizontal);\r\n\r\n            // Slab Area for Formworks\r\n            values.slab.formworksArea = 0;\r\n            values.slab_scaffolding.area = 0;\r\n            slab.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                console.log('slab values', slab[index].slabValues);\r\n\r\n                slab[index].slabValues.forEach((ee, ii) => {\r\n                    let result = +slab[index].slabValues[ii].horizontal * +slab[index].slabValues[ii].vertical;\r\n                    total += result;\r\n                });\r\n\r\n                console.log(beam[index]);\r\n\r\n                let res = total;\r\n                values.slab.formworksArea += res;\r\n                values.slab_scaffolding.area += res;\r\n            });\r\n\r\n            // Slab Total Number of Plywood\r\n            values.slab.total_number_of_plywood = Math.ceil(values.slab.formworksArea / (plywoodAndLumber.palValues.size_of_plywood.x * plywoodAndLumber.palValues.size_of_plywood.y));\r\n            values.slab.wood_frame = Math.ceil(values.slab.total_number_of_plywood * 39.77);\r\n\r\n            // Slab Scaffolding Vertical\r\n            values.slab_scaffolding.vertical = Math.ceil(values.slab_scaffolding.area * values.slab_scaffolding_multipliers[plywoodAndLumber.palValues.lumber_size.vertical].vertical);\r\n\r\n            // Manpower Formworks Duration and Labor Cost\r\n            values.manpower.duration.formworks = Math.ceil((values.column.rectangular.formworksArea + values.beam.area_needed + values.slab.formworksArea) * (1/2.5) * (1/(+manpower.numberLaborer + +manpower.numberSkilled)));\r\n            values.manpower.labor_cost.formworks = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.duration.formworks) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.duration.formworks) + (+manpower.numberSkilled * +manpower.skilledWage * values.manpower.duration.formworks);\r\n\r\n            // Material Costs\r\n            if (plywoodAndLumber.palValues.size_of_plywood.x === \"0.9\") values.material_summary.plywood.data[0] = \"0.9 x 2.40\";\r\n            else values.material_summary.plywood.data[0] = \"1.2 x 2.40\";\r\n\r\n            values.material_summary.plywood.pieces = values.column.rectangular.total_number_of_plywood + values.beam.total_number_of_plywood + values.slab.total_number_of_plywood;\r\n\r\n            if (plywoodAndLumber.palValues.wood_frame_size === '2\"x2\"') values.material_summary.wood_frames.data[0] = '2\" x 2\" x';\r\n            else if (plywoodAndLumber.palValues.wood_frame_size === '2\"x3\"') values.material_summary.wood_frames.data[0] = '2\" x 3\" x';\r\n            else values.material_summary.wood_frames.data[0] = '0';\r\n\r\n            values.material_summary.wood_frames.boardfoot = values.column.rectangular.wood_frame + values.beam.wood_frame + values.slab.wood_frame;\r\n\r\n            if (plywoodAndLumber.palValues.wood_frame_thickness === '1/4\" (6mm)') values.material_summary.wood_frames.data[1] = '1/4\"';\r\n            else if (plywoodAndLumber.palValues.wood_frame_thickness === '1/2\" (12mm)') values.material_summary.wood_frames.data[1] = '1/2\"';\r\n            else values.material_summary.wood_frames.data[1] = '0';\r\n            \r\n            // Cost of Plywood and Woodframes\r\n            values.material_summary.plywood.cost = +materialCosts.costValues.plywood * values.material_summary.plywood.pieces;\r\n            values.material_summary.wood_frames.cost = +materialCosts.costValues.wood_frame * values.material_summary.wood_frames.boardfoot;\r\n\r\n            // Lumber\r\n            if (plywoodAndLumber.palValues.lumber_size.vertical === '2\"x2\"') values.material_summary.lumber.vertical.data[0] = '2\" x 2\" x\"';\r\n            else if (plywoodAndLumber.palValues.lumber_size.vertical === '2\"x3\"') values.material_summary.lumber.vertical.data[0] = '2\" x 3\" x';\r\n            else if (plywoodAndLumber.palValues.lumber_size.vertical === '2\"x3\"') values.material_summary.lumber.vertical.data[0] = '2\" x 4\" x';\r\n            else values.material_summary.lumber.vertical.data[0] = '0';\r\n\r\n            values.material_summary.lumber.vertical.boardfoot = values.column_scaffolding.vertical + values.column_scaffolding.diagonal + values.beam_scaffolding.vertical + values.slab_scaffolding.vertical;\r\n\r\n            if (plywoodAndLumber.palValues.lumber_size.horizontal === '2\"x2\"') values.material_summary.lumber.horizontal.data[0] = '2\" x 2\" x\"';\r\n            else if (plywoodAndLumber.palValues.lumber_size.horizontal === '2\"x3\"') values.material_summary.lumber.horizontal.data[0] = '2\" x 3\" x';\r\n            else if (plywoodAndLumber.palValues.lumber_size.horizontal === '2\"x4\"') values.material_summary.lumber.horizontal.data[0] = '2\" x 4\" x';\r\n            else values.material_summary.lumber.horizontal.data[0] = '0';\r\n\r\n            values.material_summary.lumber.horizontal.boardfoot = values.column_scaffolding.horizontal + values.beam_scaffolding.horizontal;\r\n\r\n            // Cost of Lumber Horizontal and Vertical\r\n            values.material_summary.lumber.vertical.cost = values.material_summary.lumber.vertical.boardfoot * +materialCosts.costValues.lumber[0];\r\n            values.material_summary.lumber.horizontal.cost = values.material_summary.lumber.horizontal.boardfoot * +materialCosts.costValues.lumber[1];\r\n\r\n            console.log(formworkValues, values);\r\n            // Go to Summary View\r\n            setSummaryView(true);\r\n            return values;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Formworks\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            {\r\n                summaryView ?\r\n                <Row>\r\n                    <Col>\r\n                        <Summary values={solutionValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"close\" onClick={e => {\r\n                            setSummaryView(false);\r\n                        }}>Back</Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Row>\r\n                    <Col>\r\n                        {[...Array(columnFormCount)].map((e, i) => <ColumnDetails key={i} index={i} formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} incrementColumnFormCount={incrementColumnFormCount} />)}\r\n                        {[...Array(beamFormCount)].map((e, i) => <BeamDetails key={i} index={i} formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} incrementBeamFormCount={incrementBeamFormCount} />)}\r\n                        {[...Array(slabFormCount)].map((e, i) => <SlabDetails key={i} index={i} formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} incrementSlabFormCount={incrementSlabFormCount} />)}\r\n                        <PlywoodAndLumber formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} />\r\n                        <Manpower formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} />\r\n                        <MaterialCosts formworkValues={formworkValues} setFormWorkValues={setFormWorkValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"check\" onClick={e => {\r\n                            calculate();\r\n                        }}>Summarize</Button>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Formworks;","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col, Button } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport ColumnDetails from '../../components/concrete-estimation/ColumnDetails';\r\nimport ColumnFootingDetails from '../../components/concrete-estimation/ColumnFootingDetails';\r\nimport WallFootingDetails from '../../components/concrete-estimation/WallFootingDetails';\r\nimport BeamDetails from '../../components/concrete-estimation/BeamDetails';\r\nimport SlabDetails from '../../components/concrete-estimation/SlabDetails';\r\nimport SepticTankDetails from '../../components/concrete-estimation/SepticTankDetails';\r\nimport ConcreteStairDetails from '../../components/concrete-estimation/ConcreteStairDetails';\r\nimport CementMix from '../../components/concrete-estimation/CementMix';\r\nimport Manpower from '../../components/concrete-estimation/Manpower';\r\nimport MaterialCosts from '../../components/concrete-estimation/MaterialCosts';\r\nimport Summary from '../../components/concrete-estimation/Summary';\r\n\r\nfunction Concrete(props) {\r\n    const [summaryView, setSummaryView] = useState(false);\r\n\r\n    const [columnFormCount, setColumnFormCount] = useState(1);\r\n    const [columnFootingCount, setColumnFootingCount] = useState(1);\r\n    const [wallFootingCount, setWallFootingCount] = useState(1);\r\n    const [beamFormCount, setBeamFormCount] = useState(1);\r\n    const [slabFormCount, setSlabFormCount] = useState(1);\r\n    const [concreteStairFormCount, setConcreteStairFormCount] = useState(1);\r\n\r\n    const [concreteValues, setConcreteValues] = useState({\r\n        columnDetailsValues: [],\r\n        columnFootingValues: [],\r\n        wallFootingValues: [],\r\n        beamDetailsValues: [],\r\n        slabDetailsValues: [],\r\n        septicTankValues: {},\r\n        concreteStairValues: [],\r\n        cementMixValues: {},\r\n        manpowerValues: {},\r\n        materialCostsValues: {}\r\n    });\r\n\r\n    const [solutionValues, setSolutionValues] = useState({\r\n        multipliers: {\r\n            cement: 0,\r\n            sand: 0.5,\r\n            gravel: 1\r\n        },\r\n        column: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        column_footing: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        wall_footing: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        beam: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        slab: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        septic_tank: {\r\n            total_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        concrete_stairs: {\r\n            volume_of_landing: 0,\r\n            volume_of_first_block: 0,\r\n            volume_of_second_block: 0,\r\n            length_of_waist: 0,\r\n            volume_of_waist: 0,\r\n            number_of_steps: 0,\r\n            volume_of_1_step: 0,\r\n            volume_of_n_steps: 0,\r\n            total_pcc_volume: 0,\r\n            required: {\r\n                cement: 0,\r\n                sand: 0,\r\n                gravel: 0\r\n            }\r\n        },\r\n        volumetric_method: {\r\n            class_mixture: {\r\n                \"AA\": {\r\n                    proportions: \"1 :1.5 : 3\",\r\n                    cement_bag: {\r\n                        \"40kg\": 12.0,\r\n                        \"50kg\": 9.5\r\n                    },\r\n                    sand: 0.5,\r\n                    gravel: 1.0\r\n                },\r\n                \"A\": {\r\n                    proportions: \"1 :2 : 4\",\r\n                    cement_bag: {\r\n                        \"40kg\": 9.0,\r\n                        \"50kg\": 7.0\r\n                    },\r\n                    sand: 0.5,\r\n                    gravel: 1.0\r\n                },\r\n                \"B\": {\r\n                    proportions: \"1 :2.5 : 5\",\r\n                    cement_bag: {\r\n                        \"40kg\": 7.5,\r\n                        \"50kg\": 6.0\r\n                    },\r\n                    sand: 0.5,\r\n                    gravel: 1.0\r\n                },\r\n                \"C\": {\r\n                    proportions: \"1 :3 : 6\",\r\n                    cement_bag: {\r\n                        \"40kg\": 6.0,\r\n                        \"50kg\": 5.0\r\n                    },\r\n                    sand: 0.5,\r\n                    gravel: 1.0\r\n                }\r\n            }\r\n        },\r\n        manpower: {\r\n            concreting: {\r\n                duration: 0,\r\n                labor_cost: 0\r\n            }\r\n        },\r\n        material_summary: {\r\n            cement_bags: {\r\n                amount: 0,\r\n                price: 0\r\n            },\r\n            sand: {\r\n                amount: 0,\r\n                price: 0\r\n            },\r\n            gravel: {\r\n                amount: 0,\r\n                price: 0\r\n            }\r\n        }\r\n    });\r\n\r\n    const incrementColumnFormCount = () => {\r\n        setColumnFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementColumnFootingCount = () => {\r\n        setColumnFootingCount(count => count + 1);\r\n    }\r\n\r\n    const incrementWallFootingCount = () => {\r\n        setWallFootingCount(count => count + 1);\r\n    }\r\n\r\n    const incrementBeamFormCount = () => {\r\n        setBeamFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementSlabFormCount = () => {\r\n        setSlabFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementConcreteStairFormCount = () => {\r\n        setConcreteStairFormCount(count => count + 1);\r\n    }\r\n\r\n    const calculate = () => {\r\n        setSolutionValues(values => {\r\n            // Establish variables\r\n            const column = concreteValues.columnDetailsValues;\r\n            const column_footing = concreteValues.columnFootingValues;\r\n            const wall_footing = concreteValues.wallFootingValues;\r\n            const beam = concreteValues.beamDetailsValues;\r\n            const slab = concreteValues.slabDetailsValues;\r\n            const septic_tank = concreteValues.septicTankValues;\r\n            const concrete_stair = concreteValues.concreteStairValues;\r\n            const cement_mix = concreteValues.cementMixValues;\r\n            const manpower = concreteValues.manpowerValues;\r\n            const material = concreteValues.materialCostsValues;\r\n\r\n            // Set Multipliers\r\n            values.multipliers.cement = values.volumetric_method.class_mixture[cement_mix.classMixture].cement_bag[cement_mix.cementBag];\r\n\r\n            // Set Column Total Volume\r\n            values.column.total_volume = 0;\r\n            column.forEach((e, index) => {\r\n                let result = +column[index].columnRectangular.x * +column[index].columnRectangular.y * (+column[index].columnRectangular.z + +column[index].columnHeight) * +column[index].columnCount;\r\n                result += (+column[index].columnCircular.d ? +column[index].columnCircular.d : 0) * ((+column[index].columnCircular.z ? +column[index].columnCircular.z : 0) + +column[index].columnHeight) * +column[index].columnCount;\r\n\r\n                values.column.total_volume += result;\r\n            });\r\n\r\n            // Set Column Required\r\n            values.column.required.cement = Math.ceil(values.column.total_volume * values.multipliers.cement);\r\n            values.column.required.sand = values.column.total_volume * values.multipliers.sand;\r\n            values.column.required.gravel = values.column.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Column Footing Total Volume\r\n            values.column_footing.total_volume = 0;\r\n            column_footing.forEach((e, index) => {\r\n                let result = +column_footing[index].columnRectangular.x * +column_footing[index].columnRectangular.y * +column_footing[index].columnRectangular.z * +column_footing[index].columnCount;\r\n                result += (+column_footing[index].columnCircular.d ? +column_footing[index].columnCircular.d : 0) * (+column_footing[index].columnCircular.z ? +column_footing[index].columnCircular.z : 0) * +column_footing[index].columnCount;\r\n\r\n                values.column_footing.total_volume += result;\r\n            });\r\n\r\n            // Set Column Footing Required\r\n            values.column_footing.required.cement = Math.ceil(values.column_footing.total_volume * values.multipliers.cement);\r\n            values.column_footing.required.sand = values.column_footing.total_volume * values.multipliers.sand;\r\n            values.column_footing.required.gravel = values.column_footing.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Wall Footing Total Volume\r\n            values.wall_footing.total_volume = 0;\r\n            wall_footing.forEach((e, index) => {\r\n                let result = +wall_footing[index].wallFootingDepth * +wall_footing[index].wallFootingWidth * +wall_footing[index].wallPerimeter;\r\n\r\n                values.wall_footing.total_volume += result;\r\n            });\r\n\r\n            // Set Wall Footing Required\r\n            values.wall_footing.required.cement = Math.ceil(values.wall_footing.total_volume * values.multipliers.cement);\r\n            values.wall_footing.required.sand = values.wall_footing.total_volume * values.multipliers.sand;\r\n            values.wall_footing.required.gravel = values.wall_footing.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Beam Total Volume\r\n            values.beam.total_volume = 0;\r\n            beam.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                beam[index].beamValues.forEach((ee, ii) => {\r\n                    let result = +beam[index].beamValues[ii].length * +beam[index].beamValues[ii].amount;\r\n                    total += result;\r\n                });\r\n\r\n                let res = total * +beam[index].beamsDimensions.y * +beam[index].beamsDimensions.x;\r\n                values.beam.total_volume += res;\r\n            });\r\n\r\n            // Set Beam Required\r\n            values.beam.required.cement = Math.ceil(values.beam.total_volume * values.multipliers.cement);\r\n            values.beam.required.sand = values.beam.total_volume * values.multipliers.sand;\r\n            values.beam.required.gravel = values.beam.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Slab Total Volume\r\n            values.slab.total_volume = 0;\r\n            slab.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                slab[index].slabValues.forEach((ee, ii) => {\r\n                    let result = +slab[index].slabValues[ii].horizontal * +slab[index].slabValues[ii].vertical;\r\n                    total += result;\r\n                });\r\n\r\n                console.log(total);\r\n\r\n                let res = total * (+slab[index].slabThickness / 100);\r\n\r\n                console.log(slab[index]);\r\n\r\n                values.slab.total_volume += res;\r\n            });\r\n\r\n            // Set Slab Required\r\n            values.slab.required.cement = Math.ceil(values.slab.total_volume * values.multipliers.cement);\r\n            values.slab.required.sand = values.slab.total_volume * values.multipliers.sand;\r\n            values.slab.required.gravel = values.slab.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Septic Tank Total Volume\r\n            values.septic_tank.total_volume = +septic_tank.topSlabDetails.length * +septic_tank.topSlabDetails.width * +septic_tank.topSlabDetails.thickness;\r\n            values.septic_tank.total_volume += +septic_tank.bottomSlabDetails.length * +septic_tank.bottomSlabDetails.width * +septic_tank.bottomSlabDetails.thickness;\r\n\r\n            // Set Septic Tank Required\r\n            values.septic_tank.required.cement = Math.ceil(values.septic_tank.total_volume * values.multipliers.cement);\r\n            values.septic_tank.required.sand = values.septic_tank.total_volume * values.multipliers.sand;\r\n            values.septic_tank.required.gravel = values.septic_tank.total_volume * values.multipliers.gravel;\r\n\r\n            // Set Concrete Stairs Values\r\n            values.concrete_stairs.volume_of_landing = 0;\r\n            values.concrete_stairs.volume_of_first_block = 0;\r\n            values.concrete_stairs.volume_of_second_block = 0;\r\n            values.concrete_stairs.length_of_waist = 0;\r\n            values.concrete_stairs.volume_of_waist = 0;\r\n            values.concrete_stairs.volume_of_n_steps = 0;\r\n            values.concrete_stairs.total_pcc_volume = 0;\r\n            concrete_stair.forEach((e, index) => {\r\n                let total = 0;\r\n\r\n                concrete_stair[index].concreteStairValues.landing.forEach((ee, ii) => {\r\n                    let result = (+concrete_stair[index].concreteStairValues.landing[ii].landing_length - +concrete_stair[index].concreteStairValues.run_length) * +concrete_stair[index].concreteStairValues.landing[ii].landing_width * +concrete_stair[index].concreteStairValues.landing[ii].thickness_of_landing;\r\n                    total += result;\r\n                });\r\n\r\n                values.concrete_stairs.volume_of_landing = total;\r\n                values.concrete_stairs.volume_of_first_block = (2 * +concrete_stair[index].concreteStairValues.run_length) * +concrete_stair[index].concreteStairValues.width_of_stair * +concrete_stair[index].concreteStairValues.landing[0].thickness_of_landing;\r\n                values.concrete_stairs.volume_of_second_block = +concrete_stair[index].concreteStairValues.run_length * (+concrete_stair[index].concreteStairValues.landing[0].landing_length - +concrete_stair[index].concreteStairValues.run_length) * +concrete_stair[index].concreteStairValues.landing[0].thickness_of_landing;\r\n\r\n                values.concrete_stairs.length_of_waist = Math.sqrt(Math.pow(+concrete_stair[index].concreteStairValues.length_of_stair - (2 * +concrete_stair[index].concreteStairValues.run_length) - (+concrete_stair[index].concreteStairValues.run_length - +concrete_stair[index].concreteStairValues.landing[0].landing_length), 2) + Math.pow((+concrete_stair[index].concreteStairValues.height_of_stair - +concrete_stair[index].concreteStairValues.landing[0].thickness_of_landing), 2));\r\n                values.concrete_stairs.volume_of_waist = values.concrete_stairs.length_of_waist * +concrete_stair[index].concreteStairValues.landing[0].landing_length * +concrete_stair[index].concreteStairValues.landing[0].landing_width;\r\n                \r\n                values.concrete_stairs.number_of_steps = Math.ceil((+concrete_stair[index].concreteStairValues.height_of_stair/+concrete_stair[index].concreteStairValues.rise_length) - 1);\r\n                values.volume_of_1_step = 0.5 * +concrete_stair[index].concreteStairValues.rise_length * +concrete_stair[index].concreteStairValues.run_length;\r\n                values.volume_of_n_steps = values.concrete_stairs.number_of_steps * values.volume_of_1_step;\r\n\r\n                values.concrete_stairs.total_pcc_volume += (values.concrete_stairs.volume_of_landing + values.concrete_stairs.volume_of_first_block + values.concrete_stairs.volume_of_second_block + values.concrete_stairs.volume_of_waist + values.volume_of_n_steps);\r\n            });\r\n\r\n            // Set Concrete Stairs Required\r\n            values.concrete_stairs.required.cement = Math.ceil(values.concrete_stairs.total_pcc_volume * values.multipliers.cement);\r\n            values.concrete_stairs.required.sand = values.concrete_stairs.total_pcc_volume * values.multipliers.sand;\r\n            values.concrete_stairs.required.gravel = values.concrete_stairs.total_pcc_volume * values.multipliers.gravel;\r\n\r\n            // Set Manpower Duration\r\n            values.manpower.concreting.duration = Math.ceil((values.column.total_volume + values.column_footing.total_volume + values.wall_footing.total_volume + values.beam.total_volume + values.slab.total_volume + values.concrete_stairs.total_pcc_volume) * (1/0.6) * (1/(+manpower.numberLaborer + +manpower.numberForeman + +manpower.numberSkilled)));\r\n\r\n            // Set Manpower Labor Cost\r\n            values.manpower.concreting.labor_cost = (+manpower.numberLaborer * +manpower.laborerWage * values.manpower.concreting.duration) + (+manpower.numberForeman * +manpower.foremanWage * values.manpower.concreting.duration) + (+manpower.numberSkilled * +manpower.skilledWage * values.manpower.concreting.duration);\r\n\r\n            // Set Material Summary Amount\r\n            values.material_summary.cement_bags.amount = values.column.required.cement + values.column_footing.required.cement + values.wall_footing.required.cement + values.beam.required.cement + values.slab.required.cement + values.septic_tank.required.cement + values.concrete_stairs.required.cement;\r\n            values.material_summary.sand.amount = values.column.required.sand + values.column_footing.required.sand + values.wall_footing.required.sand + values.beam.required.sand + values.slab.required.sand + values.septic_tank.required.sand + values.concrete_stairs.required.sand;\r\n            values.material_summary.gravel.amount = values.column.required.gravel + values.column_footing.required.gravel + values.wall_footing.required.gravel + values.beam.required.gravel + values.slab.required.gravel + values.septic_tank.required.gravel + values.concrete_stairs.required.gravel;\r\n\r\n            // Set Material Summary Price\r\n            values.material_summary.cement_bags.price = values.material_summary.cement_bags.amount * +material.costValues.cement_bags;\r\n            values.material_summary.sand.price = values.material_summary.sand.amount * +material.costValues.sand;\r\n            values.material_summary.gravel.price = values.material_summary.gravel.amount * +material.costValues.gravel;\r\n\r\n            console.log(concreteValues, values);\r\n            // Go to Summary View\r\n            setSummaryView(true);\r\n            return values;\r\n        });\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Concrete\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            {\r\n                summaryView ?\r\n                <Row>\r\n                    <Col>\r\n                        <Summary values={solutionValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"close\" onClick={e => {\r\n                            setSummaryView(false);\r\n                        }}>Back</Button>\r\n                    </Col>\r\n                </Row>\r\n                :\r\n                <Row>\r\n                    <Col>\r\n                        {[...Array(columnFormCount)].map((e, i) => <ColumnDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementColumnFormCount={incrementColumnFormCount} />)}\r\n                        {[...Array(columnFootingCount)].map((e, i) => <ColumnFootingDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementColumnFormCount={incrementColumnFootingCount} />)}\r\n                        {[...Array(wallFootingCount)].map((e, i) => <WallFootingDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementColumnFormCount={incrementWallFootingCount} />)}\r\n                        {[...Array(beamFormCount)].map((e, i) => <BeamDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementBeamFormCount={incrementBeamFormCount} />)}\r\n                        {[...Array(slabFormCount)].map((e, i) => <SlabDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementSlabFormCount={incrementSlabFormCount} />)}\r\n                        <SepticTankDetails concreteValues={concreteValues} setConcreteValues={setConcreteValues} />\r\n                        {[...Array(concreteStairFormCount)].map((e, i) => <ConcreteStairDetails key={i} index={i} concreteValues={concreteValues} setConcreteValues={setConcreteValues} incrementConcreteStairFormCount={incrementConcreteStairFormCount} />)}\r\n                        <CementMix concreteValues={concreteValues} setConcreteValues={setConcreteValues} ></CementMix>\r\n                        <Manpower concreteValues={concreteValues} setConcreteValues={setConcreteValues} />\r\n                        <MaterialCosts concreteValues={concreteValues} setConcreteValues={setConcreteValues} />\r\n                    </Col>\r\n                    <Col md=\"12\">\r\n                        <Button type=\"submit\" icon=\"check\" onClick={e => {\r\n                            calculate();\r\n                        }}>Summarize</Button>\r\n                    </Col>\r\n                </Row>\r\n            }\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Concrete;","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-2\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = page => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\nimport \"../src/assets/custom.css\";\n\nexport default () => (\n  <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker(props => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n    document.addEventListener('deviceready', () => {\n        renderReactDom();\n    }, false);\n} else {\n    renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}