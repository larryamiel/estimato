{"version":3,"sources":["images/shards-dashboards-logo.svg","flux/constants.js","flux/dispatcher.js","flux/store.js","data/sidebar-nav-items.js","components/layout/MainNavbar/NavbarToggle.js","components/layout/MainNavbar/MainNavbar.js","components/layout/MainSidebar/SidebarMainNavbar.js","components/layout/MainSidebar/SidebarSearch.js","components/layout/MainSidebar/SidebarNavItem.js","components/layout/MainSidebar/SidebarNavItems.js","components/layout/MainSidebar/MainSidebar.js","layouts/Default.js","components/common/PageTitle.js","components/add-new-estimation/AddNewEstimationForm.js","views/Estimations.js","views/AddNewEstimation.js","components/earthworks-estimation/ColumnFootingDetails.js","components/earthworks-estimation/WallFootingDetails.js","components/earthworks-estimation/GravelBedding.js","components/earthworks-estimation/SepticTankDetails.js","components/earthworks-estimation/OnFill.js","components/earthworks-estimation/SlabDetail.js","components/earthworks-estimation/Manpower.js","views/Estimations/Earthworks.js","components/formworks-estimation/ColumnDetails.js","components/formworks-estimation/BeamDetails.js","components/formworks-estimation/Manpower.js","views/Estimations/Formworks.js","routes.js","withTracker.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","constants","dispatcher","Dispatcher","_store","menuVisible","navItems","title","to","htmlBefore","htmlAfter","store","Store","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","registerToActions","bind","assertThisInitialized","toggleSidebar","register","actionType","_ref","payload","Constants","emit","callback","on","removeListener","EventEmitter","NavbarToggle","props","handleClick","dispatch","react_default","a","createElement","className","href","onClick","React","Component","MainNavbar","layout","stickyTop","classes","classNames","shards_react_es","type","MainNavbar_NavbarToggle","defaultProps","SidebarMainNavbar","handleToggleSidebar","hideLogoText","style","lineHeight","id","maxWidth","src","require","alt","SidebarSearch","display","minHeight","seamless","placeholder","aria-label","SidebarNavItem","item","tag","RouteNavLink","dangerouslySetInnerHTML","__html","SidebarNavItems","state","getSidebarItems","onChange","addChangeListener","removeChangeListener","setState","objectSpread","items","map","idx","MainSidebar_SidebarNavItem","key","MainSidebar","sidebarNavItems","getMenuState","lg","size","md","MainSidebar_SidebarMainNavbar","MainSidebar_SidebarNavItems","DefaultLayout","children","noNavbar","noFooter","fluid","layout_MainSidebar_MainSidebar","offset","sm","layout_MainNavbar_MainNavbar","PageTitle","subtitle","attrs","objectWithoutProperties","assign","xs","AddNewEstimationForm","flush","form","htmlFor","Estimations","noGutters","common_PageTitle","add_new_estimation_AddNewEstimationForm","AddNewEstimation","ColumnFootingDetails","_useState","useState","_useState2","slicedToArray","columnType","setColumnType","_useState3","_useState4","footingType","setFootingType","_useState5","x","y","z","_useState6","columnRectangular","setColumnRectangular","_useState7","d","_useState8","columnCircular","setColumnCircular","_useState9","_useState10","footingRectangular","setFootingReactangular","_useState11","_useState12","footingCircular","setFootingCircular","_useState13","_useState14","columnCount","setColumnCount","small","e","target","value","xxsm","object","WallFootingDetails","depthCHB","setDepthCHB","depthWallFooting","setDepthWallFooting","widthFooting","setWidthFooting","wallPerimeter","setWallPerimeter","GravelBedding","gravelBeddingDepth","setGravelBeddingDepth","SepticTankDetails","septicTank","setSepticTank","height","area","onFill","setOnFill","SlabDetail","slabDetailArea","setSlabDetailArea","Manpower","numberLaborer","setNumberLaborer","numberForeman","setNumberForeman","laborerWage","setLaborerWage","foremanWage","setForemanWage","Earthworks","columnFootingFormCount","setColumnFootingFormCount","wallFootingFormCount","setWallFootingFormCount","septicTankFormCount","setSpeticTankFormCount","onFillFormCount","setOnFillFormCount","incrementColumnFootingFormCount","count","incrementWallFootingFormCount","incrementSepticTankFormCount","incrementOnFillFormCOunt","toConsumableArray","Array","i","earthworks_estimation_ColumnFootingDetails","formId","earthworks_estimation_WallFootingDetails","earthworks_estimation_GravelBedding","earthworks_estimation_SepticTankDetails","OnFill","earthworks_estimation_SlabDetail","earthworks_estimation_Manpower","ColumnDetails","undefined","columnHeight","setColumnHeight","BeamDetails","beamDimensions","setBeamDimensions","length","amount","beamValues","setBeamValues","beamCount","setBeamCount","dimensions","icon","console","log","numberSkilled","setNumberSkilled","skilledWage","setSkilledWage","Formworks","routes","path","exact","component","Redirect","columnFormCount","setColumnFormCount","beamFormCount","setBeamFormCount","incrementBeamFormCount","formworks_estimation_ColumnDetails","incrementColumnFormCount","formworks_estimation_BeamDetails","formworks_estimation_Manpower","GoogleAnalytics","initialize","process","REACT_APP_GAID","withTracker","WrappedComponent","options","arguments","trackPage","page","set","pageview","BASENAME","REACT_APP_BASENAME","_Component","HOC","apply","inherits","createClass","location","pathname","search","concat","prevProps","currentPage","nextPage","App","BrowserRouter","basename","route","index","Route","Boolean","window","hostname","match","renderReactDom","ReactDOM","render","document","getElementById","cordova","addEventListener","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f358d597.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shards-dashboards-logo.60a85991.svg\";","export default {\n  CHANGE: \"CHANGE\",\n  TOGGLE_SIDEBAR: \"TOGGLE_SIDEBAR\"\n};\n","import { Dispatcher } from \"flux\";\n\nexport default new Dispatcher();\n","import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems()\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n","export default function() {\n  return [\n    {\n      title: \"Estimations\",\n      to: \"/estimations\",\n      htmlBefore: '<i class=\"material-icons\">edit</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Estimation\",\n      to: \"/estimations-add\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Earthworks Estimation\",\n      to: \"/estimations-earthworks\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Formworks Estimation\",\n      to: \"/estimations-formworks\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Concrete Estimation\",\n      to: \"/estimations-concrete\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Masonry Estimation\",\n      to: \"/estimations-masonry\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    },\n    {\n      title: \"Add Steelworks Estimation\",\n      to: \"/estimations-steelworks\",\n      htmlBefore: '<i class=\"material-icons\">add</i>',\n      htmlAfter: \"\"\n    }\n  ];\n}\n","import React from \"react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass NavbarToggle extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    return (\n      <nav className=\"nav\">\n        {/* eslint-disable-next-line jsx-a11y/anchor-is-valid */}\n        <a href=\"#\" onClick={this.handleClick} className=\"nav-link nav-link-icon toggle-sidebar d-sm-inline d-md-inline d-lg-none text-center\">\n          <i className=\"material-icons\">&#xE5D2;</i>\n        </a>\n      </nav>\n    )\n  }\n}\n\nexport default NavbarToggle;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Container, Navbar } from \"shards-react\";\n\nimport NavbarToggle from \"./NavbarToggle\";\n\nconst MainNavbar = ({ layout, stickyTop }) => {\n  const classes = classNames(\n    \"main-navbar\",\n    \"bg-white\",\n    stickyTop && \"sticky-top\"\n  );\n\n  return (\n    <div className={classes}>\n      <Container className=\"p-0\">\n        <Navbar type=\"light\" className=\"align-items-stretch flex-md-nowrap p-0\">\n          <NavbarToggle />\n        </Navbar>\n      </Container>\n    </div>\n  );\n};\n\nMainNavbar.propTypes = {\n  /**\n   * The layout type where the MainNavbar is used.\n   */\n  layout: PropTypes.string,\n  /**\n   * Whether the main navbar is sticky to the top, or not.\n   */\n  stickyTop: PropTypes.bool\n};\n\nMainNavbar.defaultProps = {\n  stickyTop: true\n};\n\nexport default MainNavbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Navbar, NavbarBrand } from \"shards-react\";\n\nimport { Dispatcher, Constants } from \"../../../flux\";\n\nclass SidebarMainNavbar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleToggleSidebar = this.handleToggleSidebar.bind(this);\n  }\n\n  handleToggleSidebar() {\n    Dispatcher.dispatch({\n      actionType: Constants.TOGGLE_SIDEBAR\n    });\n  }\n\n  render() {\n    const { hideLogoText } = this.props;\n    return (\n      <div className=\"main-navbar\">\n        <Navbar\n          className=\"align-items-stretch bg-white flex-md-nowrap border-bottom p-0\"\n          type=\"light\"\n        >\n          <NavbarBrand\n            className=\"w-100 mr-0\"\n            href=\"#\"\n            style={{ lineHeight: \"25px\" }}\n          >\n            <div className=\"d-table m-auto\">\n              <img\n                id=\"main-logo\"\n                className=\"d-inline-block align-top mr-1\"\n                style={{ maxWidth: \"25px\" }}\n                src={require(\"../../../images/shards-dashboards-logo.svg\")}\n                alt=\"Estimato\"\n              />\n              {!hideLogoText && (\n                <span className=\"d-none d-md-inline ml-1\">\n                  Estimato\n                </span>\n              )}\n            </div>\n          </NavbarBrand>\n          {/* eslint-disable-next-line */}\n          <a\n            className=\"toggle-sidebar d-sm-inline d-md-none d-lg-none\"\n            onClick={this.handleToggleSidebar}\n          >\n            <i className=\"material-icons\">&#xE5C4;</i>\n          </a>\n        </Navbar>\n      </div>\n    );\n  }\n}\n\nSidebarMainNavbar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nSidebarMainNavbar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default SidebarMainNavbar;\n","import React from \"react\";\nimport {\n  Form,\n  FormInput,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText\n} from \"shards-react\";\n\nexport default () => (\n  <Form className=\"main-sidebar__search w-100 border-right d-sm-flex d-md-none d-lg-none\" style={{ display: \"flex\", minHeight: \"45px\" }}>\n    <InputGroup seamless className=\"ml-3\">\n      <InputGroupAddon type=\"prepend\">\n        <InputGroupText>\n          <i className=\"material-icons\">search</i>\n        </InputGroupText>\n        <FormInput\n          className=\"navbar-search\"\n          placeholder=\"Search for something...\"\n          aria-label=\"Search\"\n        />\n      </InputGroupAddon>\n    </InputGroup>\n  </Form>\n);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { NavLink as RouteNavLink } from \"react-router-dom\";\nimport { NavItem, NavLink } from \"shards-react\";\n\nconst SidebarNavItem = ({ item }) => (\n  <NavItem>\n    <NavLink tag={RouteNavLink} to={item.to}>\n      {item.htmlBefore && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlBefore }}\n        />\n      )}\n      {item.title && <span>{item.title}</span>}\n      {item.htmlAfter && (\n        <div\n          className=\"d-inline-block item-icon-wrapper\"\n          dangerouslySetInnerHTML={{ __html: item.htmlAfter }}\n        />\n      )}\n    </NavLink>\n  </NavItem>\n);\n\nSidebarNavItem.propTypes = {\n  /**\n   * The item object.\n   */\n  item: PropTypes.object\n};\n\nexport default SidebarNavItem;\n","import React from \"react\";\nimport { Nav } from \"shards-react\";\n\nimport SidebarNavItem from \"./SidebarNavItem\";\nimport { Store } from \"../../../flux\";\n\nclass SidebarNavItems extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      navItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      navItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const { navItems: items } = this.state;\n    return (\n      <div className=\"nav-wrapper\">\n        <Nav className=\"nav--no-borders flex-column\">\n          {items.map((item, idx) => (\n            <SidebarNavItem key={idx} item={item} />\n          ))}\n        </Nav>\n      </div>\n    )\n  }\n}\n\nexport default SidebarNavItems;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { Col } from \"shards-react\";\n\nimport SidebarMainNavbar from \"./SidebarMainNavbar\";\nimport SidebarSearch from \"./SidebarSearch\";\nimport SidebarNavItems from \"./SidebarNavItems\";\n\nimport { Store } from \"../../../flux\";\n\nclass MainSidebar extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      menuVisible: false,\n      sidebarNavItems: Store.getSidebarItems()\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  componentWillMount() {\n    Store.addChangeListener(this.onChange);\n  }\n\n  componentWillUnmount() {\n    Store.removeChangeListener(this.onChange);\n  }\n\n  onChange() {\n    this.setState({\n      ...this.state,\n      menuVisible: Store.getMenuState(),\n      sidebarNavItems: Store.getSidebarItems()\n    });\n  }\n\n  render() {\n    const classes = classNames(\n      \"main-sidebar\",\n      \"px-0\",\n      \"col-12\",\n      this.state.menuVisible && \"open\"\n    );\n\n    return (\n      <Col\n        tag=\"aside\"\n        className={classes}\n        lg={{ size: 2 }}\n        md={{ size: 3 }}\n      >\n        <SidebarMainNavbar hideLogoText={this.props.hideLogoText} />\n        <SidebarSearch />\n        <SidebarNavItems />\n      </Col>\n    );\n  }\n}\n\nMainSidebar.propTypes = {\n  /**\n   * Whether to hide the logo text, or not.\n   */\n  hideLogoText: PropTypes.bool\n};\n\nMainSidebar.defaultProps = {\n  hideLogoText: false\n};\n\nexport default MainSidebar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Container, Row, Col } from \"shards-react\";\n\nimport MainNavbar from \"../components/layout/MainNavbar/MainNavbar\";\nimport MainSidebar from \"../components/layout/MainSidebar/MainSidebar\";\n\nconst DefaultLayout = ({ children, noNavbar, noFooter }) => (\n  <Container fluid>\n    <Row>\n      <MainSidebar />\n      <Col\n        className=\"main-content p-0\"\n        lg={{ size: 10, offset: 2 }}\n        md={{ size: 9, offset: 3 }}\n        sm=\"12\"\n        tag=\"main\"\n      >\n        {!noNavbar && <MainNavbar />}\n        {children}\n      </Col>\n    </Row>\n  </Container>\n);\n\nDefaultLayout.propTypes = {\n  /**\n   * Whether to display the navbar, or not.\n   */\n  noNavbar: PropTypes.bool,\n  /**\n   * Whether to display the footer, or not.\n   */\n  noFooter: PropTypes.bool\n};\n\nDefaultLayout.defaultProps = {\n  noNavbar: false,\n  noFooter: false\n};\n\nexport default DefaultLayout;\n","import React from \"react\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport { Col } from \"shards-react\";\n\nconst PageTitle = ({ title, subtitle, className, ...attrs }) => {\n  const classes = classNames(\n    className,\n    \"text-center\",\n    \"text-md-left\",\n    \"mb-sm-0\"\n  );\n\n  return (\n    <Col xs=\"12\" sm=\"4\" className={classes} { ...attrs }>\n      <span className=\"text-uppercase page-subtitle\">{subtitle}</span>\n      <h3 className=\"page-title\">{title}</h3>\n    </Col>\n  )\n};\n\nPageTitle.propTypes = {\n  /**\n   * The page title.\n   */\n  title: PropTypes.string,\n  /**\n   * The page subtitle.\n   */\n  subtitle: PropTypes.string\n};\n\nexport default PageTitle;\n","import React from \"react\";\r\nimport {\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormInput,\r\n  Button\r\n} from \"shards-react\";\r\n\r\nimport \"react-quill/dist/quill.snow.css\";\r\nimport \"../../assets/quill.css\";\r\n\r\nconst AddNewEstimationForm = () => (\r\n  <ListGroup flush>\r\n    <ListGroupItem className=\"p-3\">\r\n      <Row>\r\n        <Col>\r\n          <Form>\r\n            <Row form>\r\n              <Col md=\"12\" className=\"form-group\">\r\n                <label htmlFor=\"es-estimation-label\">Estimation Label</label>\r\n                <FormInput\r\n                  id=\"es-estimation-label\"\r\n                  type=\"text\"\r\n                  placeholder=\"New Estimation Label\"\r\n                />\r\n              </Col>\r\n            </Row>\r\n\r\n            <Button type=\"submit\">Create New Estimation</Button>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </ListGroupItem>\r\n  </ListGroup>\r\n);\r\n\r\nexport default AddNewEstimationForm;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AddNewEstimation from \"../components/add-new-estimation/AddNewEstimationForm\";\r\n\r\nfunction Estimations(props) {\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Estimations\" subtitle=\"All Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            <Row>\r\n                <Col>\r\n                    <AddNewEstimation/>\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Estimations;","import React from \"react\";\r\nimport { Container, Row, Col } from \"shards-react\";\r\n\r\nimport PageTitle from \"../components/common/PageTitle\";\r\nimport AddNewEstimationForm from '../components/add-new-estimation/AddNewEstimationForm';\r\n\r\nconst AddNewEstimation = () => (\r\n  <Container fluid className=\"main-content-container px-4 pb-4\">\r\n    {/* Page Header */}\r\n    <Row noGutters className=\"page-header py-4\">\r\n      <PageTitle sm=\"4\" title=\"Add New Estimation\" subtitle=\"Estimations\" className=\"text-sm-left\" />\r\n    </Row>\r\n\r\n    <Row>\r\n      {/* Editor */}\r\n      <Col lg=\"12\" md=\"12\">\r\n        <AddNewEstimationForm />\r\n      </Col>\r\n    </Row>\r\n  </Container>\r\n);\r\n\r\nexport default AddNewEstimation;\r\n","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnFootingDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n    const [footingType, setFootingType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: null, y: null, z: null});\r\n    const [columnCircular, setColumnCircular] = useState({d: null, z: null});\r\n\r\n    const [footingRectangular, setFootingReactangular] = useState({x: null, y: null, z: null});\r\n    const [footingCircular, setFootingCircular] = useState({d: null, z: null});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Column Footing Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"ew-cfd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.x = e.target.value; return object;})} value={columnRectangular.x} id=\"ew-cfd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.y = e.target.value; return object;})} value={columnRectangular.y} id=\"ew-cfd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.z = e.target.value; return object;})} value={columnRectangular.z} id=\"ew-cfd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => setColumnCircular(object => {object.d = e.target.value; return object;})} value={columnCircular.d} id=\"ew-cfd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setColumnCircular(object => {object.z = e.target.value; return object;})} value={columnCircular.z} id=\"ew-cfd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-type-of-footing\">Type of Footing</label>\r\n                                        <FormSelect onChange={e => setFootingType(e.target.value)} id=\"ew-cfd-type-of-footing\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { footingType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.x = e.target.value; return object;})} value={footingRectangular.x} id=\"ew-cfd-footing-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.y = e.target.value; return object;})} value={footingRectangular.y} id=\"ew-cfd-footing-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setFootingReactangular(object => {object.z = e.target.value; return object;})} value={footingRectangular.z} id=\"ew-cfd-footing-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { footingType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => setFootingCircular(object => {object.d = e.target.value; return object;})} value={footingCircular.d} id=\"ew-cfd-footing-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-cfd-footing-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setFootingCircular(object => {object.z = e.target.value; return object;})} value={footingCircular.z} id=\"ew-cfd-footing-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Columns</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} value={columnCount} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnFootingDetails;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction WallFootingDetails(props) {\r\n    const [depthCHB, setDepthCHB] = useState();\r\n    const [depthWallFooting, setDepthWallFooting] = useState();\r\n    const [widthFooting, setWidthFooting] = useState();\r\n    const [wallPerimeter, setWallPerimeter] = useState();\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Wall Footing Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-depth-chb\">Depth of CHB from NGL (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-depth-chb\" onChange={e => setDepthCHB(e.target.value)} value={depthCHB} placeholder=\"Enter depth in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-depth-wall-footing\">Depth of Wall Footing (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-depth-wall-footing\" onChange={e => setDepthWallFooting(e.target.value)} value={depthWallFooting} placeholder=\"Enter depth in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-width-footing\">Width of Footing (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-width-footing\" onChange={e => setWidthFooting(e.target.value)} value={widthFooting} placeholder=\"Enter width in meters\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-wfd-wall-perimiter\">Wall Perimiter (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-wfd-wall-perimiter\" onChange={e => setWallPerimeter(e.target.value)} value={wallPerimeter} placeholder=\"Enter perimeter in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default WallFootingDetails;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction GravelBedding(props) {\r\n    const [gravelBeddingDepth, setGravelBeddingDepth] = useState();\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Gravel Bedding</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-gravel-bedding-depth\">Gravel Bedding (m)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-gravel-bedding-depth\" onChange={e => setGravelBeddingDepth(e.target.value)} value={gravelBeddingDepth} placeholder=\"Enter gravel bedding in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default GravelBedding;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticTankDetails(props) {\r\n    const [septicTank, setSepticTank] = useState({x: null, y: null, z:null});\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Septic Tank Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.x = e.target.value; return object;})} value={septicTank.x} id=\"ew-septic-tank-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.y = e.target.value; return object;})} value={septicTank.y} id=\"ew-septic-tank-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"ew-septic-tank-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setSepticTank(object => {object.z = e.target.value; return object;})} value={septicTank.z} id=\"ew-septic-tank-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticTankDetails;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SepticTankDetails(props) {\r\n    const [onFill, setOnFill] = useState({height: null, area: null});\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">On-Fill</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-on-fill-height\">On-Fill Height (m)</label>\r\n                                        <FormInput onChange={e => setOnFill(object => {object.height = e.target.value; return object;})} value={onFill.height} id=\"ew-on-fill-height\" placeholder=\"Enter Height in meters\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-on-fill-area\">Area to be Filled (m²)</label>\r\n                                        <FormInput onChange={e => setOnFill(object => {object.area = e.target.value; return object;})} value={onFill.area} id=\"ew-on-fill-area\" placeholder=\"Enter area in meter squared\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SepticTankDetails;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction SlabDetail(props) {\r\n    const [slabDetailArea, setSlabDetailArea] = useState();\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Gravel Bedding</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-slab-detail-area\">Area Used for Ground Slab (m²)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-slab-detail-area\" onChange={e => setSlabDetailArea(e.target.value)} value={slabDetailArea} placeholder=\"Enter gravel bedding in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default SlabDetail;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState();\r\n    const [numberForeman, setNumberForeman] = useState();\r\n    const [laborerWage, setLaborerWage] = useState();\r\n    const [foremanWage, setForemanWage] = useState();\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} value={numberLaborer} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-foreman\" onChange={e => setNumberForeman(e.target.value)} value={numberForeman} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} value={laborerWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"ew-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} value={foremanWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport ColumnFootingDetails from \"../../components/earthworks-estimation/ColumnFootingDetails\";\r\nimport WallFootingDetails from \"../../components/earthworks-estimation/WallFootingDetails\";\r\nimport GravelBedding from \"../../components/earthworks-estimation/GravelBedding\";\r\nimport SepticTankDetails from \"../../components/earthworks-estimation/SepticTankDetails\";\r\nimport OnFill from \"../../components/earthworks-estimation/OnFill\";\r\nimport SlabDetail from '../../components/earthworks-estimation/SlabDetail';\r\nimport Manpower from '../../components/earthworks-estimation/Manpower';\r\n\r\nfunction Earthworks(props) {\r\n    const [columnFootingFormCount, setColumnFootingFormCount] = useState(1);\r\n    const [wallFootingFormCount, setWallFootingFormCount] = useState(1);\r\n    const [septicTankFormCount, setSpeticTankFormCount] = useState(1);\r\n    const [onFillFormCount, setOnFillFormCount] = useState(1);\r\n\r\n    const incrementColumnFootingFormCount = () => {\r\n        setColumnFootingFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementWallFootingFormCount = () => {\r\n        setWallFootingFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementSepticTankFormCount = () => {\r\n        setSpeticTankFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementOnFillFormCOunt = () => {\r\n        setOnFillFormCount(count => count + 1);\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Earthworks\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            <Row>\r\n                <Col>\r\n                    {[...Array(columnFootingFormCount)].map((e, i) => <ColumnFootingDetails key={i} formId={i} incrementColumnFootingFormCount={incrementColumnFootingFormCount} />)}\r\n                    {[...Array(wallFootingFormCount)].map((e, i) => <WallFootingDetails key={i} formId={i} incrementColumnFootingFormCount={incrementWallFootingFormCount} />)}\r\n                    <GravelBedding />\r\n                    {[...Array(septicTankFormCount)].map((e, i) => <SepticTankDetails key={i} formId={i} incrementColumnFootingFormCount={incrementSepticTankFormCount} />)}\r\n                    {[...Array(onFillFormCount)].map((e, i) => <OnFill key={i} formId={i} incrementColumnFootingFormCount={incrementOnFillFormCOunt} />)}\r\n                    <SlabDetail />\r\n                    <Manpower />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Earthworks;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    FormSelect,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction ColumnDetails(props) {\r\n    const [columnType, setColumnType] = useState('rectangular');\r\n\r\n    const [columnRectangular, setColumnRectangular] = useState({x: undefined, y: undefined, z: undefined});\r\n    const [columnCircular, setColumnCircular] = useState({d: undefined, z: undefined});\r\n\r\n    const [columnCount, setColumnCount] = useState();\r\n    const [columnHeight, setColumnHeight] = useState();\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Column Footing Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"12\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-type-of-column\">Type of Column</label>\r\n                                        <FormSelect onChange={e => setColumnType(e.target.value)} id=\"fw-cd-type-of-column\">\r\n                                            <option value=\"rectangular\">Rectangular</option>\r\n                                            <option value=\"circular\">Circular</option>\r\n                                        </FormSelect>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                                { columnType === 'rectangular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-x\">Length (x)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.x = e.target.value; return object;})} value={columnRectangular.x} id=\"fw-cd-column-rectangular-x\" placeholder=\"Enter the value x\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-y\">Width (y)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.y = e.target.value; return object;})} value={columnRectangular.y} id=\"fw-cd-column-rectangular-y\" placeholder=\"Enter the value y\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"4\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-cd-column-rectangular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setColumnRectangular(object => {object.z = e.target.value; return object;})} value={columnRectangular.z} id=\"fw-cd-column-rectangular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                { columnType === 'circular' &&\r\n                                    <Row form>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-circular-d\">Diameter (d)</label>\r\n                                            <FormInput onChange={e => setColumnCircular(object => {object.d = e.target.value; return object;})} value={columnCircular.d} id=\"fw-cd-column-circular-d\" placeholder=\"Enter the value d\" />\r\n                                        </Col>\r\n                                        <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-cd-column-circular-z\">Depth (z)</label>\r\n                                            <FormInput onChange={e => setColumnCircular(object => {object.z = e.target.value; return object;})} value={columnCircular.z} id=\"fw-cd-circular-circular-z\" placeholder=\"Enter the value z\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                }\r\n\r\n                                <Row form>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-count\">Number of Columns</label>\r\n                                        <FormInput onChange={e => setColumnCount(e.target.value)} value={columnCount} type=\"number\" id=\"ew-cfd-column-count\" placeholder=\"Enter number of columns\" />\r\n                                    </Col>\r\n                                    <Col xxsm=\"6\" className=\"form-group\">\r\n                                        <label htmlFor=\"ew-cfd-column-height\">Column Height (m)</label>\r\n                                        <FormInput onChange={e => setColumnHeight(e.target.value)} value={columnHeight} type=\"number\" id=\"ew-cfd-column-height\" placeholder=\"Enter height in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default ColumnDetails;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody,\r\n    Button\r\n  } from \"shards-react\";\r\n\r\nfunction BeamDetails(props) {\r\n    const [beamDimensions, setBeamDimensions] = useState({x: undefined, y: undefined});\r\n    const [beamValues, setBeamValues] = useState([{length: undefined, amount: undefined}]);\r\n    const [beamCount, setBeamCount] = useState(1);\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Beam Details</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n\r\n            <CardBody className=\"p-0\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3 pb-0\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-length\">Length (x)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-length\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.x = e.target.value;\r\n                                            return dimensions;\r\n                                        })} value={beamDimensions.x} placeholder=\"Enter length in meters\" />\r\n                                    </Col>\r\n\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-bd-width\">Width (y)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-bd-width\" onChange={e => setBeamDimensions(dimensions => {\r\n                                            dimensions.y = e.target.value;\r\n                                            return dimensions;\r\n                                        })} value={beamDimensions.y} placeholder=\"Enter width in meters\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col md=\"12\">\r\n                                <h4>Beams</h4>\r\n                            </Col>\r\n                            <Col md=\"12\">\r\n                                {[...Array(beamCount)].map((e, i) => \r\n                                    <Row form key={i} id={i}>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-length\">Beam Length (m)</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-length\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: 0, amount: 0};\r\n\r\n                                                    value[i].length = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} value={beamValues[i] ? beamValues[i].length : 0} placeholder=\"Enter length in meters\" />\r\n                                        </Col>\r\n                                        <Col md=\"6\" className=\"form-group\">\r\n                                            <label htmlFor=\"fw-bd-beam-amount\">Beam Amount</label>\r\n                                            <FormInput type=\"number\" id=\"fw-bd-beam-amount\" onChange={e => {\r\n                                                const target = e.target;\r\n\r\n                                                setBeamValues(value => {\r\n                                                    // Push into the value to define it\r\n                                                    if (!value[i]) value[i] = {length: 0, amount: 0};\r\n\r\n                                                    value[i].amount = target.value;\r\n                                                    return value;\r\n                                                })\r\n                                            }} value={beamValues[i] ? beamValues[i].amount : 0} placeholder=\"Enter amount\" />\r\n                                        </Col>\r\n                                    </Row>\r\n                                )}\r\n                                <Button type=\"submit\" icon=\"add\" onClick={e => {\r\n                                    console.log(beamValues);\r\n                                    \r\n                                    setBeamCount(e => e + 1);\r\n                                }}>Add a Beam</Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default BeamDetails;","import React, { useState } from 'react';\r\nimport {\r\n    ListGroup,\r\n    ListGroupItem,\r\n    Row,\r\n    Col,\r\n    FormInput,\r\n    Card,\r\n    CardHeader,\r\n    CardBody\r\n  } from \"shards-react\";\r\n\r\nfunction Manpower(props) {\r\n    const [numberLaborer, setNumberLaborer] = useState();\r\n    const [numberForeman, setNumberForeman] = useState();\r\n    const [numberSkilled, setNumberSkilled] = useState();\r\n    const [laborerWage, setLaborerWage] = useState();\r\n    const [foremanWage, setForemanWage] = useState();\r\n    const [skilledWage, setSkilledWage] = useState();\r\n\r\n    return (\r\n        <Card small className=\"mb-4\">\r\n            <CardHeader className=\"border-bottom\">\r\n                <h6 className=\"m-0\">Manpower</h6>\r\n\r\n                {/* <button className=\"btn-add-header\" onClick={() => {props.incrementColumnFootingFormCount()}}><i className=\"material-icons\">add</i></button> */}\r\n            </CardHeader>\r\n            <CardBody className=\"p-0 pb-3\">\r\n                <ListGroup flush>\r\n                    <ListGroupItem className=\"p-3\">\r\n                        <Row>\r\n                            <Col>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer\">Number of Laborers</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer\" onChange={e => setNumberLaborer(e.target.value)} value={numberLaborer} placeholder=\"Enter number of Laborers\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman\">Number of Foreman</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman\" onChange={e => setNumberForeman(e.target.value)} value={numberForeman} placeholder=\"Enter number of Foreman\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled\">Number of Skilled</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled\" onChange={e => setNumberSkilled(e.target.value)} value={numberSkilled} placeholder=\"Enter number of Skilled\" />\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row form>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-laborer-wage\">Laborer Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-laborer-wage\" onChange={e => setLaborerWage(e.target.value)} value={laborerWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-foreman-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-foreman-wage\" onChange={e => setForemanWage(e.target.value)} value={foremanWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                    <Col md=\"4\" className=\"form-group\">\r\n                                        <label htmlFor=\"fw-man-skilled-wage\">Foreman Wage (PHP)</label>\r\n                                        <FormInput type=\"number\" id=\"fw-man-skilled-wage\" onChange={e => setSkilledWage(e.target.value)} value={skilledWage} placeholder=\"Enter amount in PHP\" />\r\n                                    </Col>\r\n                                </Row>\r\n                            </Col>\r\n                        </Row>\r\n                    </ListGroupItem>\r\n                </ListGroup>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default Manpower;","import React, {useState} from 'react';\r\n\r\nimport { Container, Row, Col } from \"shards-react\";\r\nimport PageTitle from \"../../components/common/PageTitle\";\r\n\r\nimport ColumnDetails from '../../components/formworks-estimation/ColumnDetails';\r\nimport BeamDetails from '../../components/formworks-estimation/BeamDetails';\r\nimport Manpower from '../../components/formworks-estimation/Manpower';\r\n\r\nfunction Formworks(props) {\r\n    const [columnFormCount, setColumnFormCount] = useState(1);\r\n    const [beamFormCount, setBeamFormCount] = useState(1);\r\n    const [slabFormCount, setSlabFormCount] = useState(1);\r\n\r\n    const incrementColumnFormCount = () => {\r\n        setColumnFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementBeamFormCount = () => {\r\n        setBeamFormCount(count => count + 1);\r\n    }\r\n\r\n    const incrementSlabFormCount = () => {\r\n        setSlabFormCount(count => count + 1);\r\n    }\r\n\r\n    return (\r\n        <Container fluid className=\"main-content-container px-4 pb-4\">\r\n            {/* Page Header */}\r\n            <Row noGutters className=\"page-header py-4\">\r\n                <PageTitle sm=\"4\" title=\"Formworks\" subtitle=\"Estimation\" className=\"text-sm-left\" />\r\n            </Row>\r\n\r\n            {/* Default Dark Table */}\r\n            <Row>\r\n                <Col>\r\n                    {[...Array(columnFormCount)].map((e, i) => <ColumnDetails key={i} formId={i} incrementColumnFormCount={incrementColumnFormCount} />)}\r\n                    {[...Array(beamFormCount)].map((e, i) => <BeamDetails key={i} formId={i} incrementBeamFormCount={incrementBeamFormCount} />)}\r\n                    {/* {[...Array(slabFormCount)].map((e, i) => <SepticTankDetails key={i} formId={i} incrementSlabFormCount={incrementSlabFormCount} />)} */}\r\n                    <Manpower />\r\n                </Col>\r\n            </Row>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default Formworks;","import React from \"react\";\nimport { Redirect } from \"react-router-dom\";\n\n// Layout Types\nimport { DefaultLayout } from \"./layouts\";\n\n// Route Views\nimport Estimations from \"./views/Estimations\";\nimport AddNewEstimation from \"./views/AddNewEstimation\";\nimport Earthworks from \"./views/Estimations/Earthworks\";\nimport Formworks from \"./views/Estimations/Formworks\";\n\nexport default [\n  {\n    path: \"/\",\n    exact: true,\n    layout: DefaultLayout,\n    component: () => <Redirect to=\"/estimations\" />\n  },\n  {\n    path: \"/estimations\",\n    layout: DefaultLayout,\n    component: Estimations\n  },\n  {\n    path: \"/estimations-add\",\n    layout: DefaultLayout,\n    component: AddNewEstimation\n  },\n  {\n    path: \"/estimations-earthworks\",\n    layout: DefaultLayout,\n    component: Earthworks\n  },\n  {\n    path: \"/estimations-formworks\",\n    layout: DefaultLayout,\n    component: Formworks\n  },\n  {\n    path: \"/estimations-concrete\",\n    layout: DefaultLayout,\n    component: Earthworks\n  },\n  {\n    path: \"/estimations-masonry\",\n    layout: DefaultLayout,\n    component: Earthworks\n  },\n  {\n    path: \"/estimations-steelworks\",\n    layout: DefaultLayout,\n    component: Earthworks\n  }\n];","import React, { Component } from \"react\";\nimport GoogleAnalytics from \"react-ga\";\n\nGoogleAnalytics.initialize(process.env.REACT_APP_GAID || \"UA-115105611-2\");\n\nconst withTracker = (WrappedComponent, options = {}) => {\n  const trackPage = page => {\n    if (process.env.NODE_ENV !== \"production\") {\n      return;\n    }\n\n    GoogleAnalytics.set({\n      page,\n      ...options\n    });\n    GoogleAnalytics.pageview(page);\n  };\n\n  const BASENAME = process.env.REACT_APP_BASENAME || \"\";\n\n  // eslint-disable-next-line\n  const HOC = class extends Component {\n    componentDidMount() {\n      // eslint-disable-next-line\n      const page = this.props.location.pathname + this.props.location.search;\n      trackPage(`${BASENAME}${page}`);\n    }\n\n    componentDidUpdate(prevProps) {\n      const currentPage =\n        prevProps.location.pathname + prevProps.location.search;\n      const nextPage =\n        this.props.location.pathname + this.props.location.search;\n\n      if (currentPage !== nextPage) {\n        trackPage(`${BASENAME}${nextPage}`);\n      }\n    }\n\n    render() {\n      return <WrappedComponent {...this.props} />;\n    }\n  };\n\n  return HOC;\n};\n\nexport default withTracker;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport routes from \"./routes\";\nimport withTracker from \"./withTracker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./shards-dashboard/styles/shards-dashboards.1.1.0.min.css\";\n\nexport default () => (\n  <Router basename={process.env.REACT_APP_BASENAME || \"\"}>\n    <div>\n      {routes.map((route, index) => {\n        return (\n          <Route\n            key={index}\n            path={route.path}\n            exact={route.exact}\n            component={withTracker(props => {\n              return (\n                <route.layout {...props}>\n                  <route.component {...props} />\n                </route.layout>\n              );\n            })}\n          />\n        );\n      })}\n    </div>\n  </Router>\n);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport * as serviceWorker from './serviceWorker';\n\nconst renderReactDom = () => {\n    ReactDOM.render(<App />, document.getElementById('root'));\n};\n\nif (window.cordova) {\n    document.addEventListener('deviceready', () => {\n        renderReactDom();\n    }, false);\n} else {\n    renderReactDom();\n}\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}